<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">THAPSANG.NET</title>
<generator uri="https://github.com/mojombo/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://thapsang.net/feed.xml" />
<link rel="alternate" type="text/html" href="http://thapsang.net" />
<updated>2015-05-22T17:57:28+07:00</updated>
<id>http://thapsang.net/</id>
<author>
  <name>Ta Ly</name>
  <uri>http://thapsang.net/</uri>
  <email>taly2808@gmail.com</email>
</author>


<entry>
  <title type="html"><![CDATA[Tự tạo handlebars helper cho Ghost blog]]></title>
  <link>http://thapsang.net/ghost/tu-tao-handlebars-helper-cho-ghost-blog</link>
  <id>http://thapsang.net/ghost/tu-tao-handlebars-helper-cho-ghost-blog</id>
  <published>2015-05-11T00:00:00+07:00</published>
  <updated>2015-05-11T00:00:00+07:00</updated>
  <author>
    <name>Ta Ly</name>
    <uri>http://thapsang.net</uri>
    <email>taly2808@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Ghost blog hiện còn khá mới mẻ và vẫn đang tiếp tục phát triển. Do đó, Ghost chưa thể cung cấp được hết các yêu cầu cho các developer. Tuy vậy, các developer có thể tự tạo cho mình các helper phục vụ cho mục đích của mình. Bài viết này sẽ hướng dẫn cách bạn tự tạo helper cho riêng mình.&lt;/p&gt;

&lt;p&gt;Theo các tài liệu tôi đã đọc cho đến thời điểm viết bài, có 2 cách bạn có thể tạo helper;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Thêm file helper riêng của bạn vào trong thư mục &lt;strong&gt;core/server/helpers/&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Tạo file helper riêng của bạn trong &lt;strong&gt;thư mục gốc của blog&lt;/strong&gt; và khởi tạo nó trong file &lt;strong&gt;config.js&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Bạn nên chọn cách thứ 2 vì file helper của bạn sẽ không bị mất mỗi khi bạn &lt;a href=&quot;http://support.ghost.org/how-to-upgrade/&quot;&gt;nâng cấp Ghost blog lên phiên bản mới&lt;/a&gt;. Sau đây là chi tiết cách thực hiện.&lt;/p&gt;

&lt;h2 id=&quot;registering-a-helper&quot;&gt;Registering a Helper&lt;/h2&gt;

&lt;p&gt;Để đăng ký một Helper, bạn tạo ra một file &lt;strong&gt;helper.js&lt;/strong&gt; và đặt nó trong thư mục gốc của blog. Bạn có thể sử dụng &lt;a href=&quot;http://stackoverflow.com/questions/8853396/logical-operator-in-a-handlebars-js-if-conditional/16315366#16315366&quot;&gt;một ví dụ trên StackOverflow&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;helper.js&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hbs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;express-hbs&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;  
    &lt;span class=&quot;nx&quot;&gt;hbs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;registerHelper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;cond&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;==&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;===&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;lt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;lt;=&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
               &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
               &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;gt;=&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;amp;&amp;amp;&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;||&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;initializing-your-helper&quot;&gt;Initializing your Helper&lt;/h2&gt;

&lt;p&gt;Để Ghost có thể sử dụng được Helper của bạn, bạn cần phải thực hiện một module mới trong file &lt;strong&gt;config.js&lt;/strong&gt;. Chúng ta có thể dễ dàng thực hiện việc đó bằng cách thêm &lt;strong&gt;require(‘./helpers’)();&lt;/strong&gt; vào phía trên của file &lt;strong&gt;config.js&lt;/strong&gt;. Khi đó, file &lt;strong&gt;config.js&lt;/strong&gt; sẽ trông như sau:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// # Ghost Configuration&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Setup your Ghost install for various environments&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Documentation can be found at http://support.ghost.org/config/&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Include any helper functions&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;./helpers&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)();&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;path&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;  
    &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;kt-qu&quot;&gt;Kết quả&lt;/h2&gt;

&lt;p&gt;Bây giờ chúng ta đã có thể sử dụng Helper của riêng mình. Giả sử trong file &lt;strong&gt;index.js&lt;/strong&gt; trong thư mục theme, sau chúng ta thêm đoạn code sau:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cond&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;==&amp;#39;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Success!&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/cond}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nếu 5 &lt;strong&gt;==&lt;/strong&gt; 5, chúng ta sẽ hiển thị thông báo &lt;strong&gt;Success&lt;/strong&gt;. Như vậy là chúng ta đã có thể tạo được Helper riêng cho mình. Nhớ restart blog nhé.&lt;/p&gt;

&lt;h2 id=&quot;ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://zackehh.com/safely-creating-custom-handlebars-helpers/&quot;&gt;Safely creating custom handlebars helpers for ghost blogs&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

  &lt;p&gt;&lt;a href=&quot;http://thapsang.net/ghost/tu-tao-handlebars-helper-cho-ghost-blog&quot;&gt;Tự tạo handlebars helper cho Ghost blog&lt;/a&gt; was originally published by Ta Ly at &lt;a href=&quot;http://thapsang.net&quot;&gt;THAPSANG.NET&lt;/a&gt; on May 11, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Tạo trang contact và gửi mail với Nodemailer cho Ghost blog]]></title>
  <link>http://thapsang.net/ghost/tao-trang-contact-va-gui-mail-voi-nodemailer-cho-ghost-blog</link>
  <id>http://thapsang.net/ghost/tao-trang-contact-va-gui-mail-voi-nodemailer-cho-ghost-blog</id>
  <published>2015-05-09T00:00:00+07:00</published>
  <updated>2015-05-09T00:00:00+07:00</updated>
  <author>
    <name>Ta Ly</name>
    <uri>http://thapsang.net</uri>
    <email>taly2808@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Trước khi thực hiện theo nội dung bài này, bạn cần đảm bảo rằng blog của bạn đã được thiết lập có thể gửi mail. Bạn có thể tham khảo bài &lt;a href=&quot;/ghost/thiet-lap-gui-mail-su-dung-gmail-cho-ghost-blog&quot;&gt;Thiết lập gửi mail sử dụng Gmail cho Ghost blog&lt;/a&gt; để chắc chắn điều này.&lt;/p&gt;

&lt;section&gt;
  &lt;header&gt;
    &lt;h2&gt;Nội dung&lt;/h2&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#thm-contact-form-vo-blog&quot;&gt;Thêm contact form vào blog&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#to-trang-contact-tnh&quot;&gt;Tạo trang contact tĩnh&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#to-trang-contact-bng-template-page-contacthbs&quot;&gt;Tạo trang contact bằng template page-contact.hbs&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#thm-trang-contact-vo-navigation-menu&quot;&gt;Thêm trang contact vào navigation menu&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cp-nht-frontend-controller&quot;&gt;Cập nhật frontend controller&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#tham-chiu-n-nodemailer&quot;&gt;Tham chiếu đến Nodemailer&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#thm-phng-thc-x-l-submit-form&quot;&gt;Thêm phương thức xử lý submit form&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#thm-ng-dn-x-l-form-submit&quot;&gt;Thêm đường dẫn xử lý form submit&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#iu-hng-n-mt-trang-tnh&quot;&gt;Điều hướng đến một trang tĩnh&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;

&lt;h2 id=&quot;thm-contact-form-vo-blog&quot;&gt;Thêm contact form vào blog&lt;/h2&gt;

&lt;p&gt;Bạn có thể tạo trang contact cho blog bằng cách tạo một trang tĩnh (static page) và tạo ra một template với tên &lt;strong&gt;page-contact.hbs&lt;/strong&gt; trong thư mục theme của bạn. Bạn có thể xem chi tiết tại &lt;a href=&quot;http://support.ghost.org/add-contact-form-ghost-blog/&quot;&gt;http://support.ghost.org/add-contact-form-ghost-blog/&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;to-trang-contact-tnh&quot;&gt;Tạo trang contact tĩnh&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Đăng nhập vào blog của bạn.&lt;/li&gt;
  &lt;li&gt;Click vào nút &lt;strong&gt;New post&lt;/strong&gt; ở phía trên navigation menu.&lt;/li&gt;
  &lt;li&gt;Nhập vào tiêu đề của trang.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Chỉnh sửa các thiết lập cho post bằng cách click vào biểu tượng &lt;i class=&quot;icon-gear&quot; style=&quot;color: #1CA6BE; font-size: 1.5em;&quot;&gt;&lt;/i&gt; bên cạnh nút &lt;strong&gt;Save draft&lt;/strong&gt; và tích chọn vào &lt;strong&gt;Turn this post into a static page&lt;/strong&gt;.&lt;/p&gt;

    &lt;figure&gt;
     &lt;img src=&quot;http://thapsang.net/images/ghost/setting-static-contact-page.png&quot; /&gt;
 &lt;/figure&gt;
  &lt;/li&gt;
  &lt;li&gt;Thêm đoạn code html dưới đây vào nội dung của trang:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/mail&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;POST&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Name: &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;  
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Email: &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;email&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;  
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Subject: &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;subject&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;  
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Content:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;  
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&amp;lt;textarea&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cols=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;40&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rows=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/textarea&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Submit&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Lưu ý rằng, chúng ta sẽ sử dụng đường dẫn &lt;strong&gt;/mail&lt;/strong&gt; trong &lt;em&gt;action&lt;/em&gt; là địa chỉ xử lý contact form. Bạn có thể thay đổi nó nếu cần.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Publish&lt;/strong&gt; trang này.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;to-trang-contact-bng-template-page-contacthbs&quot;&gt;Tạo trang contact bằng template page-contact.hbs&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Tạo mới file &lt;strong&gt;page-contact.hbs&lt;/strong&gt; trong thư mục theme gốc mà bạn đang sử dụng.&lt;/li&gt;
  &lt;li&gt;Copy nội dung từ file &lt;strong&gt;page.hbs&lt;/strong&gt; (trong theme &lt;em&gt;casper&lt;/em&gt;) sang. Nội dung của trang lúc này sẽ như thế này:&lt;/li&gt;
&lt;/ol&gt;

&lt;figure&gt;
    &lt;img src=&quot;http://thapsang.net/images/ghost/page-contact-hbs.png&quot; /&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;thm-trang-contact-vo-navigation-menu&quot;&gt;Thêm trang contact vào navigation menu&lt;/h2&gt;

&lt;p&gt;Bạn truy câp vào tab &lt;strong&gt;Navigation&lt;/strong&gt; của mục &lt;strong&gt;Settings&lt;/strong&gt; trong phần backend để thêm trang Contact vào thanh điều hướng.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;http://thapsang.net/images/ghost/add-contact-to-navigation-menu.png&quot; /&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;cp-nht-frontend-controller&quot;&gt;Cập nhật frontend controller&lt;/h2&gt;

&lt;p&gt;Bây giờ, chúng ta cần thêm một phương thức để xử lý gửi mail. Chúng ta sẽ tiến hành cập nhật file &lt;strong&gt;core/server/controllers/frontend.js&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;tham-chiu-n-nodemailer&quot;&gt;Tham chiếu đến Nodemailer&lt;/h3&gt;

&lt;p&gt;Thêm &lt;strong&gt;mailer = require(‘../mail’)&lt;/strong&gt; vào phía trên của file:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;moment&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;moment&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;rss&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;../data/xml/rss&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt;           &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;lodash&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;Promise&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;bluebird&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;api&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;../api&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;../config&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;filters&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;../filters&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;../helpers/template&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;errors&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;../errors&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;routeMatch&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;path-match&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;mailer&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;../mail&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// add node mailer&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;thm-phng-thc-x-l-submit-form&quot;&gt;Thêm phương thức xử lý submit form&lt;/h3&gt;

&lt;p&gt;Bạn có thể thêm phương thức này ngay sau &lt;strong&gt;rss: function(function (req, res, next){ .. },&lt;/strong&gt; và bạn nhớ nhập vào địa chỉ email nhận thư tương ứng nhé.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//action for posting the contact form&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;submitContactForm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mailOptions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// sender address&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 

        &lt;span class=&quot;c1&quot;&gt;// reciever email (add your email here)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;your@email.com&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 

        &lt;span class=&quot;c1&quot;&gt;// subject&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 

        &lt;span class=&quot;c1&quot;&gt;// email body&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39; - From: &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//sending the email&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;mailer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mailOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//this is the response to the end user &lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//should ideally redirect or return a view&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Message was successfully sent.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//response for error&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;There was an error sending the email.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Lưu ý rằng, hồi đáp sẽ chỉ trả lại text trên màn hình. Bạn có thể cần chuyển hướng đến một trang khác để đưa người dùng trở về trang chủ nếu cần. Chúng ta sẽ giải quyết vấn đề này ở phần &lt;a href=&quot;#iu-hng-n-mt-trang-tnh&quot;&gt;Điều hướng đến một trang tĩnh&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;thm-ng-dn-x-l-form-submit&quot;&gt;Thêm đường dẫn xử lý form submit&lt;/h3&gt;

&lt;p&gt;Chúng ta sẽ tiến hành cập nhật file &lt;strong&gt;core/server/routes/frontend.js&lt;/strong&gt;. Thêm: &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;router.post(&#39;/mail&#39;, frontend.submitContactForm)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ngay phía sau đường dẫn: &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;router.get(&#39;*&#39;, frontend.single);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;iu-hng-n-mt-trang-tnh&quot;&gt;Điều hướng đến một trang tĩnh&lt;/h2&gt;

&lt;p&gt;Nếu bạn muốn điều hướng đến một trang tĩnh sau khi gửi mail, bạn làm theo các bước sau:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Tạo một trang tĩnh có địa chỉ post url là &lt;strong&gt;contact-success&lt;/strong&gt; và nhập vào nội dung bạn muốn hiển thị khi người dùng gửi mail thành công.&lt;/li&gt;
  &lt;li&gt;Tạo template &lt;strong&gt;page-contact-success.hbs&lt;/strong&gt; trong thư mục chứa theme.&lt;/li&gt;
  &lt;li&gt;Cập nhật đoạn code để điều hướng đến trang &lt;em&gt;contact-success&lt;/em&gt; bằng lệnh &lt;strong&gt;res.redirect(‘/contact-success’)&lt;/strong&gt;. Khi đó, file &lt;strong&gt;core/server/controllers/frontend.js&lt;/strong&gt; trông sẽ như thế này:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//action for posting the contact form&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;submitContactForm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

       &lt;span class=&quot;p&quot;&gt;....&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//sending the email&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;mailer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mailOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//this will redirect to the static page you&amp;#39;ve created&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;redirect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/contact-success&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;

        &lt;span class=&quot;p&quot;&gt;....&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sau cùng, nếu bạn muốn trang này tự động điều hướng đến trang chủ sau 5 giây, bạn thêm đoạn code javascript dưới đây vào file &lt;strong&gt;page-contact-success.hbs&lt;/strong&gt;, (ngay sau ):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//redirect to home page after 5 seconds.&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//set the redirect url here (&amp;quot;/&amp;quot;) will redirect to the root&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 

    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//set the time here&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Thế là xong. Bạn cũng có thể làm tương tự khi gửi mail không thành công.&lt;/p&gt;

&lt;h2 id=&quot;ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://support.ghost.org/add-contact-form-ghost-blog/&quot;&gt;How do I add a contact form to my Ghost blog?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tarikk.com/ghost-blog-contact-form-using-ghosts-nodemailer/&quot;&gt;Contact form using Ghost’s Nodemailer&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

  &lt;p&gt;&lt;a href=&quot;http://thapsang.net/ghost/tao-trang-contact-va-gui-mail-voi-nodemailer-cho-ghost-blog&quot;&gt;Tạo trang contact và gửi mail với Nodemailer cho Ghost blog&lt;/a&gt; was originally published by Ta Ly at &lt;a href=&quot;http://thapsang.net&quot;&gt;THAPSANG.NET&lt;/a&gt; on May 09, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Thiết lập gửi mail sử dụng Gmail cho Ghost blog]]></title>
  <link>http://thapsang.net/ghost/thiet-lap-gui-mail-su-dung-gmail-cho-ghost-blog</link>
  <id>http://thapsang.net/ghost/thiet-lap-gui-mail-su-dung-gmail-cho-ghost-blog</id>
  <published>2015-05-08T00:00:00+07:00</published>
  <updated>2015-05-08T00:00:00+07:00</updated>
  <author>
    <name>Ta Ly</name>
    <uri>http://thapsang.net</uri>
    <email>taly2808@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Để gửi mail, Ghost sử dụng &lt;a href=&quot;https://github.com/andris9/Nodemailer&quot;&gt;Nodemailer&lt;/a&gt; - một module của Node.js cho phép gửi mail từ một ứng dụng Node.js. Nó cho phép chúng ta sử dụng các dịch vụ mail hỗ trợ SMTP phổ biến như Gmail, Mailgun, Yahoo, SES, etc. Trong bài viết này, chúng ta sẽ thiết lập cho Ghost blog gửi mail sử dụng dịch vụ Gmail.&lt;/p&gt;

&lt;h3 id=&quot;m-file-configjs-bng-trnh-son-tho&quot;&gt;Mở file config.js bằng trình soạn thảo&lt;/h3&gt;

&lt;p&gt;File &lt;strong&gt;config.js&lt;/strong&gt; nằm trong thư mục gốc nơi bạn cài đặt blog. Bạn mở nó với trình soạn thảo mà bạn yêu thích.&lt;/p&gt;

&lt;h3 id=&quot;thm-cu-hnh-cho-gmail&quot;&gt;Thêm cấu hình cho Gmail&lt;/h3&gt;

&lt;p&gt;Tiếp đến, bạn cần thêm đoạn code dưới đây vào trong file &lt;strong&gt;config.js&lt;/strong&gt;. Bạn thay thế giá trị của &lt;strong&gt;user&lt;/strong&gt; và &lt;strong&gt;password&lt;/strong&gt; cho phù hợp.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mail: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    transport: &lt;span class=&quot;s1&quot;&gt;&amp;#39;SMTP&amp;#39;&lt;/span&gt;,
    options: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
       service: &lt;span class=&quot;s1&quot;&gt;&amp;#39;Gmail&amp;#39;&lt;/span&gt;,
       auth: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
           user: &lt;span class=&quot;s1&quot;&gt;&amp;#39;your.gmail.id@gmail.com&amp;#39;&lt;/span&gt;,
           pass: &lt;span class=&quot;s1&quot;&gt;&amp;#39;your-gmail-password&amp;#39;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Các thiết lập cho mail trong các mode tương ứng trông sẽ như sau:&lt;/p&gt;

&lt;div class=&quot;col-md-6&quot;&gt;
&lt;p class=&quot;lead&quot;&gt;
&lt;b&gt;Production mode&lt;/b&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;production: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    url: &lt;span class=&quot;s1&quot;&gt;&amp;#39;http://my-ghost-blog.com&amp;#39;&lt;/span&gt;,
    mail: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        transport: &lt;span class=&quot;s1&quot;&gt;&amp;#39;SMTP&amp;#39;&lt;/span&gt;,
        options: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
           service: &lt;span class=&quot;s1&quot;&gt;&amp;#39;Gmail&amp;#39;&lt;/span&gt;,
           auth: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
               user: &lt;span class=&quot;s1&quot;&gt;&amp;#39;your.gmail.id@gmail.com&amp;#39;&lt;/span&gt;,
               pass: &lt;span class=&quot;s1&quot;&gt;&amp;#39;your-gmail-password&amp;#39;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;col-md-6&quot;&gt;
&lt;p class=&quot;lead&quot;&gt;
&lt;b&gt;Development mode&lt;/b&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;development: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    url: &lt;span class=&quot;s1&quot;&gt;&amp;#39;http://my-ghost-blog.com&amp;#39;&lt;/span&gt;,
    mail: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        transport: &lt;span class=&quot;s1&quot;&gt;&amp;#39;SMTP&amp;#39;&lt;/span&gt;,
        options: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
           service: &lt;span class=&quot;s1&quot;&gt;&amp;#39;Gmail&amp;#39;&lt;/span&gt;,
           auth: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
               user: &lt;span class=&quot;s1&quot;&gt;&amp;#39;your.gmail.id@gmail.com&amp;#39;&lt;/span&gt;,
               pass: &lt;span class=&quot;s1&quot;&gt;&amp;#39;your-gmail-password&amp;#39;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/p&gt;
&lt;/div&gt;

&lt;h3 id=&quot;test&quot;&gt;Test&lt;/h3&gt;

&lt;p&gt;Để kiểm tra các thiết lập gửi mail chúng ta vừa làm có hoạt động hay không, bạn cần &lt;strong&gt;Restart Ghost&lt;/strong&gt; và tiến hành gửi mail phía backend. Trước đó, bạn cần đảm bảo rằng đã thiết lập email cho Ghost User trong trang &lt;strong&gt;/ghost/settings/users/&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Bạn truy cập vào tab &lt;strong&gt;Labs&lt;/strong&gt; trong phần &lt;strong&gt;Settings&lt;/strong&gt; tại địa chỉ &lt;strong&gt;/ghost/settings/labs/&lt;/strong&gt; và click vào nút &lt;strong&gt;Send&lt;/strong&gt; để gửi email test tới địa chỉ email mà bạn đã thiết lập cho user của bạn.&lt;/p&gt;

&lt;figure&gt;
	&lt;a href=&quot;http://thapsang.net/images/ghost/send-test-mail-ghost.png&quot;&gt;&lt;img src=&quot;http://thapsang.net/images/ghost/send-test-mail-ghost.png&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Nếu bạn nhận được email tức là các thiết lập đã được thực hiện chính xác. &lt;/p&gt;

&lt;p&gt;Nếu bạn muốn sử dụng dịch vụ gửi mail khác, không phải Gmail chẳng hạn như Mailgun hay Amazon SES thì bạn có thể tham khảo &lt;a href=&quot;http://support.ghost.org/mail&quot;&gt;theo hướng dẫn của Ghost Team&lt;/a&gt;. Chúc bạn thành công!&lt;/p&gt;

&lt;h2 id=&quot;ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.qoncious.com/questions/how-setup-ghost-send-email-using-gmail&quot;&gt;How to setup Ghost to send email using Gmail?&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

  &lt;p&gt;&lt;a href=&quot;http://thapsang.net/ghost/thiet-lap-gui-mail-su-dung-gmail-cho-ghost-blog&quot;&gt;Thiết lập gửi mail sử dụng Gmail cho Ghost blog&lt;/a&gt; was originally published by Ta Ly at &lt;a href=&quot;http://thapsang.net&quot;&gt;THAPSANG.NET&lt;/a&gt; on May 08, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Thêm tìm kiếm vào Ghost blog]]></title>
  <link>http://thapsang.net/ghost/them-tim-kiem-vao-ghost-blog</link>
  <id>http://thapsang.net/ghost/them-tim-kiem-vao-ghost-blog</id>
  <published>2015-05-07T00:00:00+07:00</published>
  <updated>2015-05-07T00:00:00+07:00</updated>
  <author>
    <name>Ta Ly</name>
    <uri>http://thapsang.net</uri>
    <email>taly2808@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Khi nội dung blog của bạn ngày càng phong phú, việc tìm kiếm một nội dung cụ thể trở nên khó khăn hơn cho độc giả. Do đó, việc bổ sung một khung tìm kiếm cho blog là cần thiết. Bài viết này sẽ giới thiệu cách thêm khung tìm kiếm và hiển thị kết quả của chúng trong blog với plugin &lt;a href=&quot;https://github.com/i11ume/ghostHunter/&quot;&gt;ghostHunter&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Truy cập vào địa chỉ trang &lt;a href=&quot;https://github.com/i11ume/ghostHunter/&quot;&gt;plugin ghostHunter trên github&lt;/a&gt;, chọn &lt;strong&gt;Download Zip&lt;/strong&gt; ở cột bên phải.&lt;/p&gt;

    &lt;figure&gt;
      &lt;a href=&quot;http://thapsang.net/images/ghost/ghostHunter-github.png&quot;&gt;&lt;img src=&quot;http://thapsang.net/images/ghost/ghostHunter-github.png&quot; /&gt;&lt;/a&gt;
  &lt;/figure&gt;
  &lt;/li&gt;
  &lt;li&gt;Giải nén tập tin mới download, copy file &lt;strong&gt;jquery.ghostHunter.js&lt;/strong&gt; hoặc &lt;strong&gt;jquery.ghostHunter.min.js&lt;/strong&gt; vào thư mục &lt;strong&gt;js&lt;/strong&gt; trong thư mục theme bạn đang sử dụng (&lt;em&gt;/content/themes/[your-theme]/assets/js/&lt;/em&gt;).&lt;/li&gt;
  &lt;li&gt;Tiếp đến, bạn cần thêm đoạn code hiển thị form tìm kiếm tại vị trí mà bạn muốn (tôi đặt chúng trong file default.hbs).&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;searchform&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;searchbox&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;search-field&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;searchtext&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Keyword...&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;button search-button&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Bạn cần một vùng để hiển thị các kết quả tìm kiếm. Đặt chúng vào nơi bạn muốn:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;section&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;search-results&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/section&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Bây giờ, bạn cần thêm plugin ghostHunter và thực hiện lời gọi sử dụng plugin này. Bạn thêm đoạn code sau vào phía dưới cùng của file &lt;em&gt;default.hbs&lt;/em&gt;, trước thẻ đóng &lt;em&gt;&amp;lt;/body&amp;gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{{asset &amp;quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;jquery&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ghostHunter&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;quot;}}&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#search-field&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ghostHunter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;#search-results&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Bạn có thể tham khảo phần &lt;a href=&quot;https://github.com/jamalneufeld/ghostHunter#advanced-features&quot;&gt;tính năng nâng cao&lt;/a&gt; của plugin để có thể tùy chỉnh form và kết quả tìm kiếm theo mong muốn của mình.&lt;/p&gt;

&lt;h2 id=&quot;ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jamalneufeld/ghostHunter&quot;&gt;ghostHunter Github Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ghostforbeginners.com/how-to-add-a-search-box-to-your-ghost-blog/&quot;&gt;Add Searching to Ghost&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

  &lt;p&gt;&lt;a href=&quot;http://thapsang.net/ghost/them-tim-kiem-vao-ghost-blog&quot;&gt;Thêm tìm kiếm vào Ghost blog&lt;/a&gt; was originally published by Ta Ly at &lt;a href=&quot;http://thapsang.net&quot;&gt;THAPSANG.NET&lt;/a&gt; on May 07, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Hướng dẫn cài đặt Android SDK trên Ubuntu]]></title>
  <link>http://thapsang.net/ionic/huong-dan-cai-dat-android-sdk-tren-ubuntu</link>
  <id>http://thapsang.net/ionic/huong-dan-cai-dat-android-sdk-tren-ubuntu</id>
  <updated>2015-03-11T00:00:00-00:00</updated>
  <published>2015-03-11T00:00:00+07:00</published>
  
  <author>
    <name>Ta Ly</name>
    <uri>http://thapsang.net</uri>
    <email>taly2808@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Khi bạn muốn build ứng dụng trên các nền tảng khác nhau, máy tính của bạn cần phải được cài đặt các Tool tương ứng. Bài viết này đi vào hướng dẫn cài đặt Android SDK Tool trên Ubuntu 14.04 để develop ứng dụng trên nền tảng Android.&lt;/p&gt;

&lt;section&gt;
  &lt;header&gt;
    &lt;h2&gt;Nội dung&lt;/h2&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#ci-t-java&quot;&gt;Cài đặt Java&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ci-t-ant&quot;&gt;Cài đặt Ant&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ci-t-android-sdk-tool&quot;&gt;Cài đặt Android SDK Tool&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;

&lt;h2 id=&quot;ci-t-java&quot;&gt;Cài đặt Java&lt;/h2&gt;

&lt;p&gt;Bạn cần đảm bảo rằng máy tính của bạn đã được cài đặt Java. Bạn có thể kiểm tra với lệnh:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;java -version&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nếu máy bạn đã cài đặt Java, bạn có thể bỏ qua bước này.&lt;/p&gt;

&lt;p&gt;Nếu máy tính của bạn chưa cài đặt Java, chúng ta sẽ tiến hành cài đặt. Bạn chạy các lệnh sau trên Terminal:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo dpkg --add-architecture i386
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo apt-get update
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo apt-get install libncurses5:i386 libstdc++6:i386 zlib1g:i386&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tiếp đến là cài đặt Java (ở đây tôi chọn cài đặt oracle java, bạn có thể cài bản khác nếu muốn):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo add-apt-repository ppa:webupd8team/java
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo apt-get update
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo apt-get install oracle-java7-installer&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Nếu bạn muốn cài đặt java8, bạn thay thế lệnh cuối bằng lệnh &lt;strong&gt;sudo apt-get install oracle-java8-installer&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Sau khi cài đặt xong, bạn có thể kiểm tra version java được cài đặt trên máy. Kết quả trên máy của tôi như sau:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;java -version
java version &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.7.0_76&amp;quot;&lt;/span&gt;
Java&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;TM&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; SE Runtime Environment &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;build 1.7.0_76-b13&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Java HotSpot&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;TM&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Server VM &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;build 24.76-b04, mixed mode&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Bạn cần thiết lập biến môi trường JAVA_HOME. Các bước thực hiện như sau:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Xác định vị trí đã cài đặt Java trên máy của bạn với lệnh: &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;which java&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Tiếp đến, chúng ta thiết lập biến toàn cục JAVA_HOME, chúng ta sẽ sửa trong file &lt;strong&gt;.bashrc&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gedit .bashrc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nhập vào phía dưới cùng của file &lt;strong&gt;.bashrc&lt;/strong&gt; những dòng sau:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;JAVA_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/lib/jvm/java-7-oracle
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;JAVA_HOME
&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:&lt;span class=&quot;nv&quot;&gt;$JAVA_HOME&lt;/span&gt;/bin
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;PATH&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Bạn đóng cửa sổ Terminal và bật lại, kiểm tra biến JAVA_HOME đã được thiết lập thành công hay chưa bằng lệnh:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$JAVA_HOME&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;ci-t-ant&quot;&gt;Cài đặt Ant&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://ant.apache.org/&quot;&gt;Apache Ant&lt;/a&gt; là một hệ thống được xây dựng cho Java, được Cordova và Android SDK sử dụng. Để cài đặt Ant, bạn làm theo các bước sau:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Download Ant tại địa chỉ &lt;a href=&quot;http://ant.apache.org/bindownload.cgi&quot;&gt;http://ant.apache.org/bindownload.cgi&lt;/a&gt;, lấy bản zip có sẵn trên trang đó, ví dụ, &lt;em&gt;apache-ant-1.9.4-bin.zip&lt;/em&gt;, và lưu file trên máy tính của bạn.&lt;/li&gt;
  &lt;li&gt;Giải nén tập tin vừa download. Copy vào nơi bạn muốn. Tôi sẽ copy vào trong thư mục &lt;strong&gt;home/taly/development&lt;/strong&gt; và rename thư mục thành &lt;strong&gt;apache-ant&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Tiếp đến, chúng ta cần thêm Ant vào system path. Chúng ta sẽ sửa file &lt;strong&gt;.bashrc&lt;/strong&gt;, thêm vào gần cuối file (trước dòng &lt;strong&gt;export PATH&lt;/strong&gt;) các dòng sau: &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;ANT_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;~/development/apache-ant
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;ANT_HOME
&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:&lt;span class=&quot;nv&quot;&gt;$ANT_HOME&lt;/span&gt;/bin&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Kiểm tra Ant đã được cài đặt thành công hay chưa với lệnh:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ant -version&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;ci-t-android-sdk-tool&quot;&gt;Cài đặt Android SDK Tool&lt;/h2&gt;

&lt;p&gt;Bạn làm theo các bước sau:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Truy cập vào trang &lt;a href=&quot;http://developer.android.com/sdk/index.html&quot;&gt;developer.android.com/sdk&lt;/a&gt;, di chuyển xuống phần &lt;strong&gt;SDK Tools Only&lt;/strong&gt;, và download file &lt;strong&gt;android-sdk_r24.0.2-linux.tgz&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Giải nén tập tin, rename thành &lt;strong&gt;adroid-sdk-linux&lt;/strong&gt;, copy vào thư mục &lt;strong&gt;development&lt;/strong&gt; (/home/taly/development).&lt;/li&gt;
  &lt;li&gt;Thêm Adroid SDK vào system path. Bạn thêm các dòng sau vào trước dòng &lt;strong&gt;export PATH&lt;/strong&gt; trong file &lt;strong&gt;.bashrc&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:~/development/android-sdk-linux/platform-tools
&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:~/development/android-sdk-linux/tools&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Đảm bảo rằng trong file &lt;strong&gt;.bashrc&lt;/strong&gt; chứa nội dung như sau:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;JAVA_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/lib/jvm/java-7-oracle
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;JAVA_HOME
&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:&lt;span class=&quot;nv&quot;&gt;$JAVA_HOME&lt;/span&gt;/bin

&lt;span class=&quot;nv&quot;&gt;ANT_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;~/development/apache-ant
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;ANT_HOME
&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:&lt;span class=&quot;nv&quot;&gt;$ANT_HOME&lt;/span&gt;/bin

&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:~/development/android-sdk-linux/platform-tools
&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:~/development/android-sdk-linux/tools

&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;PATH&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Bạn cần phải có phiên bản Android SDK cụ thể. Để làm việc này, chúng ta chạy &lt;strong&gt;Android SDK Manager&lt;/strong&gt; bằng cách di chuyển đến thư mục &lt;strong&gt;android-sdk-linux/tools&lt;/strong&gt; và chạy lệnh &lt;strong&gt;android sdk&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/development/android-sdk-linux/tools
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;android sdk&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Lần đầu tiên bạn khởi chạy &lt;strong&gt;Android SDK Manager&lt;/strong&gt; sẽ có các thiết lập chọn trước. Đó là các khuyến nghị nên được cài đặt. Ngoài ra, bạn hãy chọn mục &lt;strong&gt;Android 4.4.2 (API 19)&lt;/strong&gt; chưa được cài đặt và tiến hành cài đặt chúng. Đây là phiên bản được Cordova 3.6 sử dụng. &lt;/p&gt;

&lt;p&gt;Lưu ý rằng trong tương lai,các phiên bản Cordova thay đổi cũng sẽ yêu cầu Android SDK tương ứng. Khi đó chúng ta mở lại &lt;strong&gt;Android SDK Manager&lt;/strong&gt; và cài đặt các phiên bản API được yêu cầu.&lt;/p&gt;

&lt;h2 id=&quot;ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://developer.android.com/sdk/index.html&quot;&gt;Android Develop Guide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://evothings.com/doc/build/cordova-install-linux.html&quot;&gt;Installing Cordova on Linux&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://proyectojuanchacon.blogspot.com/2015/01/apache-cordova-development-environment.html&quot;&gt;Apache Cordova Development Environment Setup on Ubuntu 14.04&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;


  &lt;p&gt;&lt;a href=&quot;http://thapsang.net/ionic/huong-dan-cai-dat-android-sdk-tren-ubuntu&quot;&gt;Hướng dẫn cài đặt Android SDK trên Ubuntu&lt;/a&gt; was originally published by Ta Ly at &lt;a href=&quot;http://thapsang.net&quot;&gt;THAPSANG.NET&lt;/a&gt; on March 11, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Build ứng dụng Ionic trên nền tảng Android]]></title>
  <link>http://thapsang.net/ionic/build-ung-dung-ionic-tren-nen-tang-android</link>
  <id>http://thapsang.net/ionic/build-ung-dung-ionic-tren-nen-tang-android</id>
  <updated>2015-03-10T00:00:00-00:00</updated>
  <published>2015-03-10T00:00:00+07:00</published>
  
  <author>
    <name>Ta Ly</name>
    <uri>http://thapsang.net</uri>
    <email>taly2808@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Sau khi chạy được ứng dụng trên web view, chúng ta sẽ muốn chạy thử ứng dụng của mình trên các nền tảng khác nhau. Trong bài viết này, chúng ta sẽ đi vào chi tiết cách thức add platform và test ứng dụng như thế nào.&lt;/p&gt;

&lt;section&gt;
  &lt;header&gt;
    &lt;h2&gt;Nội dung&lt;/h2&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#ci-t-platform-tools&quot;&gt;Cài đặt platform tools&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#system-requirements&quot;&gt;System Requirements&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#download-v-ci-t-sdk-tool&quot;&gt;Download và cài đặt SDK Tool&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#add-platform&quot;&gt;Add platform&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#test-ng-dng&quot;&gt;Test ứng dụng&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;

&lt;h2 id=&quot;ci-t-platform-tools&quot;&gt;Cài đặt platform tools&lt;/h2&gt;

&lt;p&gt;Trước khi tiến hành &lt;strong&gt;add platform&lt;/strong&gt;, chúng ta cần cài đặt Android SDK.&lt;/p&gt;

&lt;h4 id=&quot;system-requirements&quot;&gt;System Requirements&lt;/h4&gt;

&lt;p&gt;Bạn có thể tham khảo &lt;a href=&quot;http://developer.android.com/sdk/index.html#Requirements&quot;&gt;yêu cầu về hệ thống để cài đặt Android SDK&lt;/a&gt;. Dưới đây là yêu cầu về hệ thống khi phát triển trên &lt;strong&gt;Linux&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;GNOME or KDE desktop&lt;/li&gt;
  &lt;li&gt;GNU C Library (glibc) 2.15 or later&lt;/li&gt;
  &lt;li&gt;2 GB RAM minimum, 4 GB RAM recommended&lt;/li&gt;
  &lt;li&gt;400 MB hard disk space&lt;/li&gt;
  &lt;li&gt;At least 1 GB for Android SDK, emulator system images, and caches&lt;/li&gt;
  &lt;li&gt;1280 x 800 minimum screen resolution&lt;/li&gt;
  &lt;li&gt;Oracle® Java Development Kit (JDK) 7&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;download-v-ci-t-sdk-tool&quot;&gt;Download và cài đặt SDK Tool&lt;/h4&gt;

&lt;p&gt;Bạn có thể download SDK Tool &lt;a href=&quot;http://developer.android.com/sdk/index.html&quot;&gt;tại đây&lt;/a&gt; và đảm bảo rằng bạn đã cài đặt Android SDK theo đúng &lt;a href=&quot;http://developer.android.com/sdk/installing/index.html&quot;&gt;hướng dẫn&lt;/a&gt; và thêm các gói &lt;a href=&quot;http://developer.android.com/sdk/installing/adding-packages.html&quot;&gt;SDK Packages&lt;/a&gt; để develop. Bạn có thể tham khảo bài viết &lt;a href=&quot;/ionic/huong-dan-cai-dat-android-sdk-tren-ubuntu&quot;&gt;Hướng dẫn cài đặt Android SDK trên Ubuntu 14.04&lt;/a&gt; của tôi.&lt;/p&gt;

&lt;p&gt;Để Cordova command-line (CLI) hoạt động đúng, chúng ta cần thêm thư mục &lt;code&gt;tools&lt;/code&gt; và &lt;code&gt;platform-tools&lt;/code&gt; của SDK vào trong &lt;code&gt;PATH&lt;/code&gt;. Bạn có thể sử dụng editor để tạo hoặc chỉnh sửa file &lt;code&gt;~/.bash_profile&lt;/code&gt;, thêm dòng sau vào file (phụ thuộc vào nơi chúng ta cài đặt sdk, thư mục của tôi là &lt;strong&gt;/home/taly/development&lt;/strong&gt;):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;:/home/taly/development/android-sdk-linux/platform-tools:/home/taly/development/android-sdk-linux/tools&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tiếp đó, trên Terminal, bạn chạy lệnh sau để load lại file này: &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.bash_profile&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;add-platform&quot;&gt;Add platform&lt;/h2&gt;

&lt;p&gt;Bạn có thể kiểm tra xem hệ điều hành của bạn hỗ trợ phát triển những platform nào bằng lệnh:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ionic platform list&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;hoặc &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cordova platform ls&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Chúng ta add platform android với lệnh: &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ionic platform add android&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;hoặc&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cordova platform add android&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Khi bạn chạy lệnh &lt;strong&gt;platform add&lt;/strong&gt;, ionic sẽ tạo ra thư mục &lt;strong&gt;android&lt;/strong&gt; bên trong thư mục &lt;strong&gt;platforms&lt;/strong&gt; và toàn bộ mã nguồn của ứng dụng sẽ được tự động copy vào trong thư mục &lt;strong&gt;platforms/android/assets/www&lt;/strong&gt;.
Lưu ý: Bạn không nên chỉnh sửa thông tin gì trong thư mục này trừ khi bạn hiểu rõ mình đang làm gì. Bạn chỉ cần chỉnh sửa mã nguồn của dự án trong thư mục &lt;strong&gt;www&lt;/strong&gt; ở thư mục gốc của dự án. Mỗi lần build trên nền tảng nào, ionic sẽ tự động cập nhật cho bạn.&lt;/p&gt;

&lt;h2 id=&quot;test-ng-dng&quot;&gt;Test ứng dụng&lt;/h2&gt;

&lt;p&gt;Bạn có thể build và chạy thử xem ứng dụng hoạt động tốt hay không:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ionic build android
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ionic emulate android&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://cordova.apache.org/docs/en/3.6.0/guide_platforms_android_index.md.html#Android%20Platform%20Guide&quot;&gt;Android Platform Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;


  &lt;p&gt;&lt;a href=&quot;http://thapsang.net/ionic/build-ung-dung-ionic-tren-nen-tang-android&quot;&gt;Build ứng dụng Ionic trên nền tảng Android&lt;/a&gt; was originally published by Ta Ly at &lt;a href=&quot;http://thapsang.net&quot;&gt;THAPSANG.NET&lt;/a&gt; on March 10, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Hướng dẫn cài đặt Ionic Framework trên Ubuntu]]></title>
  <link>http://thapsang.net/ionic/huong-dan-cai-dat-ionic-framework-tren-ubuntu</link>
  <id>http://thapsang.net/ionic/huong-dan-cai-dat-ionic-framework-tren-ubuntu</id>
  <updated>2015-03-09T00:00:00-00:00</updated>
  <published>2015-01-21T00:00:00+07:00</published>
  
  <author>
    <name>Ta Ly</name>
    <uri>http://thapsang.net</uri>
    <email>taly2808@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Trong bài viết này, chúng ta sẽ đi vào chi tiết cách thức cài đặt IonicFramework trên Ubuntu (14.04).&lt;/p&gt;

&lt;section&gt;
  &lt;header&gt;
    &lt;h2&gt;Nội dung&lt;/h2&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#ci-t-ionic&quot;&gt;Cài đặt Ionic&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#khi-to-ng-dng&quot;&gt;Khởi tạo ứng dụng&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#chy-ng-dng&quot;&gt;Chạy ứng dụng&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;

&lt;h2 id=&quot;ci-t-ionic&quot;&gt;Cài đặt Ionic&lt;/h2&gt;

&lt;p&gt;Trước hết, bạn cần cài đặt &lt;a href=&quot;http://cordova.apache.org/&quot;&gt;Apache Cordova&lt;/a&gt; phiên bản mới nhất bằng lệnh:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo npm install -g cordova&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sau đó, bạn có thể kiểm tra phiên bản Cordova vừa được cài đặt với lệnh:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cordova -v&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tiếp đến, bạn cài đặt Ionic bằng lệnh:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo npm install -g ionic&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;khi-to-ng-dng&quot;&gt;Khởi tạo ứng dụng&lt;/h2&gt;

&lt;p&gt;Bây giờ, chúng ta cần tạo mới một ứng dụng Cordova ở bất kỳ đâu bạn muốn trên máy tính. Giả sử, tôi tạo các ứng dụng ionic của mình trong thư mục &lt;strong&gt;home/taly/projects&lt;/strong&gt;, chúng ta di chuyển tới thư mục &lt;strong&gt;home/taly/projects&lt;/strong&gt;. Bạn có thể tạo ứng dụng sử dụng template có sẵn (&lt;em&gt;sidemenu&lt;/em&gt; hoặc &lt;em&gt;tabs&lt;/em&gt;) của Ionic hoặc tạo ứng dụng trống rỗng (&lt;em&gt;blank&lt;/em&gt;). Ví dụ, chúng ta tạo ứng dụng tên &lt;strong&gt;Hello world&lt;/strong&gt; với template &lt;em&gt;sidemenu&lt;/em&gt; như sau:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ionic start hello-world sidemenu&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;chy-ng-dng&quot;&gt;Chạy ứng dụng&lt;/h2&gt;

&lt;p&gt;Sau khi tạo xong ứng dụng, bạn di chuyển vào thư mục &lt;em&gt;hello-world&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;hello-world&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Bạn có thể xem luôn ứng dụng vừa tạo có hình thù, hoạt động ra sao trên trình duyệt web (còn gọi là web view) bằng cách chạy lệnh:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ionic serve&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Đến đây, chúng ta đã có thể phát triển tiếp ứng dụng của mình với giả lập giao diện trên web view tại địa chỉ mặc định là &lt;a href=&quot;http://localhost:8100&quot;&gt;http://localhost:8100&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Để build và test trên các nền tảng khác nhau (ios, android), chúng ta cần add platform và build trên các nền tảng tương ứng.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ionic platform add ios
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ionic platform add android&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Bạn chạy thử ứng dụng (tương ứng với từng platform) với lệnh:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ionic build android
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ionic emulate android&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://ionicframework.com/getting-started/&quot;&gt;Start building with Ionic&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ionicframework.com/docs/guide/installation.html&quot;&gt;Ionic Installation&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;


  &lt;p&gt;&lt;a href=&quot;http://thapsang.net/ionic/huong-dan-cai-dat-ionic-framework-tren-ubuntu&quot;&gt;Hướng dẫn cài đặt Ionic Framework trên Ubuntu&lt;/a&gt; was originally published by Ta Ly at &lt;a href=&quot;http://thapsang.net&quot;&gt;THAPSANG.NET&lt;/a&gt; on January 21, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Sử dụng dịch vụ $resource xây dựng ứng dụng CRUD trong AngularJS]]></title>
  <link>http://thapsang.net/angularjs/su-dung-$resource-xay-dung-crud-app-trong-angularjs</link>
  <id>http://thapsang.net/angularjs/su-dung-$resource-xay-dung-crud-app-trong-angularjs</id>
  <updated>2014-12-05T00:00:00-00:00</updated>
  <published>2014-12-05T00:00:00+07:00</published>
  
  <author>
    <name>Ta Ly</name>
    <uri>http://thapsang.net</uri>
    <email>taly2808@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Các ứng dụng sử dụng web service ngày càng phổ biến. AngularJS cung cấp dịch vụ $resource hỗ trợ tương tác với dịch vụ RESTful một cách dễ dàng. Trong bài viết này, chúng ta sẽ tìm hiểu cách thức sử dụng $resource trong ứng dụng web xây dựng bằng AngularJS.&lt;/p&gt;

&lt;section&gt;
  &lt;header&gt;
    &lt;h2&gt;Nội dung&lt;/h2&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#http-vs-resource&quot;&gt;$http vs $resource&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#s-dng-resource&quot;&gt;Sử dụng $resource&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cc-thc-resource-lm-vic&quot;&gt;Các thức $resource làm việc&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#to-mt-resource&quot;&gt;Tạo một Resource&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#i-tng-tr-li-ca-hm-resource&quot;&gt;Đối tượng trả lại của hàm $resource&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#default-actions&quot;&gt;Default actions&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#cc-action-method-ca-resource-class-v-resource-instance&quot;&gt;Các action method của Resource Class và Resource Instance&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#unit-testing&quot;&gt;Unit testing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#p-dng-vo-v-d-c-th&quot;&gt;Áp dụng vào ví dụ cụ thể&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#xy-dng-restful-service&quot;&gt;Xây dựng RESTful service&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#xy-dng-ng-dng-pha-client-bng-angularjs&quot;&gt;Xây dựng ứng dụng phía client bằng AngularJS&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;

&lt;h2 id=&quot;http-vs-resource&quot;&gt;$http vs $resource&lt;/h2&gt;

&lt;p&gt;Cả $http và $resource đều có thể làm việc tốt với REST. Vậy lý do là gì để chúng ta sử dụng $resource thay vì sử dụng $http? Sau khi google và theo quan điểm cá nhân thì dưới đây là các lý do được đưa ra:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$resource viết ít code hơn.&lt;/li&gt;
  &lt;li&gt;$resource cho phép chúng ta định nghĩa URL dưới dạng các template string (một chuỗi có chứa phần giữ chỗ (placeholder), ví dụ: /api/books/:id) với giá trị các tham số. $resource sẽ thay thế các placeholder bằng các giá trị tham số của các đối tượng cụ thể. &lt;/li&gt;
  &lt;li&gt;Việc xây dựng các service với $resource linh hoạt hơn với việc thiết lập các custom action cho các đối tượng cụ thể và có thể sử dụng nó linh hoạt trong bất kỳ controller bạn muốn.&lt;/li&gt;
  &lt;li&gt;$resource cho phép tạo ra một đối tượng javascript đại diện cho data model riêng biệt. Bằng cách này, với mỗi hoạt động được tính toán trên đối tượng được tạo ra thông qua $resource sẽ được thực hiện ở phía server. Ví dụ, nếu bạn muốn thực hiện update một book với $http, trước hết bạn phải lấy được đối tượng đó, sau đó thực hiện gán giá trị cho các thuộc tính rồi thực hiện save với đối tượng book đi kèm:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;http://yourserver/api/books/&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;My name updated&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;$http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;http://yourserver/api/books/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Với $resource, chúng ta gọi hàm $update() trên mỗi phần tử book:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;BookService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;My name edited&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;s-dng-resource&quot;&gt;Sử dụng $resource&lt;/h2&gt;

&lt;p&gt;AngularJS cung cấp dịch vụ $resource thông qua module &lt;a href=&quot;https://docs.angularjs.org/api/ngResource&quot;&gt;ngResource&lt;/a&gt; riêng biệt. Do đó, để có thể sử dụng dịch vụ này, bạn cần:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;download file &lt;a href=&quot;https://code.angularjs.org/1.3.2/angular-resource.js&quot;&gt;angular-resource.js&lt;/a&gt; và include nó vào trang HTML. &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;angular.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;angular-resource.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Thêm nữa, trong module ứng dụng chính, bạn cần khai báo phụ thuộc vào module &lt;code&gt;ngResource&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;app&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ngResource&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Bơm (inject) $resource vào bất kỳ đâu (service, controller, …) bạn muốn sử dụng nó.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;cc-thc-resource-lm-vic&quot;&gt;Các thức $resource làm việc&lt;/h2&gt;

&lt;p&gt;$resource làm việc với RESTful backend, do đó chúng ta cần có REST endpoint theo định dạng sau:&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;http://thapsang.net/assets/img/REST-endpoints.png&quot; /&gt;
&lt;/figure&gt;

&lt;h3 id=&quot;to-mt-resource&quot;&gt;Tạo một Resource&lt;/h3&gt;

&lt;p&gt;Chúng ta có thể tạo một Resource bằng Resource factory: &lt;strong&gt;$resource(url, paramDefaults, actions, options)&lt;/strong&gt;&lt;/p&gt;
&lt;figure&gt;
	&lt;img src=&quot;http://thapsang.net/assets/img/create-a-resource.png&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;Các tham số trong Resource factory:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;url&lt;/strong&gt; - &lt;em&gt;{string}&lt;/em&gt; - là địa chỉ REST endpoint, đây là một URL template được tham số hóa với các tham số được bắt đầu với dấu &lt;code&gt;:&lt;/code&gt;, chẳng hạn như &lt;code&gt;/books/:bookId&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;paramDefaults&lt;/strong&gt; - &lt;em&gt;{Object}&lt;/em&gt; - giả sử url template có dạng &lt;em&gt;/books/:bookId&lt;/em&gt; và tham số &lt;em&gt;{bookId: ‘12’, author: ‘Fukuzawa’}&lt;/em&gt; thì kết quả hiển thị trên URL là &lt;em&gt;/books/12?author=Fukuzawa&lt;/em&gt;.	Nếu giá trị của tham số có tiền tố &lt;code&gt;@&lt;/code&gt;, ví dụ &lt;em&gt;{bookId: ‘@id’}&lt;/em&gt; thì việc đặt tham số &lt;code&gt;bookId&lt;/code&gt; thành &lt;code&gt;@id&lt;/code&gt; có nghĩa là bất cứ khi nào chúng ta gọi phương thức &lt;code&gt;$update()&lt;/code&gt; và &lt;code&gt;$delete()&lt;/code&gt; trên một resource instance thì giá trị của &lt;code&gt;:bookId&lt;/code&gt; sẽ được thiết lập thành thuộc tính &lt;code&gt;id&lt;/code&gt; của resource instance. Cách sử dụng này rất hữu ích cho các PUT request và DELETE request.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;actions&lt;/strong&gt; - &lt;em&gt;{Object}&lt;/em&gt; - mặc định lời gọi hàm $resource trả về một &lt;strong&gt;resource class&lt;/strong&gt; với 5 phương thức mặc định gồm &lt;strong&gt;get(), query(), save(), remove(), delete()&lt;/strong&gt; (xem &lt;a href=&quot;#i-tng-tr-li-ca-hm-resource&quot;&gt;Đối tượng trả lại của hàm $resource&lt;/a&gt;). Tham số này cho phép chúng ta thêm các phuơng thức tùy chỉnh (custom method) vào resource constructor (hay resource class) với cú pháp: &lt;code&gt;{ action: {method:?, params:?, isArray:?, headers:?, ...} };&lt;/code&gt;. Trong đó:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;action - &lt;em&gt;{string}&lt;/em&gt; - tên của action.&lt;/li&gt;
      &lt;li&gt;method - &lt;em&gt;{string}&lt;/em&gt; - phương thức HTTP, ví như GET, POST, PUT, DELETE, JSONP, PATCH, …&lt;/li&gt;
      &lt;li&gt;params - &lt;em&gt;{Object}&lt;/em&gt; - tập các tùy chọn của các tham số trước khi thực hiện action này.&lt;/li&gt;
      &lt;li&gt;isArray - &lt;em&gt;{boolean}&lt;/em&gt; - quy định dữ liệu trả về cho phương thức này là Array hay Object.&lt;/li&gt;
      &lt;li&gt;Ngoài ra nó còn chứa đầy đủ các thuộc tính của &lt;a href=&quot;https://docs.angularjs.org/api/ng/service/$http#usage&quot;&gt;$http.config&lt;/a&gt; như &lt;code&gt;headers&lt;/code&gt;, &lt;code&gt;transformRequest&lt;/code&gt;, &lt;code&gt;transformResponse&lt;/code&gt;, &lt;code&gt;cache&lt;/code&gt;, &lt;code&gt;timeout&lt;/code&gt;, &lt;code&gt;withCredentials&lt;/code&gt;,&lt;code&gt;responseType&lt;/code&gt;, &lt;code&gt;interceptor&lt;/code&gt;. Bạn có thể xem lại bài viết &lt;a href=&quot;/angularjs/hieu-ve-$http-service-trong-angularjs&quot;&gt;tìm hiểu về $http&lt;/a&gt; để nắm rõ cách thức sử dụng các thuộc tính đó.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;options&lt;/strong&gt; - &lt;em&gt;{Object}&lt;/em&gt; - tham số này hiện tại chỉ hỗ trợ thiết lập thuộc tính &lt;code&gt;stripTrailingSlashes&lt;/code&gt;. Mặc định, thuộc tính này được thiết lập giá trị &lt;code&gt;true&lt;/code&gt;, nghĩa là dấu &lt;code&gt;/&lt;/code&gt; trong URL sẽ bị bỏ qua khi truyền qua hàm &lt;code&gt;$resource()&lt;/code&gt;, chúng ta có thể hủy bỏ tính năng này bằng cách thiết lập &lt;em&gt;{ stripTrailingSlashes: false }&lt;/em&gt;. Ví dụ: &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;app&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ngResource&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Book&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;$resource&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;http://yourserver/books/:bookId&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bookId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;@id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},{&lt;/span&gt; 
    &lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;PUT&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  	&lt;span class=&quot;nx&quot;&gt;stripTrailingSlashes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}]);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;i-tng-tr-li-ca-hm-resource&quot;&gt;Đối tượng trả lại của hàm $resource&lt;/h3&gt;

&lt;h4 id=&quot;default-actions&quot;&gt;Default actions&lt;/h4&gt;

&lt;p&gt;Hàm Resource factory $resource() trả lại một &lt;strong&gt;resource class&lt;/strong&gt; (hay Resource constructor) với 5 phương thức mặc định là:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;get&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;&amp;#39;save&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;&amp;#39;query&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;&amp;#39;remove&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;DELETE&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;&amp;#39;delete&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;DELETE&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;Hãy xem chúng ta sử dụng hàm &lt;code&gt;get()&lt;/code&gt;, &lt;code&gt;query()&lt;/code&gt;, &lt;code&gt;save()&lt;/code&gt; như thế nào trong controller:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;app&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ngResource&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Book&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;http://yourserver/api/books/:id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
 
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ResourceController&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// get() trả lại một book duy nhất&lt;/span&gt;
 
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;books&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;books&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//query() trả về tất cả các books&lt;/span&gt;
 
  &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//tạo mới một resource instance&lt;/span&gt;
 
  &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;some data&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 
  &lt;span class=&quot;nx&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//dữ liệu đã được thêm mới, bạn có thể làm gì đó ở đây&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//thêm mới một book. Giả sử rằng $scope.book là một đối tượng Book&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;get()&lt;/code&gt; function trong kịch bản trên liên quan đến một GET request &lt;code&gt;/api/books/:id&lt;/code&gt;. Tham số &lt;code&gt;:id&lt;/code&gt; trong URL sẽ được thay thế với &lt;code&gt;$scope.id&lt;/code&gt;. Tham số thứ 2 của function &lt;code&gt;get()&lt;/code&gt; là hàm success callback, nó được thực thi khi dữ liệu từ server trả về thành công. Cần lưu ý rằng, function &lt;code&gt;get()&lt;/code&gt; trả lại một đối tượng rỗng (empty object) và đối tượng này sẽ được tự động gắn dữ liệu khi có dữ liệu thật từ server trả về. Đây là một thủ thuật hữu ích vì thường các tài nguyên được gán vào model và sau đó sẽ được render bởi view, do đó bạn có thể thiết lập đối tượng rỗng đó vào trong $scope và hướng nó vào trong view. Khi dữ liệu thực tế đến và đối tượng đã được thiết lập sẵn trong view, dữ liệu được gắn kết vào các vị trí tương ứng và view cũng được cập nhật. Điều này có nghĩa là trong hầu hết các trường hợp, chúng ta không phải viết một hàm callback cho các action method này.&lt;/p&gt;

&lt;p&gt;Function &lt;code&gt;query()&lt;/code&gt; liên quan đến GET request &lt;code&gt;/api/books&lt;/code&gt; (không có tham số :id) và trả lại một mảng rỗng. Khi dữ liệu từ server đến, mảng này đã có sẵn ở đó. Một lần nữa bạn có thể thiết lập mảng này vào trong $scope model và đề cập đến nó trong view sử dụng &lt;code&gt;ng-repeat&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;save()&lt;/code&gt; function liên quan đến POST request &lt;code&gt;/api/books&lt;/code&gt; với tham số thứ nhất là POST body. Tham số thứ hai là hàm callback sẽ được gọi khi dữ liệu được lưu trữ thành công. &lt;code&gt;$resource()&lt;/code&gt; function trả lại một resource class và lời gọi &lt;code&gt;new Book()&lt;/code&gt; sẽ tạo ta một đối tượng cụ thể (resource instance), thiết lập các thuộc tính cho nó và lưu trữ đối tượng vào backend.&lt;/p&gt;
&lt;hr /&gt;

&lt;h4 id=&quot;cc-action-method-ca-resource-class-v-resource-instance&quot;&gt;Các action method của Resource Class và Resource Instance&lt;/h4&gt;

&lt;p&gt;Các action method này dự kiến có 4 tham số, bao gồm: &lt;strong&gt;params&lt;/strong&gt; object, &lt;strong&gt;data&lt;/strong&gt; object, &lt;strong&gt;success&lt;/strong&gt; function, &lt;strong&gt;error&lt;/strong&gt; function.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;HTTP GET action của Resource Class: &lt;code&gt;Resource.action(paramsObj, successFn, errorFn)&lt;/code&gt;. Ví dụ:
    &lt;ul&gt;
      &lt;li&gt;Book.get(paramsObj, successFn, errorFn);&lt;/li&gt;
      &lt;li&gt;Book.query(paramsObj, successFn, errorFn);&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;non-GET action của Resource Class: &lt;code&gt;Resource.action(paramsObj, dataObj, successFn, errorFn)&lt;/code&gt;. Ví dụ:
    &lt;ul&gt;
      &lt;li&gt;Book.save(paramsObj, dataObj, successFn, errorFn);&lt;/li&gt;
      &lt;li&gt;Book.remove(paramsObj, dataObj, successFn, errorFn);&lt;/li&gt;
      &lt;li&gt;Book.delete(paramsObj, dataObj, successFn, errorFn);&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;non-GET action của Resource Instance: &lt;code&gt;instance.$action(paramsObj, successFn, errorFn)&lt;/code&gt;. Ví dụ:
    &lt;ul&gt;
      &lt;li&gt;book.$save(paramsObj, successFn, errorFn);&lt;/li&gt;
      &lt;li&gt;book.$remove(paramsObj, successFn, errorFn);&lt;/li&gt;
      &lt;li&gt;book.$delete(paramsObj, successFn, errorFn);&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lưu ý rằng, các non-GET action method của resource instance bắt đầu với dấu &lt;code&gt;$&lt;/code&gt;. Và cả class action và instance action có các chức năng tương đương:&lt;/p&gt;
&lt;figure&gt;
		&lt;img src=&quot;http://thapsang.net/assets/img/instance-vs-constructor-action-methods.png&quot; /&gt;
	&lt;/figure&gt;

&lt;p&gt;Hàm &lt;strong&gt;success callback&lt;/strong&gt; được gọi với tham số &lt;em&gt;(value, responseHeaders)&lt;/em&gt;. Hàm &lt;strong&gt;error callback&lt;/strong&gt; được gọi với tham số &lt;em&gt;(httpResponse)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Class actions&lt;/strong&gt; trả lại một &lt;strong&gt;empty instance&lt;/strong&gt;. &lt;strong&gt;Instance actions&lt;/strong&gt; trả lại &lt;strong&gt;lời hứa (promise)&lt;/strong&gt; của action.&lt;/p&gt;

&lt;p&gt;Ngoài ra, các Resource instance và collection có thêm các thuộc tính: &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;$promise&lt;/code&gt;: việc thực hiện các request thông qua web service thường trả lại dữ liệu với độ trễ nhất định. Để đảm bảo dữ liệu đã sẵn sàng trước khi gán nó vào model hoặc render lên view, chúng ta có thể sử dụng &lt;a href=&quot;https://docs.angularjs.org/api/ng/service/$q&quot;&gt;promise&lt;/a&gt;. Ví dụ:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Todo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/api/todó/:id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;Todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;// success&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;errResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;// fail&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;Todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;// success&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;errResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;// fail&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Và cần nhớ rằng, thuộc tính &lt;code&gt;$promise&lt;/code&gt; là một thuộc tính trên cùng giá trị được trả về ở trên, do đó ta có thể sử dụng với cách khác như sau:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Todo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/api/todos/:id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;Todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//tương đương với cách viết sau:&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//----------------&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//tương đương với cách viết sau:&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;$resolved&lt;/code&gt;: ban đầu thuộc tính này có giá trị &lt;code&gt;false&lt;/code&gt;, sau khi tương tác với server lần đầu tiên hoàn thành (dù success hay fail) nó được thiết lập giá trị &lt;code&gt;true&lt;/code&gt;. Thuộc tính này hữu ích trong việc biết Resource đã được resolved hay chưa để thực hiện gắn kết dữ liệu (data-binding).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;unit-testing&quot;&gt;Unit testing&lt;/h2&gt;

&lt;p&gt;$resource được thực hiện ở tầng cao hơn $http. Nó tương tác với backend thông qua các HTTP request. Bạn có thể sử dụng &lt;a href=&quot;https://docs.angularjs.org/api/ngMock/service/$httpBackend&quot;&gt;$httpBackend mock&lt;/a&gt; để thực hiện unit test cho $resource.&lt;/p&gt;

&lt;h2 id=&quot;p-dng-vo-v-d-c-th&quot;&gt;Áp dụng vào ví dụ cụ thể&lt;/h2&gt;

&lt;p&gt;Trong ví dụ này, chúng ta sẽ xây dựng một ứng dụng CRUD (Create - Read - Update - Delete) Book sử dụng $resource trong AngularJS. Ví dụ được xây dựng trên Ubuntu nên việc cài đặt các công cụ sẽ được hướng dẫn trên Ubuntu. Với các hệ điều hành khác, bạn vui lòng xem hướng dẫn trong các link đính kèm công cụ.&lt;/p&gt;

&lt;h3 id=&quot;xy-dng-restful-service&quot;&gt;Xây dựng RESTful service&lt;/h3&gt;

&lt;p&gt;Trong ví dụ này, chúng ta cần tạo ra một dịch vụ web RESTful phía backend có thể trả về với các request tương ứng. Bạn có thể sử dụng bất cứ công cụ nào miễn sao có thể tạo ra RESTful resource để demo. Ở đây, tôi sử dụng &lt;a href=&quot;http://deployd.com/&quot;&gt;deployd&lt;/a&gt; - một công cụ giúp xây dựng các API đơn giản. &lt;/p&gt;

&lt;p&gt;Để sử dụng công cụ này, bạn cần &lt;a href=&quot;http://docs.deployd.com/docs/getting-started/installing-deployd.html&quot;&gt;cài đặt deployd&lt;/a&gt; và &lt;a href=&quot;http://docs.mongodb.org/manual/installation/&quot;&gt;mongodb&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Bạn chạy lệnh sau để cài đặt deployd: &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm install deployd -g&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sau đó, chạy lệnh &lt;code&gt;dpd -V&lt;/code&gt; để kiểm tra phiên bản của deployd. Nếu bạn thấy phiên bản của deployd ví như &lt;code&gt;0.7.0&lt;/code&gt; tức là bạn đã cài đặt thành công deployd.&lt;/p&gt;

&lt;p&gt;Tiếp đến, bạn cần cài đặt mongodb nếu chưa có:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo apt-get install -y mongodb-org&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Bạn kiểm tra phiên bản mongodb bằng lệnh &lt;code&gt;mongod --version&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Tiếp đó, bạn có thể tải &lt;a href=&quot;https://github.com/taly2808/example-angularjs-book-ws/archive/master.zip&quot;&gt;ví dụ cho phần Book web service&lt;/a&gt; theo địa chỉ cho &lt;a href=&quot;https://github.com/taly2808/example-angularjs-book-ws.git&quot;&gt;git clone&lt;/a&gt;. Sau đó bạn di chuyển vào thư mục ứng dụng, tiếp đó chạy lệnh &lt;code&gt;dpd -d&lt;/code&gt; để chạy ứng dụng và mở dashboard của ứng dụng trên trình duyệt&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;http://thapsang.net/assets/img/dpd-d-cli.png&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;Khi đó, ứng dụng sẽ được mở trên trình duyệt với cổng mặc định là 2403 như hình dưới đây:&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;http://thapsang.net/assets/img/example-book-ws-first.png&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;Với ví dụ đơn giản này, chúng ta tạo ra một Books Collection với các thuộc tính gồm: id, title, category, price. Bạn có thể dễ dàng thêm các bản ghi cho Books Collection. Giả sử tôi thêm 3 bản ghi, khi đó ứng dụng sẽ như sau:&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;http://thapsang.net/assets/img/example-book-ws-data.png&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;Chuyển sang tab API, chúng ta sẽ thấy danh sách các API mà ứng dụng cung cấp:&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;http://thapsang.net/assets/img/example-book-ws-api.png&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;Khi chạy ứng dụng phía client, ứng dụng này cần được chạy để cung cấp các REST endpoint và tương tác với client.&lt;/p&gt;

&lt;h3 id=&quot;xy-dng-ng-dng-pha-client-bng-angularjs&quot;&gt;Xây dựng ứng dụng phía client bằng AngularJS&lt;/h3&gt;

&lt;p&gt;Bạn có thể tải demo tại địa chỉ &lt;a href=&quot;https://github.com/taly2808/example-angularjs-book-client.git&quot;&gt;git clone&lt;/a&gt;. Trong phần này, chúng ta sẽ sử dụng $resource để thực hiện các thao tác CRUD với Book. Dùng Terminal di chuyển vào thư mục &lt;em&gt;example-angularjs-book-client&lt;/em&gt;. Bạn cần cài đặt các gói thư viện cần dùng cho HTTP Server:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone https://github.com/taly2808/example-angularjs-book-client.git
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;example-angularjs-book-client
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm install connect serve-static --save-dev&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sau khi &lt;strong&gt;npm&lt;/strong&gt; cài đặt xong các gói thư viện trên, chạy HTTP Server bằng lệnh:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;node server&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Mở cửa sổ trình duyệt mới, nhập vào địa chỉ http://localhost:3000, ta sẽ được giao diện như sau:&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;http://thapsang.net/assets/img/example-book-client-1.png&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;Trong phần này, chúng ta tạo ra một service factory &lt;em&gt;Book&lt;/em&gt; sử dụng $resource để request đến server và sử dụng nó trong controller để lấy dữ liệu:&lt;/p&gt;

&lt;script src=&quot;http://gist-it.appspot.com/https://github.com/taly2808/example-angularjs-book-client/blob/master/js/app.js?footer=0&quot;&gt;
&lt;/script&gt;

&lt;h2 id=&quot;ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.angularjs.org/api/ngResource/service/$resource&quot;&gt;AngularJS: API: $resource&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.sitepoint.com/creating-crud-app-minutes-angulars-resource/&quot;&gt;Creating a CRUD App in Minutes with Angular’s $resource&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;


  &lt;p&gt;&lt;a href=&quot;http://thapsang.net/angularjs/su-dung-$resource-xay-dung-crud-app-trong-angularjs&quot;&gt;Sử dụng dịch vụ $resource xây dựng ứng dụng CRUD trong AngularJS&lt;/a&gt; was originally published by Ta Ly at &lt;a href=&quot;http://thapsang.net&quot;&gt;THAPSANG.NET&lt;/a&gt; on December 05, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Cơ chế phân tích expression trong AngularJS.]]></title>
  <link>http://thapsang.net/angularjs/co-che-phan-tich-expression-trong-angularjs</link>
  <id>http://thapsang.net/angularjs/co-che-phan-tich-expression-trong-angularjs</id>
  <updated>2014-12-01T00:00:00-00:00</updated>
  <published>2014-12-01T00:00:00+07:00</published>
  
  <author>
    <name>Ta Ly</name>
    <uri>http://thapsang.net</uri>
    <email>taly2808@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Khi tìm hiểu về Expression, tài liệu nói rằng Angular sử dụng dịch vụ $parse để ước lượng các expression, có thể biên dịch template một cách thủ công với dịch vụ $interpolate. Dịch vụ $interpolate lại được dịch vụ $compile sử dụng để biên dịch các chuỗi HTML hoặc DOM. Vậy cụ thể từng dịch vụ này hoạt động ra sao, chúng được sử dụng trong trường hợp nào, mối quan hệ giữa các dịch vụ này là gì? Chúng ta sẽ tìm hiểu trong nội dung bài viết này.&lt;/p&gt;

&lt;section&gt;
  &lt;header&gt;
    &lt;h2&gt;Nội dung&lt;/h2&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#s-khc-nhau-gia-dch-v-parse-interpolate-v-compile&quot;&gt;Sự khác nhau giữa dịch vụ $parse, $interpolate và $compile&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#parse-service&quot;&gt;$parse service&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#interpolate-service&quot;&gt;$interpolate service&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;

&lt;h2 id=&quot;s-khc-nhau-gia-dch-v-parse-interpolate-v-compile&quot;&gt;Sự khác nhau giữa dịch vụ $parse, $interpolate và $compile&lt;/h2&gt;

&lt;p&gt;Trước khi đi vào chi tiết từng dịch vụ, tôi muốn đưa ra sự so sánh giữa các dịch vụ để có cái nhìn tổng quan về chúng.  Một lời giải thích theo quan điểm cá nhân tôi là khá dễ hiểu từ &lt;a href=&quot;http://stackoverflow.com/questions/17900588/what-is-the-difference-between-the-parse-interpolate-and-compile-services&quot;&gt;StackOverflow&lt;/a&gt;. Tôi trích dẫn lại trong bài viết để có cái nhìn tổng thể.&lt;/p&gt;

&lt;p&gt;Giả sử, chúng ta có một chuỗi HTML:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;var imgHtml = &amp;#39;&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/path/{{name}}.{{extension}}&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;và các giá trị trong scope:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;$scope.name = &amp;#39;image&amp;#39;;
$scope.extension = &amp;#39;jpg&amp;#39;;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Mỗi dịch vụ sẽ hoạt động ra sao với chuỗi HTML trên:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;$compile&lt;/strong&gt; có thể lấy toàn bộ thẻ đánh dấu này (markup) và chuyển nó thành một link function. Link function này khi được thực hiện trong một scope nhất định, nó sẽ tự động chuyển HTML text thành các thành phần DOM trực tiếp với tất cả các directive (trong trường hợp này là ng-src directive) phản ứng với các thay đổi của model. Angular sẽ gọi nó ra như sau: &lt;strong&gt;$compile(imgHtml)($scope)&lt;/strong&gt; và Angular sẽ nhận được một phần tử DOM với tất cả các sự kiện liên quan đến DOM đó. $compile sử dụng dịch vụ &lt;strong&gt;$interpolate&lt;/strong&gt; để thực hiện các công việc của mình.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;$interpolate&lt;/strong&gt; biết cách để xử lý một chuỗi (với các biểu thức nội suy được nhúng vào chuỗi đó). Mặt khác, nó có thể lấy một chuỗi với các biểu thức nội suy (interpolation expression), một scope và chuyển nó thành kết quả dạng text. Chúng ta có thể nghĩ đơn giản rằng dịch vụ $interpolate là ngôn ngữ mẫu dựa trên các chuỗi (string-based template language). Với ví dụ trên, chúng ta sẽ sử dụng dịch vụ này như sau: &lt;strong&gt;$interpolate(“/path/.”)($scope)&lt;/strong&gt; và nhận được kết quả ở dạng chuỗi là &lt;strong&gt;path/image.jpg&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;$parse&lt;/strong&gt; được dịch vụ $interpolate sử dụng để ước lượng một expression riêng lẻ (ví như name, extension) trong một scope. Nó có thể được sử dụng để đọc và ghi giá trị cho một expression. Ví dụ để ước lượng biểu expression &lt;em&gt;name&lt;/em&gt;, người ta sẽ làm như sau: &lt;strong&gt;$parse(‘name’)($scope)&lt;/strong&gt; để có được giá trị “image”. Để thiết lập giá trị cho expression &lt;em&gt;name&lt;/em&gt;, nguời ta làm như sau: &lt;strong&gt;$parse(‘name’).assign($scope, ‘image2’)&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cả ba dịch vụ cùng làm việc với nhau để cung cấp trực tiếp giao diện người dùng nhưng chúng hoạt động ở các cấp độ khác nhau:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;$parse&lt;/strong&gt; chỉ liên quan đến một expression đơn lẻ. Nó là một dịch vụ có thể đọc và ghi (read/write) giá trị cho expression được đưa ra.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;$interpolate&lt;/strong&gt; là dịch vụ chỉ có thể đọc và liên quan đến các chuỗi (string) chứa nhiều expression (ví dụ “My name is {{firstName}} {{lastName}}”).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;$compile&lt;/strong&gt; là trái tim của AngularJS, nó có thể biến các chuỗi HTML (với các directive và các biểu thức nội suy (interpolation expression)) vào trực tiếp DOM.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure&gt;
	&lt;img src=&quot;http://thapsang.net/assets/img/$parse-$interpolate-$compile.png&quot; /&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;parse-service&quot;&gt;$parse service&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Dịch vụ &lt;a href=&quot;https://docs.angularjs.org/api/ng/service/$parse&quot;&gt;$parse&lt;/a&gt; được dùng để phân tích (parsing) một biểu thức riêng lẻ (individual expression) của Angular. Thông thường, Angular sẽ tự động gọi dịch vụ $parse để ước lượng (evaluate) một biểu thức.&lt;/li&gt;
  &lt;li&gt;Chuyển đổi expression vào trong một function. Function này sau đó có thể được viện dẫn và thông qua một ngữ cảnh (thường là scope) để lấy giá trị của expression.&lt;/li&gt;
  &lt;li&gt;Để lấy giá trị của expression, ta dùng &lt;em&gt;$parse(‘expression’)(context)&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;Để thiết lập giá trị của expression, ta dùng hàm &lt;strong&gt;assign()&lt;/strong&gt; như sau: &lt;em&gt;$parse(‘expression’).assign(context, value)&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Trong demo dưới đây, tôi sẽ thực hiện thiết lập cho ngữ cảnh được đưa ra bằng 2 cách. Cách thứ nhất sử dụng phương thức assign() để thay đổi giá trị của context. Cách thứ 2 sử dụng trực tiếp phương thức $parse() trả lại function xử lý đối tượng context.&lt;/p&gt;

&lt;p&gt;&lt;a class=&quot;jsbin-embed&quot; href=&quot;http://jsbin.com/dikopi/4/embed?html,js,output&quot;&gt;$parse Service&lt;/a&gt;&lt;script src=&quot;http://static.jsbin.com/js/embed.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Dịch vụ $parse còn thường được sử dụng trong các directive không cần template và controller riêng, chỉ phục vụ mục đích phát hiện các sự kiện và xử lý chúng thông qua các expression (ngClick, ngBlur là những directive điển hình cho mục đích này). Dưới đây là demo thể hiện điều đó. &lt;/p&gt;

&lt;p&gt;&lt;a class=&quot;jsbin-embed&quot; href=&quot;http://jsbin.com/guxevu/2/embed?html,js,output&quot;&gt;Directive Example&lt;/a&gt;&lt;script src=&quot;http://static.jsbin.com/js/embed.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;interpolate-service&quot;&gt;$interpolate service&lt;/h2&gt;

&lt;p&gt;Trong Angular, chúng ta có khả năng biên dịch template một cách thủ công. Phép nội suy (interpolation) cho phép chúng ta cập nhật trực tiếp một chuỗi của text dựa trên các điều kiện của scope. Dịch vụ &lt;a href=&quot;https://docs.angularjs.org/api/ng/service/$interpolate&quot;&gt;$interpolate&lt;/a&gt; được Angular sử dụng với mục đích đó. Dịch vụ này trả về một function với các tham số đầu vào là các expression được chứa trong chuỗi.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;http://thapsang.net/assets/img/$interpolateService.png&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;Dưới đây là ví dụ thực hiện với dịch vụ $interpolate:&lt;/p&gt;

&lt;p&gt;&lt;a class=&quot;jsbin-embed&quot; href=&quot;http://jsbin.com/voneze/1/embed?html,js,output&quot;&gt;Interpolate Expression Example&lt;/a&gt;&lt;script src=&quot;http://static.jsbin.com/js/embed.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/17900588/what-is-the-difference-between-the-parse-interpolate-and-compile-services&quot;&gt;What is the difference between the $parse, $interpolate and $compile services?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://techanand.wordpress.com/2014/06/22/angularjs-expressions/&quot;&gt;AngularJs Expressions&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;


  &lt;p&gt;&lt;a href=&quot;http://thapsang.net/angularjs/co-che-phan-tich-expression-trong-angularjs&quot;&gt;Cơ chế phân tích expression trong AngularJS.&lt;/a&gt; was originally published by Ta Ly at &lt;a href=&quot;http://thapsang.net&quot;&gt;THAPSANG.NET&lt;/a&gt; on December 01, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Interceptor trong AngularJS]]></title>
  <link>http://thapsang.net/angularjs/$http-interceptor-trong-angularjs</link>
  <id>http://thapsang.net/angularjs/$http-interceptor-trong-angularjs</id>
  <updated>2014-11-25T00:00:00-00:00</updated>
  <published>2014-11-25T00:00:00+07:00</published>
  
  <author>
    <name>Ta Ly</name>
    <uri>http://thapsang.net</uri>
    <email>taly2808@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;$http service của AngularJS cho phép chúng ta giao tiếp với phía backend và thực hiện các HTTP request. Có nhiều trường hợp chúng ta muốn chặn bắt (capture) các request và tính toán, xử lý (manipulate) nó trước khi gửi nó đến server. Trong trường hợp khác, chúng ta lại muốn chặn bắt các đáp ứng trả về (response), xử lý nó trước khi hoàn thành lời gọi. Ví như việc xử lý lỗi http trong toàn ứng dụng (global http error handling), xác thực (authentication) cũng cần thực hiện như vậy. &lt;strong&gt;Interceptors&lt;/strong&gt; (bộ chặn) rất thuận tiện cho các trường hợp như thế.&lt;/p&gt;

&lt;section&gt;
  &lt;header&gt;
    &lt;h2&gt;Nội dung&lt;/h2&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#interceptors-l-g&quot;&gt;Interceptors là gì?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cc-loi-interceptor&quot;&gt;Các loại Interceptor&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#request-interceptor&quot;&gt;Request Interceptor&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#response-interceptor&quot;&gt;Response Interceptor&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#requesterror-interceptor&quot;&gt;RequestError Interceptor&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#responseerror-interceptor&quot;&gt;ResponseError Interceptor&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#v-d&quot;&gt;Ví dụ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;

&lt;h2 id=&quot;interceptors-l-g&quot;&gt;Interceptors là gì?&lt;/h2&gt;

&lt;p&gt;Đối tượng cung cấp &lt;strong&gt;$httpProvider&lt;/strong&gt; chứa một mảng các interceptors &lt;code&gt;$httpProvider.interceptors&lt;/code&gt;. Một interceptor đơn giản là một dịch vụ (service factory) được đăng ký vào mảng đó. Chúng ta có thể tạo một interceptor như sau:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;myInterceptor&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dependency1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dependency2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt;     &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myInterceptor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt;         &lt;span class=&quot;p&quot;&gt;....&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;4&lt;/span&gt;         &lt;span class=&quot;p&quot;&gt;....&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;5&lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;6&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;7&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myInterceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Và sau đó thêm nó vào trong mảng &lt;code&gt;$httpProvider.interceptors&lt;/code&gt;. Do đòi hỏi phải có khả năng truy cập vào đối tượng cung cấp $httpProvider để đăng ký mới một interceptor nên việc này &lt;strong&gt;phải được hiện trong phần cấu hình&lt;/strong&gt; của ứng dụng web:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;$httpProvider&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$httpProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt;     &lt;span class=&quot;nx&quot;&gt;$httpProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;interceptors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;myInterceptor&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}]);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;cc-loi-interceptor&quot;&gt;Các loại Interceptor&lt;/h2&gt;

&lt;h3 id=&quot;request-interceptor&quot;&gt;Request Interceptor&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Chặn một request bằng cách thực thi hàm &lt;code&gt;request&lt;/code&gt;&lt;/strong&gt;: Phương thức này được thực hiện trước khi &lt;code&gt;$http&lt;/code&gt; gửi request đến server, do đó chúng ta có thể sửa đổi cấu hình (đối tượng &lt;code&gt;config&lt;/code&gt;) và thực hiện các hành động khác. Hàm này nhận đối tượng &lt;code&gt;config&lt;/code&gt; như là một tham số đầu vào và phải trả lại trực tiếp đối tượng &lt;code&gt;config&lt;/code&gt; hoặc một lời hứa (promise) chứa đối tượng &lt;code&gt;config&lt;/code&gt;. Nếu trả lại một đối tượng &lt;code&gt;config&lt;/code&gt; không hợp lệ hoặc một lời hứa bị bác bỏ (reject) thì lời gọi &lt;code&gt;$http&lt;/code&gt; sẽ thất bại.&lt;/p&gt;

&lt;h3 id=&quot;response-interceptor&quot;&gt;Response Interceptor&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Chặn một response bằng cách thực thi hàm &lt;code&gt;response&lt;/code&gt;&lt;/strong&gt;: Phương thức này được gọi sau khi &lt;code&gt;$http&lt;/code&gt; nhận được response từ server, do đó chúng ta có thể sửa đổi response và thực hiện các hành động khác. Hàm này nhận đối tượng &lt;code&gt;response&lt;/code&gt; như là một tham số đầu vào và phải trả lại trực tiếp đối tượng &lt;code&gt;response&lt;/code&gt; hoặc một lời hứa (promise) chứa đối tượng &lt;code&gt;response&lt;/code&gt;. Đối tượng &lt;code&gt;response&lt;/code&gt; gồm &lt;em&gt;cấu hình của request (config), headers, status, data&lt;/em&gt;. Nếu trả lại một đối tượng &lt;code&gt;response&lt;/code&gt; không hợp lệ hoặc một lời hứa bị bác bỏ (reject) thì lời gọi &lt;code&gt;$http&lt;/code&gt; sẽ thất bại.&lt;/p&gt;

&lt;h3 id=&quot;requesterror-interceptor&quot;&gt;RequestError Interceptor&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Chặn request error bằng cách thực thi hàm &lt;code&gt;requestError&lt;/code&gt;&lt;/strong&gt;: đôi khi, một request không thể gửi đi hoặc nó bị hủy bỏ bởi một bộ chặn (interceptor). Bộ chặn lỗi request (request error interceptor) bắt (capture) các requests đã bị hủy bỏ bởi một request interceptor trước đó. Nó có thể được sử dụng để khôi phục (recover) request và đôi khi quay lui lại những thứ đã được thiết lập trước khi request.&lt;/p&gt;

&lt;h3 id=&quot;responseerror-interceptor&quot;&gt;ResponseError Interceptor&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Chặn response error bằng cách thực thi hàm &lt;code&gt;responseError&lt;/code&gt;&lt;/strong&gt;: đôi khi lời gọi đến server bị thất bại, có khi thì nó bị từ chối bởi một request interceptor hoặc một response interceptor trước đó. Trong những trường hợp đó, bộ chặn lỗi response (response error interceptor) có thể giúp chúng ta khôi phục (recover) các lời gọi đến server.&lt;/p&gt;

&lt;p&gt;Chúng ta có thể sử dụng kết hợp các interceptor trong một service factory như sau:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/taly2808/ae0e3c32789b78c25cce.js&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;v-d&quot;&gt;Ví dụ&lt;/h2&gt;
&lt;p&gt;Trong ví dụ dưới đây, chúng ta mô phỏng tình huống interceptor trước đó đã hủy bỏ (reject) một request và requestError interceptor sẽ lấy được nguyên nhân bị hủy bỏ và phục hồi lại request. (Bạn nên mở &lt;a href=&quot;http://embed.plnkr.co/3oiF36Jcino7rLYyU8eD/&quot;&gt;demo&lt;/a&gt; trên một cửa sổ mới và bật công cụ bug để thấy kết quả).&lt;/p&gt;

&lt;iframe src=&quot;http://embed.plnkr.co/3oiF36Jcino7rLYyU8eD/script.js&quot; style=&quot;border:0px #FFFFFF none;&quot; name=&quot;Request Recover (requestError interceptor)&quot; scrolling=&quot;no&quot; frameborder=&quot;1&quot; marginheight=&quot;0px&quot; marginwidth=&quot;0px&quot; height=&quot;400px&quot; width=&quot;100%&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Ở đây, chúng ta có 2 bộ interceptor: &lt;code&gt;requestRejector&lt;/code&gt; - thực hiện hủy bỏ request, và &lt;code&gt;recoverRequest&lt;/code&gt; - lấy ra nguyên nhân request bị hủy bỏ và khôi phục lại request. Trong demo cũng đưa ra ví dụ minh họa cho response interceptor và responseError interceptor. Để có thể thấy responseError interceptor hoạt động, bạn có thể cung cấp một url không hợp lệ trong url của &lt;em&gt;recoverRequest&lt;/em&gt; factory.&lt;/p&gt;

&lt;h2 id=&quot;ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.webdeveasy.com/interceptors-in-angularjs-and-useful-examples/&quot;&gt;Interceptors in AngularJS and Useful Examples&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://djds4rce.wordpress.com/2013/08/13/understanding-angular-http-interceptors/&quot;&gt;Understanding angular $http interceptors&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://egghead.io/lessons/angularjs-using-angularjs-interceptors-with-http&quot;&gt;Using AngularJS interceptors with $http&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

  &lt;p&gt;&lt;a href=&quot;http://thapsang.net/angularjs/$http-interceptor-trong-angularjs&quot;&gt;Interceptor trong AngularJS&lt;/a&gt; was originally published by Ta Ly at &lt;a href=&quot;http://thapsang.net&quot;&gt;THAPSANG.NET&lt;/a&gt; on November 25, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Hiểu về dịch vụ $http trong AngularJS]]></title>
  <link>http://thapsang.net/angularjs/hieu-ve-$http-service-trong-angularjs</link>
  <id>http://thapsang.net/angularjs/hieu-ve-$http-service-trong-angularjs</id>
  <updated>2014-11-25T00:00:00-00:00</updated>
  <published>2014-11-18T00:00:00+07:00</published>
  
  <author>
    <name>Ta Ly</name>
    <uri>http://thapsang.net</uri>
    <email>taly2808@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;$http service là một dịch vụ cốt lõi của Angular, được sử dụng để giao tiếp với các trình chủ HTTP thông qua các đối tượng &lt;a href=&quot;https://developer.mozilla.org/en/xmlhttprequest&quot;&gt;XMLHttpRequest&lt;/a&gt; của trình duyệt (&lt;em&gt;được sử dụng nhiều trong lập trình AJAX&lt;/em&gt;) hoặc &lt;a href=&quot;http://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Nếu bạn đã từng sử dụng jQuery thì cách hành xử của $http service gần giống như phương thức &lt;a href=&quot;http://api.jquery.com/jquery.ajax/&quot;&gt;$.ajax()&lt;/a&gt; trong jQuery. $http cấu hình một yêu cầu (request) và trả lại một lời hứa (promise). jQuery sử dụng thư viện &lt;a href=&quot;http://api.jquery.com/jQuery.Deferred/&quot;&gt;Deferred&lt;/a&gt; trong nội hàm của nó, trong khi AngularJS sử dụng &lt;a href=&quot;https://docs.angularjs.org/api/ng/service/$q&quot;&gt;$q&lt;/a&gt; service dựa trên cơ chế của thư viện &lt;a href=&quot;http://documentup.com/kriskowal/q/&quot;&gt;Q&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Trước khi đi vào tìm hiểu chi tiết nội dung bài này, cần đảm bảo rằng bạn đã hiểu về &lt;a href=&quot;/angularjs/promises-deferred-trong-angularjs&quot;&gt;Promise/Deffered trong AngularJS&lt;/a&gt;. Trong bài này, chúng ta sẽ tìm hiểu, làm rõ các vấn đề dưới đây:&lt;/p&gt;
&lt;section&gt;  
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#http-service-to-cc-ajax-request&quot;&gt;$http service tạo các AJAX request&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cc-phng-thc-trong-http&quot;&gt;Các phương thức trong $http&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#httpconfig&quot;&gt;$http(config)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#hm-success-v-error-ca-i-tng-promise&quot;&gt;Hàm success() và error() của đối tượng promise&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#jsonp&quot;&gt;JSONP&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#jsonp-l-g&quot;&gt;JSONP là gì?&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#jsonp-trong-angularjs&quot;&gt;JSONP trong AngularJS&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#interceptors&quot;&gt;Interceptors&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;

&lt;h2 id=&quot;http-service-to-cc-ajax-request&quot;&gt;$http service tạo các AJAX request&lt;/h2&gt;

&lt;p&gt;Cần nhớ rằng, các lời gọi AJAX (Asynchronous Javascript and XML) &lt;strong&gt;không thể gửi đến một tên miền khác&lt;/strong&gt; với tên miền mà trang HTML được load. Ví như một trang HTML đang được load từ tên miền &lt;em&gt;thapsang.net&lt;/em&gt; thì sau đó trang HTML chỉ có thể thực hiện các lời gọi AJAX trở lại URLs trong tên miền &lt;em&gt;thapsang.net&lt;/em&gt;. Muốn thực hiện các lời gọi đến các dịch vụ thuộc tên miền khác, chúng ta phải sử dụng đến các JSONP request.&lt;/p&gt;

&lt;p&gt;Dưới đây là ví dụ đơn giản sử dụng $http service thực hiện một lời gọi AJAX trong ứng dụng AngularJS:&lt;/p&gt;

&lt;iframe src=&quot;http://embed.plnkr.co/rYZ9d4CAG3PztwIZnegz/script.js&quot; style=&quot;border:0px #FFFFFF none;&quot; name=&quot;A single  $http AJAX&quot; scrolling=&quot;no&quot; frameborder=&quot;1&quot; marginheight=&quot;0px&quot; marginwidth=&quot;0px&quot; height=&quot;300px&quot; width=&quot;100%&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Trong file &lt;code&gt;script.js&lt;/code&gt; của ví dụ trên, chúng ta thấy rằng, controller &lt;code&gt;MyController&lt;/code&gt; được bơm vào hai tham số: $scope và $http. $http service được sử dụng để thực hiện lời gọi AJAX.&lt;/p&gt;

&lt;p&gt;Các request được gọi thông qua dịch vụ $http đều trả về một đối tượng “lời hứa” (promise). Đối tượng promise này có một phương thức &lt;code&gt;success()&lt;/code&gt; và một phương thức &lt;code&gt;error()&lt;/code&gt;. Chúng ta sẽ tìm hiểu chi tiết về phương thức success() và error() ở phần sau.&lt;/p&gt;

&lt;h2 id=&quot;cc-phng-thc-trong-http&quot;&gt;Các phương thức trong $http&lt;/h2&gt;

&lt;p&gt;$http service cho phép chúng ta gửi các requests tới web server với các phương thức POST, PUT, GET, …. Dưới đây là cách viết rút gọn của các phương thức:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$http.get(url, [config])&lt;/li&gt;
  &lt;li&gt;$http.delete(url, [config])&lt;/li&gt;
  &lt;li&gt;$http.head(url, [config])&lt;/li&gt;
  &lt;li&gt;$http.patch(url, data, [config])&lt;/li&gt;
  &lt;li&gt;$http.post(url, data, [config])&lt;/li&gt;
  &lt;li&gt;$http.put(url, data, [config])&lt;/li&gt;
  &lt;li&gt;$http.jsonp(url, [config])&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Chú ý rằng, phương thức &lt;strong&gt;$http.post()&lt;/strong&gt;, &lt;strong&gt;$http.put()&lt;/strong&gt; và &lt;strong&gt;$http.patch()&lt;/strong&gt; có tham số &lt;code&gt;data&lt;/code&gt; chứa dữ liệu được gửi đến server. Các phương thức còn lại không thể có tham số &lt;code&gt;data&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Tham số &lt;code&gt;data&lt;/code&gt; sẽ được chuyển thành một chuỗi JSON, chuỗi này sẽ được đưa vào trong phần request body khi HTTP request được gửi tới server. AngularJS sẽ coi tất cả các thuộc tính bắt đầu với ký tự &lt;code&gt;$&lt;/code&gt; là của riêng nó, do đó nó sẽ loại bỏ &lt;code&gt;$&lt;/code&gt; ra khỏi data. Nếu dữ liệu của bạn cần chứa các thuộc tính bắt đầu với &lt;code&gt;$&lt;/code&gt; thì bạn cần chuyển đối tượng &lt;code&gt;data&lt;/code&gt; thành chuỗi của riêng bạn bằng cách sử dụng hàm &lt;code&gt;JSON.stringify(data)&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;httpconfig&quot;&gt;$http(config)&lt;/h2&gt;

&lt;p&gt;Chúng ta có thể sử dụng dịch vụ $http như một hàm trực tiếp, ví như: &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;promise&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sử dụng theo cách này, URL và phương thức HTTP được thiết lập bên trong đối tượng &lt;code&gt;config&lt;/code&gt;. Tham số của &lt;code&gt;config&lt;/code&gt; được truyền vào các hàm &lt;code&gt;$http&lt;/code&gt; khác nhau để kiểm soát các HTTP request gửi đến server, nó gồm các thuộc tính sau:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;method&lt;/strong&gt;: được sử dụng để thiết lập phương thức HTTP cho request. Nó là một trong các phương thức GET, POST, PUT, DELETE, HEAD. Thuộc tính này thường được thiết lập ngầm khi chúng ta gọi bằng cách phương thức rút gọn (chẳng hạn như $http.get()), khi đó chúng ta không phải thiết lập thuộc tính này.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;url&lt;/strong&gt;: được sử dụng để thiết lập URL cho lời gọi AJAX.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;params&lt;/strong&gt;: dùng để thiết lập thêm các tham số cho request, nó sẽ viết thêm một chuỗi truy vấn vào URL với dạng &lt;code&gt;?key1=value1&amp;amp;key2=value2&lt;/code&gt;. Ví dụ dưới đây sẽ thêm tham số vào URL và khi đó url khi gửi đến server có dạng &lt;code&gt;/someUrl?user_id=3&lt;/code&gt;:&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;  $http.get(&#39;/someUrl&#39;, {
      params: { user_id: 3 }
  });
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;data&lt;/strong&gt;: là một chuỗi hoặc một đối tượng, nó là dữ liệu được gửi đến server. Thuộc tính này được thiết lập khi sử dụng với phương thức POST hoặc PUT.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;headers&lt;/strong&gt;: dùng để thiết lập bổ sung các HTTP headers mà chúng ta muốn gửi đến server.&lt;/p&gt;

    &lt;p&gt;$http service sẽ tự động thêm các &lt;a href=&quot;https://docs.angularjs.org/api/ng/service/$http#setting-http-headers&quot;&gt;HTTP headers nhất định&lt;/a&gt; cho tất cả các requests. Những giá trị mặc định này được cấu hình trong đối tượng &lt;code&gt;$httpProvider.defaults.headers&lt;/code&gt;:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Headers chung cho tất cả các requests: &lt;code&gt;$httpProvider.defaults.headers.common&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;code&gt;Accept: application/json, text/plain, * / *&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Headers mặc định cho POST requests: &lt;code&gt;$httpProvider.defaults.headers.post&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;code&gt;Content-Type: application/json&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Headers mặc định cho PUT requests: &lt;code&gt;$httpProvider.defaults.headers.put&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;code&gt;Content-Type: application/json&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;Để thêm hoặc ghi đè các giá trị mặc định, chúng ta chỉ cần thêm hoặc loại bỏ một thuộc tính từ đối tượng cấu hình. Để loại bỏ một header được tự động thêm vào thông qua &lt;code&gt;$httpProvider.defaults.headers&lt;/code&gt; trong mỗi request, chúng ta thiết lập giá trị &lt;code&gt;undefined&lt;/code&gt; cho header đó. Ví dụ:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;http://example.com&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;4&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;5&lt;/span&gt;     &lt;span class=&quot;s1&quot;&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;6&lt;/span&gt;     &lt;span class=&quot;s1&quot;&gt;&amp;#39;Authorization&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;login YmVlcDpib29w&amp;#39;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;7&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;8&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;test&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;xsrfHeaderName&lt;/strong&gt;: tên của HTTP header để gán với XSRF token. Giá trị mặc định của thuộc tính này là &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; được chứa trong đối tượng &lt;code&gt;$httpProvider.defaults&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;xsrfCookieName&lt;/strong&gt;: tên của cookie chứa XSRF token. Giá trị mặc định được thiết lập trong đối tượng &lt;code&gt;$httpProvider.defaults&lt;/code&gt; là &lt;code&gt;XSRF-TOKEN&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;small&gt;Hai thuộc tính &lt;strong&gt;xsrfHeaderName&lt;/strong&gt; và &lt;strong&gt;xsrfCookieName&lt;/strong&gt; được sử dụng để ngăn chặn việc giả mạo request từ các site bên ngoài (Cross-site request forgery - XSRF). &lt;a href=&quot;http://en.wikipedia.org/wiki/Cross-site_request_forgery&quot;&gt;XSRF&lt;/a&gt; là một kỹ thuật mà một site trái phép có thể lợi dụng dữ liệu riêng tư của người dùng để giả mạo một request tới một trang mà hacker mong muốn. Angular cung cấp một cơ chế để chống lại XSRF. Khi thực hiện các &lt;a href=&quot;http://en.wikipedia.org/wiki/XMLHttpRequest&quot;&gt;XHR&lt;/a&gt; request, $http service đọc một token từ một cookie (mặc định là &lt;code&gt;XSRF-TOKEN&lt;/code&gt;) và thiết lập nó như là một HTTP header (&lt;code&gt;X-XSRF-TOKEN&lt;/code&gt;). Bởi vì chỉ có Javascript chạy trên cùng domain mới có thể đọc được cookie nên server có thể chắc chắn rằng XHR đến từ Javascript chạy trên domain của bạn. Các header sẽ không thể thiết lập cho các cross-domain request.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Để tận dụng lợi thế này, server cần thiết lập một token được gọi là &lt;code&gt;XSRF-TOKEN&lt;/code&gt; cho HTTP GET request đầu tiên. Trên các XHR request tiếp theo, server có thể xác minh rằng cookie phù hợp với &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; HTTP header và do đó chắc chắn rằng chỉ có Javascript chạy trên domain của bạn mới có thể gửi được request. Token cho mỗi user là duy nhất và phải được server xác thực.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Tên của các header có thể được chỉ rõ bằng cách sử dụng thuộc tính &lt;code&gt;xsrfHeaderName&lt;/code&gt; và &lt;code&gt;xsrfCookieName&lt;/code&gt; của &lt;code&gt;$httpProvider.defaults&lt;/code&gt; khi cấu hình (config-time), hoặc của &lt;code&gt;$http.defaults&lt;/code&gt; khi chạy thực (run-time), hoặc trên từng đối tượng &lt;code&gt;config&lt;/code&gt; của mỗi request.&lt;/small&gt;&lt;/p&gt;
&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;transformRequest&lt;/strong&gt;: dùng để thiết lập một chức năng (function) có thể chuyển đổi đối tượng request trước khi gửi nó đến server.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;transformResponse&lt;/strong&gt;: dùng để thiết lập một chức năng (function) có thể chuyển đổi đối tượng response được trả lại từ server trước khi trả nó ứng dụng.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;small&gt;Các request và response đều có thể được biến đổi (transform) bằng cách sử dụng các hàm chuyển đổi &lt;code&gt;transformRequest&lt;/code&gt; và &lt;code&gt;transformResponse&lt;/code&gt;. Những thuộc tính này có thể là một function trả lại giá trị đã được chuyển đổi &lt;code&gt;{function(data, headersGetter)}&lt;/code&gt; hoặc là một mảng các hàm chuyển đổi &lt;code&gt;{Array.&amp;lt;function(data, headersGetter)&amp;gt;}&lt;/code&gt;, cho phép chúng ta thêm các hàm transform (với hàm &lt;code&gt;push&lt;/code&gt; và &lt;code&gt;unshift&lt;/code&gt;) vào trong chuỗi chuyển đổi. &lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;AngularJS cung cấp các hàm chuyển đổi mặc định xử lý với dữ liệu JSON như sau:&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;- Chuyển đổi request (Request transformations), các function được lưu trữ trong thuộc tính &lt;code&gt;$httpProvider.defaults.transformRequest&lt;/code&gt; và &lt;code&gt;$http.defaults.transformRequest&lt;/code&gt;: nếu thuộc tính &lt;code&gt;data&lt;/code&gt; của đối tượng &lt;code&gt;config&lt;/code&gt; của request chứa một đối tượng, Angular sẽ tuần tự hóa dữ liệu thành định dạng JSON.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;- Chuyển đổi phản hồi (Response transformations), các function được lưu trữ trong thuộc tính &lt;code&gt;$httpProvider.defaults.transformResponse&lt;/code&gt; và &lt;code&gt;$http.defaults.transformResponse&lt;/code&gt;: Nếu phát hiện tiền tố XSRF trong dữ liệu phản hồi, Angular sẽ tách nó ra khỏi dữ liệu. Nếu nhận thấy một phản hồi có dạng JSON thì Angular sẽ giải tuần tự hóa (deserialize) dữ liệu bằng cách sử dụng bộ phân tích cú pháp JSON (JSON parser).&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Bạn có thể ghi đè các hàm chuyển đổi mặc định bằng cách cung cấp giá trị cho các thuộc tính &lt;strong&gt;transformRequest&lt;/strong&gt; và &lt;strong&gt;transformResponse&lt;/strong&gt; trong đối tượng &lt;code&gt;config&lt;/code&gt; của &lt;code&gt;$http&lt;/code&gt;.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Ví dụ dưới đây, chúng ta có thể thấy cách thức hoạt động của các hàm transform. Chúng ta thực hiện một request thông qua phương thức POST. Trong &lt;code&gt;$http.post()&lt;/code&gt;, dữ liệu được truyền đi sử dụng &lt;code&gt;Content-Type: application/json&lt;/code&gt; và tuần tự hóa dữ liệu định dạng JSON &lt;code&gt;{ &quot;name&quot;: &quot;angular&quot;, &quot;rate&quot;: &quot;5&quot; }&lt;/code&gt; nhưng một số ngôn ngữ phía web server, đặc biệt là PHP không thể giải tuần tự (deserialize) dữ liệu. Do đó, dữ liệu truyền đi cần sử dụng &lt;code&gt;Content-Type: x-www-form-urlencoded&lt;/code&gt;, khi đó dữ liệu sẽ được tuần tự hóa theo cách submit form thông thường &lt;code&gt;name=angular&amp;amp;rate=5&lt;/code&gt;. Các hàm transform được khai báo globally trong phần config, và chúng ta khai báo hàm &lt;em&gt;transformResponse&lt;/em&gt; trong request POST (locally). Khi đó hàm &lt;em&gt;transformResponse&lt;/em&gt; khai báo trong $http sẽ ghi đè lên hàm &lt;em&gt;transformResponse&lt;/em&gt; được khai báo global. Bạn có thể chạy &lt;a href=&quot;http://jsfiddle.net/taly2808/p46dr9ck/2/embedded/result/&quot;&gt;demo&lt;/a&gt; trên một cửa sổ mới và bật công cụ bug (F12) để thấy rõ kết quả.&lt;/small&gt;&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;http://thapsang.net/assets/img/transformRequestResponse.png&quot; /&gt;
&lt;/figure&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;300&quot; src=&quot;http://jsfiddle.net/taly2808/p46dr9ck/2/embedded/js,html,result&quot; allowfullscreen=&quot;allowfullscreen&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;
&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;cache&lt;/strong&gt;: để kích hoạt bộ nhớ đệm, chúng ta thiết lập giá trị thuộc tính cache là &lt;code&gt;true&lt;/code&gt; (để sử dụng cache mặc định) hoặc một đối tượng cache tùy chỉnh (được xây dựng với &lt;a href=&quot;https://docs.angularjs.org/api/ng/service/$cacheFactory&quot;&gt;$cacheFactory&lt;/a&gt;). Ví dụ:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;col-md-6&quot;&gt;
	
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/api/users.json&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;4&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Or, using the .get helper&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/api/users.json&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;8&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;  
&lt;span class=&quot;lineno&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;div class=&quot;col-md-6&quot;&gt;
	
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myCache&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$cacheFactory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;myCache&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/api/users.json&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myCache&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Or, using the .get helper&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/api/users.json&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myCache&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;Khi bộ nhớ đệm được kích hoạt, $http lưu trữ các đáp ứng trả về từ server trong bộ nhớ cache. Khi thực hiện cùng một request, trong các lần tiếp theo, các response được lấy từ bộ nhớ cache mà không cần gửi lại request tới server. Bạn có thể tìm hiểu thêm về &lt;a href=&quot;https://www.ng-book.com/p/Caching/&quot;&gt;Caching trong AngularJS&lt;/a&gt; để nắm rõ về thuộc tính này.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;timeout&lt;/strong&gt;: thiết lập thời gian chờ cho các request. Thuộc tính này có thể nhận giá trị là dạng số (tính bằng milli giây) hoặc có thể là một lời hứa (promise). Khi hết thời gian chờ (giá trị được thiết lập là số), request bị hủy bỏ. Nếu là một promise thì request sẽ bị hủy bỏ khi promise được giải quyết (resolved).&lt;/p&gt;

    &lt;p&gt;Trong demo dưới đây, chúng ta có một button thực hiện việc gửi request để lấy danh sách các books, một button thực hiện việc hủy request nếu request chưa trả về kết quả. Bạn có thể chạy &lt;a href=&quot;http://embed.plnkr.co/jbRHklfI1H1VfKLjJtCd/preview&quot;&gt;demo&lt;/a&gt; trên một cửa sổ mới, bật công cụ bug của trình duyệt (nhấn F12), chọn tab &lt;strong&gt;Network&lt;/strong&gt;. Ban đầu, bạn thực hiện &lt;strong&gt;Send request&lt;/strong&gt;, khi nó đang &lt;em&gt;Loading …&lt;/em&gt;, bạn thực hiện &lt;strong&gt;Cancel request&lt;/strong&gt; thì bạn sẽ thấy lời gọi bị hủy bỏ.&lt;/p&gt;

    &lt;figure&gt;
      &lt;img src=&quot;http://thapsang.net/images/canceled-request.png&quot; /&gt;
  &lt;/figure&gt;

    &lt;iframe src=&quot;http://embed.plnkr.co/jbRHklfI1H1VfKLjJtCd/index.html&quot; style=&quot;border:0px #FFFFFF none;&quot; name=&quot;Canceling AJAX request using $http&quot; scrolling=&quot;no&quot; frameborder=&quot;1&quot; marginheight=&quot;0px&quot; marginwidth=&quot;0px&quot; height=&quot;300px&quot; width=&quot;100%&quot;&gt;&lt;/iframe&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;withCredentials&lt;/strong&gt;: thuộc tính này có giá trị thuộc kiểu &lt;em&gt;boolean&lt;/em&gt;. &lt;code&gt;withCredentials&lt;/code&gt; là một lá cờ (flag) đặt trên  đối tượng cấp thấp &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt;XMLHttpRequest&lt;/a&gt;. Nếu bạn sử dụng dịch vụ $http chuẩn để truy cập vào các remote APIs, nó sẽ chỉ làm việc chừng nào server được cấu hình cho phép các requests từ tên miền của bạn và bạn không cần lưu trữ Cookies. Tuy nhiên, trong nhiều ứng dụng chúng ta cũng cần phải thiết lập và lưu trữ thông tin Cookies cho những thứ như đăng nhập chẳng hạn. Mặc định, điều này không thể thực hiện được trên hầu hết các trình duyệt. Bằng cách thiết lập giá trị &lt;code&gt;true&lt;/code&gt; cho &lt;code&gt;withCredentials&lt;/code&gt;, chúng ta có thể sử dụng Cookies cho mục đích của mình. Bạn có thể tham khảo &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS#Requests_with_credentials&quot;&gt;Requests with credentials&lt;/a&gt; để hiểu rõ hơn về thuộc tính này.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;responseType&lt;/strong&gt;: là một chuỗi (string), có thể thiết lập để thay đổi kiểu dữ liệu của các đáp ứng trả về, ví như &lt;em&gt;json, text, document, …&lt;/em&gt;. Xem &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest#responseType&quot;&gt;responseType&lt;/a&gt; để có thông tin chi tiết về các giá trị cho thuộc tính này.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;hm-success-v-error-ca-i-tng-promise&quot;&gt;Hàm success() và error() của đối tượng promise&lt;/h2&gt;

&lt;p&gt;Như đã đề cập ở phần trên, các function trong dịch vụ $http trả về một lời hứa (promise object). Đối tượng promise này có hai phương thức &lt;code&gt;success()&lt;/code&gt; và &lt;code&gt;error()&lt;/code&gt;. Bằng cách gọi các phương thức này và truyền một hàm callback cho mỗi phương thức, chúng ta có thể kiểm soát được những gì xảy ra sau khi lời gọi AJAX kết thúc. Nếu lời gọi AJAX thành công (server trả lại mã HTTP từ 200 đến 299) thì hàm successCallback đã được truyền trong phương thức &lt;code&gt;success()&lt;/code&gt; được thực thi. Nếu lời gọi AJAX thất bại thì hàm errorCallback đã được truyền trong phương thức &lt;code&gt;error()&lt;/code&gt; được thực thi. Các phương thức này được viết như sau: &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Simple GET request example :&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/someUrl&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// this callback will be called asynchronously&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// when the response is available&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// called asynchronously if an error occurs&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// or server returns response with an error status.&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Cách viết này cũng tương đương với việc sử dụng phương thức &lt;strong&gt;then()&lt;/strong&gt; để đăng ký các hàm callbacks: &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Simple GET request example :&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/someUrl&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt; 	&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt; 	  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//successCallback&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt; 	    &lt;span class=&quot;c1&quot;&gt;// this callback will be called asynchronously&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt; 	    &lt;span class=&quot;c1&quot;&gt;// when the response is available&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt; 	  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt; 	  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//errorCallback&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt; 	    &lt;span class=&quot;c1&quot;&gt;// called asynchronously if an error occurs&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt; 	    &lt;span class=&quot;c1&quot;&gt;// or server returns response with an error status.&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt; 	  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Các hàm callback trong hai phương thức success() và error() đều có các thuộc tính sau:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;data&lt;/strong&gt; - có kiểu string hoặc Object - phần dữ liệu trả về từ server.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;status&lt;/strong&gt; - có kiểu số - mã trạng thái HTTP (HTTP status code) được trả về từ server.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;headers&lt;/strong&gt; - là một function, có thể được sử dụng để lấy bất cứ HTTP response headers nào được trả lại cùng với response. Chúng ta có thể lấy ra một header bằng cách gọi &lt;code&gt;headers([headerName]);&lt;/code&gt;. &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;config&lt;/strong&gt; - là đối tượng cấu hình (&lt;code&gt;config&lt;/code&gt; object) đã được sử dụng để tạo ra các HTTP requests.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;statusText&lt;/strong&gt; - có kiểu string - là thông báo trạng thái HTTP của response dưới dạng văn bản (text).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;jsonp&quot;&gt;JSONP&lt;/h2&gt;

&lt;p&gt;Dịch vụ $http của AngularJS cũng có khả năng gửi đi các &lt;a href=&quot;http://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP&lt;/a&gt; request. Các lời gọi AJAX thông thường chỉ có thể gửi đến các URL trong cùng domain. Với các JSONP request, chúng ta có thể gửi các request tới các URL của các tên miền khác. &lt;/p&gt;

&lt;h3 id=&quot;jsonp-l-g&quot;&gt;JSONP là gì?&lt;/h3&gt;

&lt;p&gt;JSONP là viết tắt của “JSON with padding”. Một JSONP request không gửi qua đối tượng XHR như các lời gọi AJAX thông thường mà thay vào đó, một phần tử &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; được tạo ra và chèn vào trang HTML. Ví dụ, một phần tử &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; có thể  giống như sau:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http://remoteserver/api/theService.json?callback=myCallback&amp;amp;k1=v1&amp;amp;k2=v2&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;URL của dịch vụ từ xa (remote service) được đặt trong thuộc tính &lt;code&gt;src&lt;/code&gt; của thẻ &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; để gọi các lời gọi JSONP. URL này có thể bao gồm bất cứ tham số nào mà chúng ta muốn gửi tới remote service.&lt;/p&gt;

&lt;p&gt;Chúng ta có thể hiểu cơ chế làm việc của JSONP như sau:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;a.com&lt;/strong&gt; là phía client, đưa ra yêu cầu đến remote service là &lt;strong&gt;b.com&lt;/strong&gt;. Cả &lt;strong&gt;a.com&lt;/strong&gt; và &lt;strong&gt;b.com&lt;/strong&gt; thống nhất quy định dữ liệu trả về được bao gói theo tên function được gửi trên URL (thường sử dụng tên &lt;code&gt;jsonp&lt;/code&gt; hoặc &lt;code&gt;callback&lt;/code&gt; để truyền tên function callback).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;a.com&lt;/strong&gt; định nghĩa hàm callback mà &lt;strong&gt;b.com&lt;/strong&gt; sẽ sử dụng để trả kết quả về (ví dụ là &lt;em&gt;myCallback&lt;/em&gt;).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;a.com&lt;/strong&gt; gửi request đến &lt;strong&gt;b.com&lt;/strong&gt; theo URL quy định (ví dụ: &lt;em&gt;http://b.com/api/theService.json?callback=myCallback&lt;/em&gt;).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;b.com&lt;/strong&gt; trả về dữ liệu và truyền dữ liệu trả về đó như là tham số trong hàm callback có tên &lt;em&gt;myCallback&lt;/em&gt;, ví dụ: &lt;em&gt;myCallback({name: “David”, title: “CEO”})&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Theo cơ chế trên, bất cứ thứ gì mà remote service muốn trả lại cho bạn đều được chứa trong đối tượng Javascript này. Nhìn từ góc độ của remote service thì đối tượng Javascript đó là JSON giống như các đối tượng JSON khác được trả lại trang HTML. Chỉ có sự khác biệt đó là đối tượng JSON này được bao gói trong một lời gọi hàm. Lời gọi hàm này chính là phần đệm “padding” của “JSON with padding” hay được gọi là JSONP.&lt;/p&gt;

&lt;h3 id=&quot;jsonp-trong-angularjs&quot;&gt;JSONP trong AngularJS&lt;/h3&gt;

&lt;p&gt;Trong AngularJS, chúng ta có thể sử dụng lời gọi JSONP thông qua $http service như sau:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jsonp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Giống như các phương thức AJAX khác, &lt;em&gt;jsonp()&lt;/em&gt; một &lt;em&gt;url&lt;/em&gt; và một đối tượng &lt;em&gt;config&lt;/em&gt;. Dưới đây là ví dụ với phương thức JSONP:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//thapsang.net/api/theService.json?callback=JSON_CALLBACK&amp;quot;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;responsePromise&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jsonp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt;     &lt;span class=&quot;nx&quot;&gt;k1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;v1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt;     &lt;span class=&quot;nx&quot;&gt;k2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;v2&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;responsePromise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// do something with the returned JavaScript object&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// ( in the &amp;quot;data&amp;quot; parameter ).&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ví dụ này thực hiện một lời gọi JSONP tới service tại địa chỉ &lt;em&gt;http: //thapsang.net/api/theService.json&lt;/em&gt;, &lt;code&gt;config&lt;/code&gt; chứa tham số thông qua trường &lt;code&gt;params&lt;/code&gt;. Khi bạn gọi function &lt;em&gt;$http.jsonp()&lt;/em&gt;, AngularJS sẽ tạo ra một phần tử &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; với URL tương ứng và chèn nó vào trang HTML.&lt;/p&gt;

&lt;p&gt;URL được truyền vào phương thức &lt;em&gt;$http.jsonp()&lt;/em&gt; &lt;strong&gt;phải chứa&lt;/strong&gt; tham số &lt;code&gt;callback=JSON_CALLBACK&lt;/code&gt;. AngularJS sẽ thay thế chuỗi &lt;code&gt;JSON_CALLBACK&lt;/code&gt; bằng tên của function callback do AngularJS tạo ra.&lt;/p&gt;

&lt;h2 id=&quot;interceptors&quot;&gt;Interceptors&lt;/h2&gt;

&lt;p&gt;Khi giao tiếp với server thông qua $http service, có khi chúng ta cần chặn các request hoặc response để làm gì đó trước khi gửi chúng đến server hoặc trả lại phía client. Chúng ta sẽ tìm hiểu về nội dung này trong bài &lt;a href=&quot;/angularjs/$http-interceptor-trong-angularjs&quot;&gt;Interceptor trong AngularJS&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.angularjs.org/api/ng/service/$http&quot;&gt;$http service&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://odetocode.com/blogs/scott/archive/2014/04/24/canceling-http-requests-in-angularjs.aspx&quot;&gt;Canceling $http Requests in AngularJS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.bennadel.com/blog/2612-using-the-http-service-in-angularjs-to-make-ajax-requests.htm&quot;&gt;Using The $http Service In AngularJS To Make AJAX Requests&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tutorials.jenkov.com/angularjs/ajax.html&quot;&gt;AngularJS AJAX&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

  &lt;p&gt;&lt;a href=&quot;http://thapsang.net/angularjs/hieu-ve-$http-service-trong-angularjs&quot;&gt;Hiểu về dịch vụ $http trong AngularJS&lt;/a&gt; was originally published by Ta Ly at &lt;a href=&quot;http://thapsang.net&quot;&gt;THAPSANG.NET&lt;/a&gt; on November 18, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Expression trong AngularJS]]></title>
  <link>http://thapsang.net/angularjs/expression-trong-angularjs</link>
  <id>http://thapsang.net/angularjs/expression-trong-angularjs</id>
  <updated>2014-11-28T00:00:00-00:00</updated>
  <published>2014-11-11T00:00:00+07:00</published>
  
  <author>
    <name>Ta Ly</name>
    <uri>http://thapsang.net</uri>
    <email>taly2808@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;strong&gt;Expression&lt;/strong&gt; (biểu thức) được sử dụng hầu khắp trong ứng dụng AngularJS. Expression được sử dụng trong template, trong các thẻ đánh dấu (markup), trong các directives. Vậy cụ thể thì Expression là gì, AngularJS sử dụng và ước lượng nó ra sao? Chúng ta cùng tìm hiểu về nó trong nội dung của bài này.&lt;/p&gt;

&lt;section&gt;
  &lt;header&gt;
    &lt;h2&gt;Nội dung&lt;/h2&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#angularjs-expressions&quot;&gt;AngularJS Expressions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#phn-tch-mt-expression&quot;&gt;Phân tích một expression&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#angularjs-expressions-vs-javascript-expressions&quot;&gt;AngularJS Expressions vs. Javascript Expressions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#v-d&quot;&gt;Ví dụ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#one-time-binding&quot;&gt;One-time binding&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;

&lt;h2 id=&quot;angularjs-expressions&quot;&gt;AngularJS Expressions&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Expression trong AngularJS là các đoạn mã tương tự Javascript, thường được đặt trong hai cặp dấu ngoặc nhọn &lt;code&gt;{{ expression }}&lt;/code&gt;. Khi chúng ta sử dụng ký pháp &lt;code&gt;{{ }}&lt;/code&gt;, chúng ta đang thiết lập cơ chế &lt;code&gt;$watch&lt;/code&gt; lên một expression. Hay nói cách khác, hàm &lt;code&gt;$watch&lt;/code&gt; sẽ theo dõi một thuộc tính trên $scope. Khi có bất kỳ thay đổi nào, nó sẽ gọi chức năng tương ứng.&lt;/li&gt;
  &lt;li&gt;Ví dụ, những expression sau là hợp lệ trong AngularJS:
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;1+2&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;a+b&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;user.name&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;items[0]&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vậy Angular ước lượng (evaluate) các expression như thế nào? Angular sẽ tự động chạy dịch vụ &lt;a href=&quot;https://docs.angularjs.org/api/ng/service/$parse&quot;&gt;$parse&lt;/a&gt; khi nó thực thi vòng lặp $digest. Và &lt;code&gt;$parse&lt;/code&gt; là cơ chế mà Angular sử dụng để ước lượng expression. Chúng ta cùng tìm hiểu sơ lược về cơ chế $parse này.&lt;/p&gt;

&lt;h2 id=&quot;phn-tch-mt-expression&quot;&gt;Phân tích một expression&lt;/h2&gt;

&lt;p&gt;Thông thường, dịch vụ &lt;a href=&quot;https://docs.angularjs.org/api/ng/service/$parse&quot;&gt;$parse&lt;/a&gt; sẽ được Angular tự động gọi để nội suy giá trị của expression, đôi khi nó cũng khá hữu ích để phân tích một expression một cách thủ công (manual).&lt;/p&gt;

&lt;p&gt;Để phân tích thủ công một expression, ta có thể truyền dịch vụ $parse vào trong controller (hoặc service nào đó) và gọi đến dịch vụ để tiến hành phân tích. Trong ví dụ dưới đây, chúng ta có một ô input với biến &lt;code&gt;expr&lt;/code&gt;. Trong controller, chúng ta có thể thiết lập một hàm &lt;code&gt;$watch&lt;/code&gt; và phân tích &lt;code&gt;expr&lt;/code&gt; expression. Xem demo để thấy cách thức hoạt động của nó:&lt;/p&gt;

&lt;p&gt;&lt;a class=&quot;jsbin-embed&quot; href=&quot;http://jsbin.com/qoduqo/1/embed?html,js,output&quot;&gt;Parse Expression Example&lt;/a&gt;&lt;script src=&quot;http://static.jsbin.com/js/embed.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Bạn có thể tham khảo bài viết về &lt;a href=&quot;/angularjs/co-che-phan-tich-expression-trong-angularjs&quot;&gt;cơ chế phân tích expression&lt;/a&gt; để rõ hơn về dịch vụ $parse này.&lt;/p&gt;

&lt;h2 id=&quot;angularjs-expressions-vs-javascript-expressions&quot;&gt;AngularJS Expressions vs. Javascript Expressions&lt;/h2&gt;

&lt;p&gt;Expression trong AngularJS gần giống Javascript Expressions. &lt;strong&gt;AngularJS có cơ chế riêng của mình để phân tích expressions và tìm ra ngữ nghĩa riêng của nó&lt;/strong&gt;. Sự khác biệt thể hiện ở những điểm sau:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Tất cả các expression trong Angular được thực thi trong ngữ cảnh của scope và có quyền truy cập vào biến $scope cục bộ.&lt;/li&gt;
  &lt;li&gt;Một expression trong Angular không ném ra lỗi và trả lại giá trị &lt;strong&gt;undefined&lt;/strong&gt; khi ước lượng với các giá trị &lt;strong&gt;undefined&lt;/strong&gt; hoặc &lt;strong&gt;null&lt;/strong&gt; trong khi Javascript sẽ phát sinh ra lỗi &lt;code&gt;ReferenceError&lt;/code&gt; hoặc &lt;code&gt;TypeError&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;AngularJS &lt;strong&gt;không cho phép&lt;/strong&gt; bất kỳ câu lệnh điều khiển luồng nào (các câu lệnh điều kiện (condition), điều khiển lặp (loop), và các ngoại lệ (throw an exception)) &lt;strong&gt;ngoại trừ toán tử tam phân (a ? b : c)&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Expression trong Angular có thể sử dụng &lt;a href=&quot;https://docs.angularjs.org/guide/filter&quot;&gt;$filter&lt;/a&gt; hoặc một chuỗi các filter để định dạng dữ liệu trước khi hiển thị.&lt;/li&gt;
  &lt;li&gt;AngularJS &lt;strong&gt;không cho phép&lt;/strong&gt; tạo ra các biểu thức chính quy (regular expression) trong expression.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dưới đây là bảng thống kê các biểu thức có thể sử dụng trong AngularJS Expressions.&lt;/p&gt;

&lt;iframe src=&quot;http://teropa.info/images/angular_expressions_cheatsheet.pdf&quot; style=&quot;border:0px #FFFFFF none;&quot; name=&quot;myiFrameAngularJS Expressions&quot; scrolling=&quot;no&quot; frameborder=&quot;1&quot; marginheight=&quot;0px&quot; marginwidth=&quot;0px&quot; height=&quot;500px&quot; width=&quot;100%&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;v-d&quot;&gt;Ví dụ&lt;/h2&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;400&quot; src=&quot;http://jsfiddle.net/taly2808/mfckfvc2/9/embedded/js,html,result/presentation&quot; allowfullscreen=&quot;allowfullscreen&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Array in AngularJS Expressions&lt;/p&gt;

    &lt;iframe width=&quot;100%&quot; height=&quot;150&quot; src=&quot;http://jsfiddle.net/taly2808/nahq7wbz/embedded/html,result/presentation&quot; allowfullscreen=&quot;allowfullscreen&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Objects in AngularJS Expressions&lt;/p&gt;

    &lt;iframe width=&quot;100%&quot; height=&quot;150&quot; src=&quot;http://jsfiddle.net/taly2808/qpno9qfe/embedded/html,result/presentation&quot; allowfullscreen=&quot;allowfullscreen&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ng-bind directive in AngularJS&lt;/p&gt;

    &lt;iframe width=&quot;100%&quot; height=&quot;150&quot; src=&quot;http://jsfiddle.net/taly2808/Lm7rL69L/embedded/html,result/presentation&quot; allowfullscreen=&quot;allowfullscreen&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;one-time-binding&quot;&gt;One-time binding&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Từ phiên bản 1.3&lt;/strong&gt;, AngularJS cung cấp tính năng &lt;strong&gt;one-time binding&lt;/strong&gt; (gắn kết dữ liệu một lần) bằng cách sử dụng dấu &lt;code&gt;::&lt;/code&gt; trước biểu thức như sau: &lt;code&gt;{{ ::expression }}&lt;/code&gt;.Với tính năng này, expression chỉ được nội suy (interpolated) một lần duy nhất và sau đó không được theo dõi (watched) nữa, giúp giải phóng tài nguyên khi việc gắn kết dữ liệu đã ổn định. Việc giảm theo dõi một số lượng các biểu thức giúp cho các vòng lặp thực thi nhanh hơn và cho phép nhiều thông tin được hiển thị cùng lúc.&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;200&quot; src=&quot;http://jsfiddle.net/taly2808/y48wqjqs/embedded/result,html,js/presentation&quot; allowfullscreen=&quot;allowfullscreen&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.angularjs.org/guide/expression&quot;&gt;The docs AngularJS Expressions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://teropa.info/blog/2014/03/23/angularjs-expressions-cheatsheet.html&quot;&gt;AngularJS Expressions Cheatsheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://techanand.wordpress.com/2014/06/22/angularjs-expressions/&quot;&gt;AngularJs Expressions&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;


  &lt;p&gt;&lt;a href=&quot;http://thapsang.net/angularjs/expression-trong-angularjs&quot;&gt;Expression trong AngularJS&lt;/a&gt; was originally published by Ta Ly at &lt;a href=&quot;http://thapsang.net&quot;&gt;THAPSANG.NET&lt;/a&gt; on November 11, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Promises/Deferred trong AngularJS]]></title>
  <link>http://thapsang.net/angularjs/promises-deferred-trong-angularjs</link>
  <id>http://thapsang.net/angularjs/promises-deferred-trong-angularjs</id>
  <published>2014-10-30T00:00:00+07:00</published>
  <updated>2014-10-30T00:00:00+07:00</updated>
  <author>
    <name>Ta Ly</name>
    <uri>http://thapsang.net</uri>
    <email>taly2808@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Promises là một tính năng chính (a core feature) của AngularJS. Có thể bạn chưa biết hoặc chưa hiểu về promise, nhưng nếu bạn làm việc với AngularJS thì gần như chắc chắn rằng bạn sẽ làm việc với promise. Trong bài viết này, chúng ta sẽ tìm hiểu vậy Promise là gì, chúng được sử dụng ở đâu? Cách thức nó làm việc như thế nào?&lt;/p&gt;

&lt;section&gt;
  &lt;header&gt;
    &lt;h2&gt;Nội dung&lt;/h2&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#promise-l-g&quot;&gt;Promise là gì?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#promise-lm-vic-nh-th-no&quot;&gt;Promise làm việc như thế nào?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#v-d-n-gin&quot;&gt;Ví dụ đơn giản&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#chaining-promise&quot;&gt;Chaining Promise&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#parallel-promises&quot;&gt;Parallel Promises&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;

&lt;h2 id=&quot;promise-l-g&quot;&gt;Promise là gì?&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Promise là một cơ chế cho phép bạn trì hoãn một hành động hoặc một chuỗi các hành động đã được nêu ra. Một promise đại diện cho kết quả sau cùng của một hành động. Chúng ta có thể sử dụng một promise để xác định phải làm gì khi hành động cho dù kết quả cuối cùng của promise là thành công hay thất bại. Và promise sử dụng để xử lý các sự kiện không đồng bộ.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;promise-lm-vic-nh-th-no&quot;&gt;Promise làm việc như thế nào?&lt;/h2&gt;

&lt;p&gt;Khái niệm dưới đây về Promise khá đơn giản, nó có 2 thành phần:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Deferred: đại diện cho &lt;strong&gt;một công việc&lt;/strong&gt; chưa được thực hiện, và&lt;/li&gt;
  &lt;li&gt;Promise: thể hiện cho &lt;strong&gt;kết quả&lt;/strong&gt; từ công việc đó (Deferred).&lt;/li&gt;
&lt;/ul&gt;

&lt;figure&gt;
	&lt;img src=&quot;https://docs.google.com/drawings/d/1112lp5doFi8EBtTZoJ3p7LESacWkReM7YsWQWWB0NrA/pub?w=830&amp;amp;h=631&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;small&gt;source: &lt;a href=&quot;http://blog.mediumequalsmessage.com/promise-deferred-objects-in-javascript-pt1-theory-and-semantics&quot;&gt;Promise &amp;amp; Deferred objects in JavaScript Pt.1: Theory and Semantics.&lt;/a&gt;&lt;/small&gt; &lt;/p&gt;

&lt;p&gt;Về cơ bản, chúng ta sử dụng &lt;strong&gt;Deferred&lt;/strong&gt; như là một đối tượng thông tin liên lạc để báo hiệu sự bắt đầu, tiến trình xử lý và hoàn thành công việc.&lt;/p&gt;

&lt;p&gt;Một &lt;strong&gt;Promise&lt;/strong&gt; lần lượt là một đối tượng đầu ra chứa kết quả từ &lt;strong&gt;Deferred&lt;/strong&gt;. Nó có một trạng thái (State) nhất định (đang chờ xử lý - pending, hoàn thành - fulfilled, bị từ chối - rejected) và bộ xử lý (Handlers) hoặc các hàm gọi lại (callback functions) sẽ được gọi một lần khi một promise được giải quyết, bị từ chối hoặc cập nhật tiến trình xử lý.&lt;/p&gt;

&lt;p&gt;Trong Angular, các promises được tạo ra bằng &lt;a href=&quot;https://docs.angularjs.org/api/ng/service/$q&quot;&gt;$q service&lt;/a&gt;. Lý do dịch vụ được đặt tên là $q là do việc thực hiện promises trong AngularJS dựa trên cơ chế promise của Kris Kowal có tên là thư viện &lt;strong&gt;Q&lt;/strong&gt;. Bạn có thể xem thêm thông tin về thư viện Q tại &lt;a href=&quot;https://github.com/kriskowal/q&quot;&gt;https://github.com/kriskowal/q&lt;/a&gt;. Promises cũng được trả lại từ vài dịch vụ khác nữa của AngularJS như &lt;a href=&quot;https://docs.angularjs.org/api/ng/service/$http&quot;&gt;$http&lt;/a&gt;, &lt;a href=&quot;https://docs.angularjs.org/api/ng/service/$timeout&quot;&gt;$timeout&lt;/a&gt;, &lt;a href=&quot;https://docs.angularjs.org/api/ngRoute/service/$route&quot;&gt;$route&lt;/a&gt;, &lt;a href=&quot;https://docs.angularjs.org/api/ngResource/service/$resource&quot;&gt;$resoure&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;$q thực thi tất cả các phương thức Deferred/Promise được mô tả ở trên, cộng thêm một số phương thức của của riêng nó: &lt;em&gt;$q.defer()&lt;/em&gt; - tạo mới một đối tượng Deferred , &lt;em&gt;$q.all()&lt;/em&gt; - cho phép bạn chờ nhiều promises để giải quyết, và phương thức &lt;em&gt;$q.when()&lt;/em&gt;, &lt;em&gt;$q.reject()&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;$q.defer()&lt;/strong&gt; trả lại một đối tượng Deferred, bao gồm các phương thức &lt;em&gt;resolve(), reject(), notify()&lt;/em&gt;. Deferred có một thuộc tính promise, thuộc tính này là một đối tượng promise có thể được truyền khắp ứng dụng.&lt;/p&gt;

&lt;p&gt;Đối tượng promise có 3 phương thức khác: &lt;em&gt;then(), catch(), finally()&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;then(successCallback, errorCallback, notifyCallback)&lt;/em&gt;: lấy 3 callbacks làm tham số, một cho khi promise thành công, một cho khi promise thất bại, một cho thông báo của promise.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;catch(errorCallback)&lt;/em&gt;: đây là cách viết tắt của phương thức &lt;code&gt;promise.then(null, errorCallback)&lt;/code&gt;, có thể được sử dụng để có một chức năng tập trung, được gọi khi bất kì promise trong chuỗi promise thất bại.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;finally(callback)&lt;/em&gt;: phương thức này luôn luôn được gọi, bất kể promise thành công hay thất bại. Nó rất hữu ích để giải phóng tài nguyên hoặc dọn dẹp một số thứ không cần thiết (giống như đóng kết nối tới database, shutting server down). Xem bản mô tả &lt;a href=&quot;https://github.com/kriskowal/q/wiki/API-Reference#promisefinallycallback&quot;&gt;chi tiết kỹ thuật đầy đủ&lt;/a&gt; để có thêm thông tin.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;v-d-n-gin&quot;&gt;Ví dụ đơn giản&lt;/h2&gt;

&lt;p&gt;Trong ví dụ này, chúng ta sẽ tạo ra một dịch vụ để lấy tên người dùng. Trong service, chúng ta thiết lập rằng lần đầu tiên chúng ta lấy tên từ server, các lần sau chúng ta sẽ trả lại từ bộ nhớ cache. Điều này có nghĩa là chúng ta phải xử lý với trường hợp không đồng bộ (lấy dữ liệu từ server) và trường hợp đồng bộ thông thường (lấy dữ liệu từ cache).&lt;/p&gt;

&lt;p&gt;Đầu tiên, chúng ta tạo ra một service, nó có một trường &lt;em&gt;name&lt;/em&gt;, giá trị ban đầu là null.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;NameService&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;//  Create a class that represents our name service.&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NameService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//  Initially the name is unknown....&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Bây giờ, trong hàm &lt;code&gt;getName()&lt;/code&gt;, chúng ta tạo một đối tượng &lt;code&gt;deferred&lt;/code&gt; sử dụng $q service. Đối tượng này chứa promise mà chúng ta sẽ trả về.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Create a deferred operation.&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deferred&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;defer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nếu chúng ta đã có &lt;code&gt;name&lt;/code&gt;, chúng ta có thể &lt;code&gt;resolve&lt;/code&gt; đối tượng deferred ngay lập tức:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;deferred&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; (from Cache!)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tiếp đó, chúng ta sẽ xử lý trường hợp khi chưa có &lt;code&gt;name&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//  Get the name from the server.&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/api/my/name/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
       &lt;span class=&quot;nx&quot;&gt;deferred&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; (from Server!)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;nx&quot;&gt;deferred&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ở đây, chúng ta sử dụng &lt;code&gt;$http&lt;/code&gt; service, và &lt;code&gt;success&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt; là 2 function đặc biệt được thêm vào promise do &lt;code&gt;$http&lt;/code&gt; cung cấp - thông thường chúng ta sử dụng hàm &lt;code&gt;then&lt;/code&gt; với promise.&lt;/p&gt;

&lt;p&gt;Do đó, nếu chúng ta nhận được dữ liệu từ server, chúng ta có thể &lt;code&gt;resolve&lt;/code&gt; promise với giá trị trả về. Ngược lại, nếu request bị lỗi, chúng ta sẽ &lt;code&gt;reject&lt;/code&gt; promise.&lt;/p&gt;

&lt;p&gt;Cuối cùng, chúng ta trả lại promise mà chúng ta đã khởi tạo với &lt;code&gt;deferred&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deferred&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Demo với JSFiddle:&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;300&quot; src=&quot;http://jsfiddle.net/taly2808/f5826s0k/2/embedded/js,html,result&quot; allowfullscreen=&quot;allowfullscreen&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Chúng ta sẽ sử dụng dịch vụ này trong controller như sau:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;MainController&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NameService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;//  We have a name on the code, but it&amp;#39;s initially empty...&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;//  We have a function on the scope that can update the name.&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;updateName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;NameService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;cm&quot;&gt;/* success function */&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;cm&quot;&gt;/* error function */&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Failed to get the name, result is &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
      &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Trong đoạn mã trên, chúng ta thấy có chút khác biệt, đó là sự xuất hiện của phương thức &lt;code&gt;then&lt;/code&gt; với tham số thứ nhất là successCallback và tham số thứ hai là errorCallback. Chúng ta cần nhớ rằng: &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;AngularJS thêm các hàm &lt;code&gt;success&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt; vào promise khi sử dụng &lt;code&gt;$http&lt;/code&gt; service và &lt;code&gt;$resource&lt;/code&gt; service. Chúng không phải là chuẩn và chúng ta sẽ không tìm thấy chúng trong các promise khác.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;chaining-promise&quot;&gt;Chaining Promise&lt;/h2&gt;

&lt;p&gt;Phương thức &lt;code&gt;then&lt;/code&gt; trả lại một promise. Điều tuyệt vời của Promise API đó là chúng ta có thể đính kèm nhiều bộ xử lý (then()) cho một promise. Nói cách khác, chúng ta có thể xâu chuỗi các promise thành một khối logic ngắn gọn được thực thi tại các thời điểm thích hợp mà không cần sử dụng lồng nhau.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;promise&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;doSomething&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;doSomethingElse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;doSomethingMore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;logError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ví dụ, chúng ta cần lấy ra tên của user từ phía backend, nhưng chúng ta phải sử dụng các request độc lập để lấy ra thông tin của user và sau đó lấy ra quyền hạn truy cập trên ứng dụng của user:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;details&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
   &lt;span class=&quot;nx&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;$http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/api/user/name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;c1&quot;&gt;// Store the username, get the profile.&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;details&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/api/profile/&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;details&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;//  Store the profile, now get the permissions.&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;details&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;profile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/api/security/&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;details&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;//  Store the permissions&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;details&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;permissions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;The full user details are: &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;details&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;An error occured: &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Như vậy, chúng ta có một chuỗi các lời gọi không đồng bộ được phối hợp với nhau mà không cần sử dụng các callbacks lồng nhau.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;Chuỗi các promises (promise chains) sẽ gọi hàm &lt;code&gt;then&lt;/code&gt; tiếp theo trong chuỗi với giá trị được trả lại của hàm &lt;code&gt;then&lt;/code&gt; trước đó (hoặc &lt;em&gt;undefined&lt;/em&gt; nếu không có giá trị trả về).&lt;/li&gt;
    &lt;li&gt;Nếu một hàm &lt;code&gt;then&lt;/code&gt; trả lại một promise thì hàm &lt;code&gt;then&lt;/code&gt; tiếp theo sẽ chỉ thực thi khi promise đó được giải quyết (resolve).&lt;/li&gt;
    &lt;li&gt;Hàm &lt;code&gt;catch&lt;/code&gt; được đặt ở cuối chuỗi sẽ cung cấp một điểm xử lý lỗi duy nhất cho toàn bộ chuỗi.&lt;/li&gt;
    &lt;li&gt;Hàm &lt;code&gt;finally&lt;/code&gt; ở cuối chuỗi sẽ luôn được thực hiện cho dù promise được giải quyết (resolve) hoặc bị từ chối (reject), để phục vụ mục đích dọn dẹp các promises.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;parallel-promises&quot;&gt;Parallel Promises&lt;/h2&gt;

&lt;p&gt;Một phương thức chúng ta đề cập tiếp theo đây đó là &lt;code&gt;$q.all()&lt;/code&gt;, nó được sử dụng để tạo ra một promise từ một tập các promises. Và promise duy nhất này được giải quyết (resolve) khi tất cả các promises bên trong nó được giải quyết. Trong Angular, phương thức này có thể được gọi bằng 2 cách: với một mảng (Array) hoặc một đối tượng (Object).&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Array: &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;promiseOne&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;promiseTwo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;promiseThree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Object:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;promiseOne&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;promiseTwo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;third&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;promiseThree&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;third&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Bạn có thể tham khảo demo dưới đây. Trong demo này, mặc dù các promise được resolve theo thứ tự three, one, two nhưng khi chúng ta sử dụng &lt;code&gt;$q.all()&lt;/code&gt; thì kết quả trả lại sẽ theo thứ tự của các promise trong hàm &lt;em&gt;all()&lt;/em&gt; (click vào tab &lt;em&gt;Result&lt;/em&gt; để xem kết quả):&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;300&quot; src=&quot;http://jsfiddle.net/taly2808/1jnyh630/embedded/js,html,result&quot; allowfullscreen=&quot;allowfullscreen&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Thêm một phương thức nữa đó là &lt;code&gt;$q.when()&lt;/code&gt; - hàm này hữu ích khi chúng ta đang sử dụng một function mà kết quả trả về có thể là một promise nhưng cũng có thể trả về một giá trị (lúc này chúng ta không cần phải trì hoãn - defer). Chúng ta có thể xem ví dụ dưới đây (bạn click vào tab &lt;em&gt;Result&lt;/em&gt; để xem kết quả khi chạy: ban đầu sẽ hiển thị &lt;em&gt;Ready.&lt;/em&gt; , 1 giây sau hiển thị &lt;em&gt;noPromise&lt;/em&gt;, 3 giây sau hiển thị &lt;em&gt;promise&lt;/em&gt;  )&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;300&quot; src=&quot;http://jsfiddle.net/taly2808/4q2g3vy7/embedded/js,html,result&quot; allowfullscreen=&quot;allowfullscreen&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.toptal.com/javascript/javascript-promises&quot;&gt;JavaScript Promises&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.xebia.com/2014/02/23/promises-and-design-patterns-in-angularjs/&quot;&gt;Promises And Design Patterns In AngularJS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://documentup.com/kriskowal/q&quot;&gt;Document about Q&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.mediumequalsmessage.com/promise-deferred-objects-in-javascript-pt1-theory-and-semantics&quot;&gt;Promise &amp;amp; Deferred objects in JavaScript Pt.1: Theory and Semantics.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.dwmkerr.com/promises-in-angularjs-the-definitive-guide/&quot;&gt;AngularJS Promises - The Definitive Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

  &lt;p&gt;&lt;a href=&quot;http://thapsang.net/angularjs/promises-deferred-trong-angularjs&quot;&gt;Promises/Deferred trong AngularJS&lt;/a&gt; was originally published by Ta Ly at &lt;a href=&quot;http://thapsang.net&quot;&gt;THAPSANG.NET&lt;/a&gt; on October 30, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Hiểu về 'Resolve' trong AngularJS routes]]></title>
  <link>http://thapsang.net/angularjs/resolve-trong-angularjs-routes</link>
  <id>http://thapsang.net/angularjs/resolve-trong-angularjs-routes</id>
  <published>2014-10-28T00:00:00+07:00</published>
  <updated>2014-10-28T00:00:00+07:00</updated>
  <author>
    <name>Ta Ly</name>
    <uri>http://thapsang.net</uri>
    <email>taly2808@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Trong bài &lt;a href=&quot;/angularjs/tim-hieu-module-ngRoute-trong-angularjs&quot;&gt;Tìm hiểu module ngRoute trong AngularJS&lt;/a&gt;, chúng ta đã tìm hiểu cách làm thế nào để định tuyến (routing) và cách các routes nói chuyện với controller như thế nào. Việc khởi tạo các controller có thể khác nhau dựa trên các thiết lập của route và các sự kiện &lt;code&gt;$routeChangeSuccess&lt;/code&gt; và &lt;code&gt;$routeChangeError&lt;/code&gt; tương ứng. Hầu hết các sự kiện này có do thuộc tính &lt;code&gt;resolve&lt;/code&gt; khi cấu hình route. Trong bài này, chúng ta sẽ làm sáng rõ vấn đề Tại sao lại cần &lt;code&gt;resolve&lt;/code&gt; và cách thức hoạt động của nó như thế nào.&lt;/p&gt;

&lt;p&gt;Tôi tìm được một bài viết của &lt;a href=&quot;http://www.twitter.com/shidhincr&quot;&gt;Shidhin&lt;/a&gt; giải thích khá rõ ràng và dễ hiểu về thuộc tính &lt;a href=&quot;http://www.undefinednull.com/2014/02/17/resolve-in-angularjs-routes-explained-as-story/&quot;&gt;‘Resolve’ trong AngularJS routes&lt;/a&gt; thông qua ba phiên bản của một câu chuyện. Do đó, tôi sẽ dịch lại bài viết đó và giữ nguyên câu chuyện của tác giả để lưu lại kiến thức cho bản thân và chia sẻ bài viết bổ ích này tới các bạn quan tâm.&lt;/p&gt;

&lt;section&gt;
  &lt;header&gt;
    &lt;h2&gt;Nội dung&lt;/h2&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#cu-chuyn&quot;&gt;Câu chuyện&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#phin-bn-2-ca-cu-chuyn&quot;&gt;Phiên bản 2 của câu chuyện&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#phin-bn-3-ca-cu-chuyn&quot;&gt;Phiên bản 3 của câu chuyện&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;

&lt;h2 id=&quot;cu-chuyn&quot;&gt;Câu chuyện&lt;/h2&gt;

&lt;p&gt;Vào một ngày đẹp trời, tôi đã lên kế hoạch du lịch Thụy Sĩ. Vì vậy tôi gọi điện cho điều hành tour. Anh ta giải thích cho tôi về hành trình và thông tin khách sạn rất chi tiết và rõ ràng, vì vậy tôi đã đề nghị anh ta chuẩn bị các thứ cần thiết. Sau đó, điều hành tour có trách nhiệm đặt phòng và thực hiện các yêu cầu cần thiết cho chuyến du lịch của tôi. Sau cùng, tôi đã có một chuyến du lịch đến Thụy Sĩ.&lt;/p&gt;

&lt;p&gt;Bây giờ, chúng ta chuyển câu chuyện này sang ngữ cảnh của AngularJS. Chúng ta có:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;visitplace&lt;/code&gt; là route đầu tiên của chúng ta.&lt;/li&gt;
  &lt;li&gt;Địa điểm, các khu vực lân cận, phòng khách sạn là các nội dung trong template. Chúng ta sẽ thêm chúng vào trong file &lt;code&gt;placetovisit.html&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Điều hành tour là người kết nối tới địa điểm, do đó chúng ta có một controller tên là &lt;code&gt;TourCoordinatorCtrl&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nội dung của file &lt;code&gt;app.js&lt;/code&gt; như sau:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;app&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ngRoute&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$routeProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$routeProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/visitplace&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;templateUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;placetovisit.html&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;TourCoordinatorCtrl&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;accommodation&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;hotelName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Some Hotel&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;roomNo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;203&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;TourCoordinatorCtrl&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;accommodation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Shidhin&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;place&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Switzerland&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hotel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;accommodation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hotelName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;roomno&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;accommodation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;roomNo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Template &lt;code&gt;placetovisit.html&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Trip details&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Hi, {{name}}. Welcome to {{place}}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;The accomodation is arranged on &lt;span class=&quot;nt&quot;&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;{{hotel}}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt; and room number is &lt;span class=&quot;nt&quot;&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;{{roomno}}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/strong&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;    
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Và file &lt;code&gt;index.html&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;en&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-app=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;app&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;AngularJS Resolve routes example&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;https://code.angularjs.org/1.2.25/angular.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;https://code.angularjs.org/1.2.25/angular-route.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;app.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#/visitplace&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;I want to go for a trip&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-view&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;iframe src=&quot;http://embed.plnkr.co/Wc1bDmZluHBxztDWMEPM/preview&quot; style=&quot;border:0px #FFFFFF none;&quot; name=&quot;&#39;Resolve&#39; in AngularJs routes v1&quot; scrolling=&quot;no&quot; frameborder=&quot;1&quot; marginheight=&quot;0px&quot; marginwidth=&quot;0px&quot; height=&quot;250px&quot; width=&quot;100%&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Mọi thứ diễn ra như mong đợi khi chúng ta đìều hướng đến route &lt;code&gt;/visitplace&lt;/code&gt;. Ở đây, chúng ta thấy rằng &lt;code&gt;TourCoordinatorCtrl&lt;/code&gt; phụ thuộc vào &lt;code&gt;accommodation&lt;/code&gt; service. Controller chỉ chịu trách nhiệm tìm chi tiết khách sạn và phòng. Ngoài ra, việc lấy chi tiết về khách sạn và phòng là các sự kiện hoàn toàn đồng bộ. Điều đó có nghĩa là căn phòng sẽ được bố trí trước khi tôi tới nơi.&lt;/p&gt;

&lt;p&gt;Nhưng điều gì sẽ xảy ra nếu các sự kiện là không đồng bộ? Hãy nghĩ theo hướng này: Điều gì xảy ra nếu điều hành tour không chuyên nghiệp và anh ta đã quên đặt phòng và khách sạn? Do đó, khi tôi tới nơi tôi sẽ phải chờ cho tới khi tôi lấy được một phòng mới. Tương tự như vậy, trong code, chúng ta có thể thấy rằng view sẽ được trả lại (render) nhưng phương thức &lt;code&gt;getHotel()&lt;/code&gt; và &lt;code&gt;getRoom()&lt;/code&gt; sẽ lấy thêm thời gian để có được thông tin chi tiết phòng.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;app&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ngRoute&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$routeProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$routeProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/visitplace&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;templateUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;placetovisit.html&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;TourCoordinatorCtrl&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;accommodation&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$timeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;hotelName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;$timeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hotel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Some hotel&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;roomNo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;$timeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;roomno&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;103&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;TourCoordinatorCtrl&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;accommodation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Shidhin&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;place&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Switzerland&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hotel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;accommodation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hotelName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;roomno&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;accommodation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;roomNo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Đây không phải là một ý tưởng tốt. Chúng ta phải trả lại view và đợi dữ liệu được nạp lên đó. Trong trường hợp của tôi, nó giống như việc tôi đã bắt đầu chuyến đi và đã đến nơi, nhưng tôi đang phải chờ đợi ở đó để có được nơi ăn nghỉ của mình. Điều này thực sự gây khó chịu và phiền nhiễu. Liệu có cách nào có thể đảm bảo rằng các phụ thuộc kia được giải quyết trước khi tôi bắt đầu chuyến đi của mình? Hãy xem:&lt;/p&gt;

&lt;h2 id=&quot;phin-bn-2-ca-cu-chuyn&quot;&gt;Phiên bản 2 của câu chuyện&lt;/h2&gt;

&lt;p&gt;Tôi có một người bạn, cậu ta là chủ một khách sạn tại Thụy Sĩ. Cậu ta là bạn rất thân của tôi, vì vậy tôi có thể đề nghị cậu ta để cho tôi một phòng bất cứ lúc nào. Nếu tôi làm như vậy thì tôi không còn phải phụ thuộc vào nơi ở do điều hành tour cung cấp nữa. Cuối cùng, tất cả những gì tôi phải làm là đảm bảo chắc chắn rằng bản thân tôi giải quyết được vấn đề chỗ ở và thông báo với điều hành tour thu xếp các vấn đề còn lại.&lt;/p&gt;

&lt;p&gt;Đây chính xác là những gì chúng ta cần nếu bản thân các routes cần giải quyết các phụ thuộc trong ứng dụng. Với vấn đề này, Angular cung cấp một thuộc tính &lt;code&gt;resolve&lt;/code&gt; trong cấu hình của dịch vụ &lt;code&gt;$routeProvider&lt;/code&gt;. Thuộc tính resolve là một đối tượng sơ đồ tùy chọn (an optional map object) hoặc một mảng tên các dịch vụ hiện có (array of existing service names). Tất cả các keys của map object có thể được bơm truyền vào controller như một phụ thuộc. Key là một chuỗi (string) đơn giản, và giá trị của nó có thể là một function hoặc một string. Nếu giá trị là string thì Angular sẽ xem đó là một dịch vụ hiện có (existing service) và bơm truyền vào controller. Nếu giá trị là một function thì nó sẽ hoạt động như một factory function và giá trị trả về sẽ được bơm truyền vào controller.&lt;/p&gt;

&lt;p&gt;Hãy liên hệ câu chuyện hiện tại với ngữ cảnh của Angular bằng cách sử dụng đối tượng &lt;code&gt;resolve&lt;/code&gt;. Hãy xem những thay đổi trong code của ứng dụng, file &lt;code&gt;app.js&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;app&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ngRoute&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$routeProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$routeProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/visitplace&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;templateUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;placetovisit.html&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;TourCoordinatorCtrl&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&amp;quot;myFriendsHotel&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;hotelName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;My Friend&amp;#39;s hotel&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;roomNo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;100&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;TourCoordinatorCtrl&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myFriendsHotel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Shidhin&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;place&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Switzerland&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hotel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myFriendsHotel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hotelName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;roomno&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myFriendsHotel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;roomNo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Lưu ý: Khi controller đã được định nghĩa trong route, không bao giờ khởi tạo lại nó thông qua ng-controller directive, điều đó có thể đưa ra lỗi khi sử dụng với thuộc tính resolve.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Bằng cách này, chúng ta có thể chắc chắn rằng việc khởi tạo controller sẽ bị trì hoãn cho đến khi khách sạn đã sẵn sàng. View sẽ chỉ được trả lại khi controller đã được khởi tạo và sự kiện &lt;code&gt;$routeChangeSuccess&lt;/code&gt; sẽ được kích hoạt. Cũng cần chú ý rằng, việc tìm khách sạn ở đây là một hành động đồng bộ; có nghĩa là khi bạn tôi là chủ khách sạn, tôi có phòng ngay lập tức. Trong các ứng dụng thực tế, hầu hết chúng ta phải đối phó với các hành động không đồng bộ. Nào, hãy chuyển đến phiên bản thứ 3 của câu chuyện.&lt;/p&gt;

&lt;h2 id=&quot;phin-bn-3-ca-cu-chuyn&quot;&gt;Phiên bản 3 của câu chuyện&lt;/h2&gt;

&lt;p&gt;Trong phiên bản trước, bạn của tôi là chủ khách sạn. Nhưng trong phiên bản này, sẽ không có chủ khách sạn nào cả. Lần này, tôi có một người bạn khác ở Thụy Sĩ, cô ấy biết một vài chủ khách sạn và có thể tìm phòng cho tôi với giá rẻ hơn. Khi tôi gọi điện cho cô ấy và nói yêu cầu của mình, cô ấy sẽ mất một thời gian để nói chuyện với bạn của cô ấy và thu xếp cho tôi một phòng. Và thời gian đó không thể đoán trước được bởi vì bạn tôi sẽ yêu cầu bạn bè của cô ấy, bạn cô ấy có thể nói chuyện với bạn của họ và cứ như thế. Nhưng khi tôi gọi cho cô ấy lần đầu tiên, cô ấy hứa với tôi rằng cô ấy chắc chắn sẽ cập nhật kết quả, do đó tôi có thể thu xếp phần còn lại. Vì vậy, chỉ khi tôi nhận được thông tin cập nhật từ cô ấy, tôi mới gọi cho điều hành tour và đề nghị anh ta thu xếp các phần còn lại.&lt;/p&gt;

&lt;p&gt;Hãy xem những thay đổi trong file &lt;code&gt;app.js&lt;/code&gt; ở phiên bản cuối này:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;app&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ngRoute&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$routeProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$routeProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/visitplace&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;templateUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;placetovisit.html&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;TourCoordinatorCtrl&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&amp;quot;accommodation&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$timeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myFriend&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;defer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$timeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;myFriend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;hotelName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;My Friend&amp;#39;s friend&amp;#39;s hotel&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;roomNo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;404&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myFriend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;TourCoordinatorCtrl&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;accommodation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Shidhin&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;place&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Switzerland&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hotel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;accommodation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hotelName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;roomno&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;accommodation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;roomNo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Trong đoạn code trên, các bạn thấy rằng chúng ta đã định nghĩa một biến &lt;code&gt;myFriend&lt;/code&gt; bên trong hàm resolve và khởi tạo nó bằng cách sử dụng hàm &lt;code&gt;$q.defer()&lt;/code&gt; là bộ thực thi Promises API trong AngularJS, được lấy cảm hứng từ &lt;a href=&quot;https://github.com/kriskowal/q&quot;&gt;thư viện “Q”&lt;/a&gt; được kriskowal thực hiện. Nếu bạn không biết &lt;em&gt;Promises&lt;/em&gt; là gì, bạn nên tìm hiểu về nó &lt;a href=&quot;http://12devs.co.uk/articles/promises-an-alternative-way-to-approach-asynchronous-javascript/&quot;&gt;tại đây&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Những gì xảy ra ở đây là: function resolve đã tạo ra biến &lt;code&gt;myFriend&lt;/code&gt; và ngay lập tức nó trả lại &lt;code&gt;myFriend.promise&lt;/code&gt;. Điều này có nghĩa, chúng ta biết rằng điều gì sẽ xảy ra sau đó và &lt;code&gt;myFriend&lt;/code&gt; sẽ cập nhật kết quả của hành động để trả lại lời hứa. Hành động có thể thành công hoặc thất bại. Nếu hành động thành công, lời hứa sẽ được giải quyết (resolved) với các thông tin về phòng khách sạn; nếu hành động thất bại, lời hứa sẽ bị từ chối (reject) với dữ liệu trả lại (thường là các thông báo lỗi).&lt;/p&gt;

&lt;p&gt;Khi factory function trả lại một lời hứa (promise), việc khởi tạo controller sẽ bị trì hoãn cho đến khi lời hứa được giải quyết hoặc từ chối (resolved/rejected). Khi promise được giải quyết, controller sẽ được khởi tạo và dữ liệu được trả lại sẽ được bơm vào trong controller. Trong trường hợp của chúng ta thì đó là đối tượng &lt;code&gt;accommodation&lt;/code&gt;; sau đó sự kiện &lt;code&gt;$routeChangeSuccess&lt;/code&gt; sẽ được kích hoạt. Cũng có khả năng là promise đầu tiên trả lại một promise khác. Trong trường hợp đó, việc khởi tạo controller của chúng ta sẽ bị trì hoãn cho đến khi tất cả các promises được giải quyết. Tại bất kỳ thời điểm nào, nếu một promise bị từ chối, controller sẽ không được khởi tạo, thay vào đó là sự kiện &lt;code&gt;$routeChangeError&lt;/code&gt; sẽ được kích hoạt.&lt;/p&gt;

&lt;p&gt;Trong kết quả demo dưới đây, chúng ta sẽ thấy view được trả lại sau 5 giây kể từ khi click vào link “I want to go for a trip”:&lt;/p&gt;

&lt;iframe src=&quot;http://embed.plnkr.co/uSxECGavg6YchGkPV9tf/preview&quot; style=&quot;border:0px #FFFFFF none;&quot; name=&quot;&#39;Resolve&#39; in AngularJs routes v3&quot; scrolling=&quot;no&quot; frameborder=&quot;1&quot; marginheight=&quot;0px&quot; marginwidth=&quot;0px&quot; height=&quot;250px&quot; width=&quot;100%&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Thuộc tính &lt;code&gt;resolve&lt;/code&gt; khá hữu ích khi chúng ta cần có một vài dữ liệu sẵn sàng trước khi khởi tạo controller và render view. Trong các ứng dụng thực tế, &lt;code&gt;$timeout&lt;/code&gt; thường được thay thế bằng &lt;code&gt;$http&lt;/code&gt; để tải dữ liệu từ server. Vì nó là sự kiện không đồng bộ, nên chúng ta có thể đảm bảo rằng view sẽ được trả lại với dữ liệu phù hợp.&lt;/p&gt;

&lt;h2 id=&quot;ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.undefinednull.com/2014/02/17/resolve-in-angularjs-routes-explained-as-story/&quot;&gt;‘Resolve’ in AngularJS Routes, Explained as Story&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://documentup.com/kriskowal/q&quot;&gt;Document about Q&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

  &lt;p&gt;&lt;a href=&quot;http://thapsang.net/angularjs/resolve-trong-angularjs-routes&quot;&gt;Hiểu về 'Resolve' trong AngularJS routes&lt;/a&gt; was originally published by Ta Ly at &lt;a href=&quot;http://thapsang.net&quot;&gt;THAPSANG.NET&lt;/a&gt; on October 28, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Tìm hiểu module ngRoute trong AngularJS]]></title>
  <link>http://thapsang.net/angularjs/tim-hieu-module-ngRoute-trong-angularjs</link>
  <id>http://thapsang.net/angularjs/tim-hieu-module-ngRoute-trong-angularjs</id>
  <published>2014-10-23T00:00:00+07:00</published>
  <updated>2014-10-23T00:00:00+07:00</updated>
  <author>
    <name>Ta Ly</name>
    <uri>http://thapsang.net</uri>
    <email>taly2808@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;a href=&quot;https://docs.angularjs.org/api/ngRoute&quot;&gt;ngRoute&lt;/a&gt; là một module trong AngularJS cung cấp dịch vụ định tuyến (routing), &lt;a href=&quot;http://en.wikipedia.org/wiki/Deep_linking&quot;&gt;deep linking&lt;/a&gt; và các chỉ thị lệnh (directives) &lt;code&gt;ngView&lt;/code&gt; cho các ứng dụng angular. Trong &lt;a href=&quot;/angularjs/routing-single-page-application-voi-module-ngRoute-cua-angularjs&quot;&gt;bài trước&lt;/a&gt;, chúng ta đã có một ví dụ đơn giản về routing trong SPA với AngularJS. Trong nội dung bài này, chúng ta sẽ đi vào tìm hiểu chi tiết về các thành phần &lt;strong&gt;provider&lt;/strong&gt;, &lt;strong&gt;services&lt;/strong&gt; và &lt;strong&gt;ngView directive&lt;/strong&gt; trong module ngRoute.&lt;/p&gt;

&lt;section&gt;
  &lt;header&gt;
    &lt;h2&gt;Nội dung&lt;/h2&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#cch-thc-s-dng&quot;&gt;Cách thức sử dụng&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ngview-directive&quot;&gt;ngView directive&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#routeprovider-provider&quot;&gt;$routeProvider provider&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#whenpath-route-method&quot;&gt;when(path, route) method&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#otherwiseparams-method&quot;&gt;otherwise(params) method&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#services-in-ngroute&quot;&gt;Services in ngRoute&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#route-service&quot;&gt;$route service&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#methods&quot;&gt;Methods&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#events&quot;&gt;Events&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#properties&quot;&gt;Properties&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#routeparams-service&quot;&gt;$routeParams service&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;

&lt;h2 id=&quot;cch-thc-s-dng&quot;&gt;Cách thức sử dụng&lt;/h2&gt;

&lt;p&gt;Từ phiên bản 1.2, module &lt;code&gt;ngRoute&lt;/code&gt; được tách ra khỏi Angular core và trở thành một module riêng. Do đó, để sử dụng module này, chúng ta cần include nó trong file html.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;angular.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;angular-route.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sau đó, chúng ta cần khai báo &lt;code&gt;ngRoute&lt;/code&gt; là module phụ thuộc của ứng dụng của chúng ta:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;myApp&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ngRoute&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;ngview-directive&quot;&gt;ngView directive&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.angularjs.org/api/ngRoute/directive/ngView&quot;&gt;ngView&lt;/a&gt; là một chỉ thị lệnh (directive) bổ sung cho $route service bằng cách bao gồm các template đã được biểu diễn (rendered) của route hiện tại (current route) vào trong file layout chính (thường là index.html). Mỗi lần thay đổi current route, view đi kèm với nó cũng thay đổi theo phù hợp với cấu hình của $route service.&lt;/p&gt;

&lt;p&gt;Trong ứng dụng angular, chúng ta cần định nghĩa &lt;code&gt;ngView&lt;/code&gt; directive &lt;strong&gt;một lần&lt;/strong&gt;. Đây là phần giữ chỗ cho các views. Có ba cách để định nghĩa ngView trong file html chính như sau:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-view&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt; 		// as attribute
...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;ng-view&amp;gt;&amp;lt;/ng-view&amp;gt;&lt;/span&gt; 		// as element
...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ng-view&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt; 	// as CSS class&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Lưu ý&lt;/strong&gt;: Trong toàn bộ một ứng dụng SPA, &lt;code&gt;ngView&lt;/code&gt; directive &lt;strong&gt;chỉ được sử dụng duy nhất một lần&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;routeprovider-provider&quot;&gt;$routeProvider provider&lt;/h2&gt;

&lt;p&gt;Trong ứng dụng angularjs, các provider được bơm vào (inject) trong hàm &lt;strong&gt;config()&lt;/strong&gt;. Khi $routeProvider được khai báo, chúng ta có thể sử dụng các service mà nó cung cấp là &lt;code&gt;$route&lt;/code&gt; service và &lt;code&gt;$routeParams&lt;/code&gt; service để định tuyến.&lt;/p&gt;

&lt;p&gt;$routeProvider sử dụng phương thức &lt;code&gt;$routeProvider.when()&lt;/code&gt; để khớp một mẫu hình (pattern) URL với một view và phương thức &lt;code&gt;$routeProvider.otherwise()&lt;/code&gt; để trả lại một view khi current url không khớp với bất kỳ mẫu hình URL nào được đưa ra.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;myApp&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ngRoute&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$routeProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$routeProvider&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;templateUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;pages/home.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;MainController&amp;#39;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/about&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;This is about page!!!&amp;#39;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;otherwise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;redirectTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;whenpath-route-method&quot;&gt;when(path, route) method&lt;/h3&gt;

&lt;p&gt;Hàm when() bao gồm hai tham số: một route path và một đối tượng Javascript.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;path&lt;/strong&gt; có kiểu string, nó khớp với phần địa chỉ trên url phía sau ký hiệu &lt;code&gt;#&lt;/code&gt; khi ứng dụng được tải lên. Chúng ta có thể truyền tham số vào path, và các tham số được lưu trữ trong $routeParams object.&lt;/p&gt;
&lt;figure&gt;
	&lt;img src=&quot;https://docs.google.com/drawings/d/1aS78XypeTPb0CFq2Md9hRT2VkayaS49czuy6T7ypZUg/pub?w=469&amp;amp;h=227&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;route&lt;/strong&gt; là một đối tượng Javascript, nó bao gồm các thuộc tính sau:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;templateUrl&lt;/strong&gt;: là một đường dẫn (path) hoặc một function trả về một đường dẫn đến một template html. Và đường dẫn này là đường dẫn tương đối so với file layout chính (index.html). Ví dụ:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;myApp&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ngRoute&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$routeProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$routeProvider&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;templateUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;pages/home.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;MainController&amp;#39;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/books/:bookId&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;templateUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;pages/books/&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bookId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;template&lt;/strong&gt;: là một template html hoặc là một function trả về một template html. Nếu thuộc tính này được khai báo cùng với thuộc tính &lt;strong&gt;templateUrl&lt;/strong&gt; thì nó sẽ được ưu tiên hơn.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;templateUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;pages/home.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;lt;h2&amp;gt;Hello, I am html template.&amp;lt;/h2&amp;gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;controller&lt;/strong&gt;: khai báo bộ điều khiển (controller) sẽ điều khiển view tương ứng với template được khai báo trong thuộc tính &lt;code&gt;template&lt;/code&gt; hoặc &lt;code&gt;templateUrl&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;controllerAs&lt;/strong&gt;: bí danh (alias name) của controller. Khi sử dụng thuộc tính này, chúng ta xem controller như là một class.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;myApp&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ngRoute&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$routeProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$routeProvider&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/about&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;templateUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;about.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;AboutCtrl&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;controllerAs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;about&amp;#39;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;AboutCtrl&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// don&amp;#39;t use $scope&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;flash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Content will be display here. :)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// use this instead of $scope&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Trong file template &lt;code&gt;about.html&lt;/code&gt;, chúng ta truy cập vào dữ liệu trong controller như sau:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;About page&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;{{ about.flash }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;redirectTo&lt;/strong&gt;: chuyển đến một địa chỉ cụ thể. Giá trị của thuộc tính này có thể là một chuỗi (string) hoặc một function. Khi nó là function, chúng ta có thể truyền các tham số cho nó gồm &lt;code&gt;routeParams&lt;/code&gt; - đối tượng được lấy từ phương thức &lt;em&gt;$location.path()&lt;/em&gt;, &lt;code&gt;path&lt;/code&gt; - chuỗi được lấy từ phương thức &lt;em&gt;$location.path()&lt;/em&gt;, &lt;code&gt;search&lt;/code&gt; - đối tượng được lấy từ phương thức &lt;em&gt;$location.search()&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$routeProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$routeProvider&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/author/:authorName/books/:bookId&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;redirectTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;routeParams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// &amp;lt;------- is function&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;routeParams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/author/&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;routeParams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;authorName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/author/victorhugo&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;This is Victor Hugo&amp;#39;s page.&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;otherwise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;redirectTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// &amp;lt;-------------is string&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;resolve&lt;/strong&gt;: một resolve chứa một hoặc nhiều lời hứa (promises), các promises phải được giải quyết thành công (resolve) trước khi route thay đổi. Điều này có nghĩa là chúng ta có thể đợi dữ liệu sẵn sàng trước khi hiển thị trên view và làm đơn giản hóa việc khởi tạo model bên trong một controller vì dữ liệu ban đầu được trao cho controller thay vì controller phải đi ra ngoài và tự tìm kiếm dữ liệu. Chúng ta sẽ tìm hiểu chi tiết về thuộc tính này trong bài &lt;a href=&quot;/angularjs/resolve-trong-angularjs-routes&quot;&gt;Hiểu về ‘Resolve’ trong AngularJS routes&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;reloadOnSearch&lt;/strong&gt;: thuộc tính này được thiết lập mặc định giá trị &lt;em&gt;true&lt;/em&gt;. Thuộc tính này cho phép tải lại route khi $location.search() hoặc $location.hash() thay đổi.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;caseInsensitiveMatch&lt;/strong&gt;: giá trị mặc định của thuộc tính này là &lt;em&gt;false&lt;/em&gt;, nó cho phép ứng dụng thỏa mãn các route mà không cần phân biệt chữ hoa, chữ thường.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;otherwiseparams-method&quot;&gt;otherwise(params) method&lt;/h3&gt;

&lt;p&gt;Phương thức này được dùng để điều hướng route đến một địa chỉ cụ thể khi url đưa ra không phù hợp với bất kỳ khai báo nào.&lt;/p&gt;

&lt;h2 id=&quot;services-in-ngroute&quot;&gt;Services in ngRoute&lt;/h2&gt;

&lt;h3 id=&quot;route-service&quot;&gt;$route service&lt;/h3&gt;

&lt;h4 id=&quot;methods&quot;&gt;Methods&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;reload()&lt;/strong&gt;: phương thức này cho phép ứng dụng tải lại current route ngay cả khi $location không thay đổi.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;updateParams(newParams)&lt;/strong&gt;: cho phép thay thế các tham số của URL hiện tại bằng các tham số trong &lt;em&gt;newParams&lt;/em&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;events&quot;&gt;Events&lt;/h4&gt;

&lt;p&gt;Trước khi một route thay đổi, $route sẽ phát sinh một sự kiện &lt;strong&gt;$routeChangeStart&lt;/strong&gt;. Lúc này, $route service bắt đầu giải quyết tất cả các phụ thuộc cần thiết để tiến hành thay đổi route. Khi các phụ thuộc được giải quyết (resolve), $route service sẽ phát sinh sự kiện &lt;strong&gt;$routeChangeSuccess&lt;/strong&gt; và khi đó controller được khởi tạo và render view tương ứng. Nếu các phụ thuộc không được giải quyết (reject) thì $route service sẽ phát sinh sự kiện &lt;strong&gt;$routeChangeError&lt;/strong&gt; và khi đó controller không được khởi tạo và cũng không có view nào được render. Các sự kiện trong $route khi được kích hoạt luôn tác động lên root scope.&lt;/p&gt;

&lt;p&gt;$route service còn cung cấp sự kiện &lt;strong&gt;$routeUpdate&lt;/strong&gt; khi thuộc tính &lt;strong&gt;reloadOnSearch&lt;/strong&gt; được thiết lập giá trị &lt;em&gt;false&lt;/em&gt;.&lt;/p&gt;

&lt;h4 id=&quot;properties&quot;&gt;Properties&lt;/h4&gt;

&lt;p&gt;$route cung cấp thuộc tính &lt;strong&gt;current&lt;/strong&gt; để tham chiếu đến current route. Bạn có thể tham khảo &lt;a href=&quot;https://docs.angularjs.org/api/ngRoute/service/$route#example&quot;&gt;ví dụ về $route&lt;/a&gt; để hiểu rõ hơn.&lt;/p&gt;

&lt;h3 id=&quot;routeparams-service&quot;&gt;$routeParams service&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;$routeParams&lt;/strong&gt; service cho phép bạn lấy được giá trị đang được thiết lập của tham số truyền vào trên route. Các tham số của route là sự kết hợp của &lt;a href=&quot;https://docs.angularjs.org/api/ng/service/$location#path&quot;&gt;$location.path()&lt;/a&gt; và &lt;a href=&quot;https://docs.angularjs.org/api/ng/service/$location#search&quot;&gt;$location.search()&lt;/a&gt;.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;https://docs.google.com/drawings/d/1KQe7BdYTSW14zQllb-7yCtYgRry9GqZQJkAJGUfSK50/pub?w=861&amp;amp;h=225&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;Nếu tên của các tham số trong &lt;code&gt;path&lt;/code&gt; và &lt;code&gt;search&lt;/code&gt; xung đột nhau, thì các tham số của &lt;code&gt;path&lt;/code&gt; sẽ được ưu tiên.&lt;/p&gt;
&lt;figure&gt;
	&lt;img src=&quot;https://docs.google.com/drawings/d/1X8B1sAVfH6GrazPABuVpoGnlfkTboURz5gdwHBtFjOw/pub?w=885&amp;amp;h=319&quot; /&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.angularjs.org/api/ngRoute/&quot;&gt;AngularJS’s document on ngRoute&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

  &lt;p&gt;&lt;a href=&quot;http://thapsang.net/angularjs/tim-hieu-module-ngRoute-trong-angularjs&quot;&gt;Tìm hiểu module ngRoute trong AngularJS&lt;/a&gt; was originally published by Ta Ly at &lt;a href=&quot;http://thapsang.net&quot;&gt;THAPSANG.NET&lt;/a&gt; on October 23, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Routing Single Page Application với module ngRoute của AngularJS]]></title>
  <link>http://thapsang.net/angularjs/routing-single-page-application-voi-module-ngRoute-cua-angularjs</link>
  <id>http://thapsang.net/angularjs/routing-single-page-application-voi-module-ngRoute-cua-angularjs</id>
  <published>2014-10-21T00:00:00+07:00</published>
  <updated>2014-10-21T00:00:00+07:00</updated>
  <author>
    <name>Ta Ly</name>
    <uri>http://thapsang.net</uri>
    <email>taly2808@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Các ứng dụng Single Page ngày càng trở nên phổ biến. Khi ứng dụng của chúng ta lớn dần, việc đặt tất cả các views vào trong một file sẽ khiến chúng ta rất khó quản lý. Việc chia nhỏ chúng vào trong Views và sử dụng Routing để tải các phần khác nhau của ứng dụng giúp chúng ta phân chia ứng dụng hợp lý và quản lý dễ dàng hơn.
Routing trong AngularJS có thể được sử dụng với module &lt;a href=&quot;https://docs.angularjs.org/api/ngRoute&quot;&gt;ngRoute&lt;/a&gt; hoặc sử dụng &lt;a href=&quot;https://github.com/angular-ui/ui-router&quot;&gt;UI Route&lt;/a&gt;. Trong bài viết này, tôi sẽ sử dụng routing của module &lt;strong&gt;ngRoute&lt;/strong&gt;. Chúng ta sẽ tìm hiểu cách thức chia nhỏ một SPA thành nhiều views như thế nào.&lt;/p&gt;

&lt;section&gt;
  &lt;header&gt;
    &lt;h2&gt;Nội dung&lt;/h2&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#gii-thiu-v-routeprovider&quot;&gt;Giới thiệu về $routeProvider&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#ng-dng-n-gin&quot;&gt;Ứng dụng đơn giản&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cu-trc-th-mc&quot;&gt;Cấu trúc thư mục&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#html&quot;&gt;HTML&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cu-hnh-routes-v-views&quot;&gt;Cấu hình Routes và Views&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#thm-cc-file-templates-html&quot;&gt;Thêm các file templates HTML&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cch-thc-truyn-tham-s-vo-trong-route-urls&quot;&gt;Cách thức truyền tham số vào trong Route Urls&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;

&lt;h2 id=&quot;gii-thiu-v-routeprovider&quot;&gt;Giới thiệu về $routeProvider&lt;/h2&gt;

&lt;p&gt;Sự kỳ diệu của Routing được thực hiện bởi một service provider do Angular cung cấp có tên là &lt;code&gt;$routeProvider&lt;/code&gt;. Một &lt;code&gt;Angular&#39;s service&lt;/code&gt; là một đối tượng đơn nhất (singleton object) được tạo ra bởi một service factory. Các service factory này do một service provider tạo ra. Các service providers là các hàm cấu tử (constructror functions). Khi tạo đối tượng, chúng phải chứa một thuộc tính $get để nắm giữ các service factory function. Để hiểu rõ hơn về các khái niệm trên, bạn có thể tham khảo bài viết &lt;a href=&quot;http://acegik.net/blog/javascript/angularjs/tong-quan-ve-dependency-injection-trong-angularjs-p2.html&quot;&gt;Tổng quan về Dependency Injection trong AngularJS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Định tuyến ứng dụng trong AngularJS được khai báo thông qua &lt;code&gt;$routeProvider&lt;/code&gt;. $routeProvider là nhà cung cấp các dịch vụ &lt;code&gt;$route&lt;/code&gt;. Dịch vụ này cho phép kết nối các controllers, view templates và các địa chỉ URL hiện tại trên trình duyệt lại với nhau một cách dễ dàng. Với tính năng này, chúng ta có thể thực hiện các liên kết sâu trên trình duyệt  - &lt;a href=&quot;http://en.wikipedia.org/wiki/Deep_linking&quot;&gt;deep linking&lt;/a&gt; - để sử dụng lịch sử của trình duyệt và đánh dấu (bookmark).&lt;/p&gt;

&lt;h3 id=&quot;ng-dng-n-gin&quot;&gt;Ứng dụng đơn giản&lt;/h3&gt;

&lt;p class=&quot;text-center&quot;&gt;&lt;a class=&quot;btn btn-info btn-large&quot; href=&quot;http://plnkr.co/edit/tVKCg2gr1VlA3ickPBTN?p=preview&quot; target=&quot;_blank&quot;&gt;&lt;span class=&quot;fa fa-code&quot;&gt;&lt;/span&gt; View Code&lt;/a&gt;
&lt;a class=&quot;btn btn-success btn-large&quot; href=&quot;http://embed.plnkr.co/tVKCg2gr1VlA3ickPBTN/&quot; target=&quot;_blank&quot;&gt;View Demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Để dễ hình dung, chúng ta sẽ xây dựng một site đơn giản với ba trang: home, about, contact. Chúng ta sẽ xây dựng site này trên một trang, nội dung các trang sẽ thay đổi tương ứng mà không cần refresh trình duyệt. AngularJS cho phép xây dựng các ứng dụng nhiều chức năng hơn, nhưng trong ví dụ này, tôi sẽ trình bày những thứ chúng ta cần để có thể phát triển các ứng dụng lớn hơn.&lt;/p&gt;

&lt;p&gt;Routing giúp chúng ta chia nhỏ ứng dụng của mình thành các views một cách logic và móc nối các views khác nhau với các Controller tương ứng.&lt;/p&gt;

&lt;figure&gt;
	&lt;a href=&quot;https://docs.google.com/drawings/d/1WQWuJ2UnLI6hcZHM2CXQ0BRjNEqqqXNeGLgJz-vv5EM/pub?w=480&amp;amp;h=360&quot;&gt;&lt;img src=&quot;https://docs.google.com/drawings/d/1WQWuJ2UnLI6hcZHM2CXQ0BRjNEqqqXNeGLgJz-vv5EM/pub?w=960&amp;amp;h=720&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Trong sơ đồ trên, chúng ta tạo ra ba Route url: /home, /about, và /contact. Mỗi route sẽ sử dụng một view cụ thể và được quản lý bởi một controller.&lt;/p&gt;

&lt;h3 id=&quot;cu-trc-th-mc&quot;&gt;Cấu trúc thư mục&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;index.html
script.js
pages/
---- home.html
---- about.html
---- contact.html&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;html&quot;&gt;HTML&lt;/h3&gt;

&lt;p&gt;Trong ví dụ này, tôi sử dụng CSS Framework &lt;a href=&quot;http://getbootstrap.com/&quot;&gt;Twitter Bootstrap&lt;/a&gt; và &lt;a href=&quot;http://fortawesome.github.io/Font-Awesome/&quot;&gt;FontAwesome&lt;/a&gt;. Từ phiên bản Angular1.2, &lt;code&gt;ngRoute&lt;/code&gt; được tách riêng thành một module, do đó chúng ta cần có lời gọi đến nó trong phần header. Và chúng ta phải có các chỉ thị lệnh (directive) của Angular (&lt;code&gt;ng-app&lt;/code&gt;). Nội dung file &lt;code&gt;index.html&lt;/code&gt; như sau:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/taly2808/0376169f72e2d37ae3de.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Trong đường link dẫn đến các trang, chúng ta sử dụng dấu &lt;code&gt;#&lt;/code&gt; (hash address) để trình duyệt không chuyển đến trang home.html, about.html, contact.html. Và trong nội dung của thẻ div có &lt;code&gt;id=&quot;main&quot;&lt;/code&gt;, chúng ta cần thêm thẻ div với chỉ thị lệnh &lt;code&gt;ng-view&lt;/code&gt; để include template của các route (/home, /about, /contact) trong file layout chính (&lt;code&gt;index.html&lt;/code&gt;).&lt;/p&gt;

&lt;h3 id=&quot;cu-hnh-routes-v-views&quot;&gt;Cấu hình Routes và Views&lt;/h3&gt;
&lt;p&gt;Chúng ta định nghĩa một ứng dụng angular &lt;code&gt;spaApp&lt;/code&gt; sử dụng phương thức &lt;code&gt;angular.module&lt;/code&gt;. Tiếp đến, chúng ta sử dụng phương thức &lt;code&gt;config()&lt;/code&gt; để cấu hình &lt;code&gt;$routeProvider&lt;/code&gt;. $routeProvider cung cấp các phương thức &lt;code&gt;when()&lt;/code&gt;, &lt;code&gt;otherwise()&lt;/code&gt; để định nghĩa các routes trong ứng dụng của chúng ta. Nội dung của file &lt;code&gt;script.js&lt;/code&gt; như sau:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/taly2808/83d19aa063bf87d4bac2.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Trong kịch bản trên, chúng ta định nghĩa ba urls &lt;code&gt;/home&lt;/code&gt;, &lt;code&gt;/about&lt;/code&gt; và &lt;code&gt;/contact&lt;/code&gt; và ánh xạ chúng tới các views tương ứng &lt;code&gt;pages/home.html&lt;/code&gt;, &lt;code&gt;pages/about.html&lt;/code&gt; và &lt;code&gt;pages/contact.html&lt;/code&gt;. Khi chúng ta nhập vào địa chỉ &lt;code&gt;http:myapp/#home&lt;/code&gt; trên trình duyệt, Angular sẽ tự động khớp nó với route mà chúng ta cấu hình và tải template &lt;code&gt;pages/home.html&lt;/code&gt;. Sau đó nó gọi đến HomeController xử lý các tác vụ liên quan đến Home View.&lt;/p&gt;

&lt;p&gt;Chúng ta sử dụng phương thức &lt;code&gt;otherwise()&lt;/code&gt; để định nghĩa route mặc định (default route). Trong trường hợp routeProvider gặp url không phù hợp với bất kỳ url nào đã được khai báo, nó sẽ chuyển đến default route.&lt;/p&gt;

&lt;h3 id=&quot;thm-cc-file-templates-html&quot;&gt;Thêm các file templates HTML&lt;/h3&gt;

&lt;p&gt;Chúng ta cần thêm các file templates, các templates này sẽ được bơm vào layout chính.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;pages/home.html&lt;/em&gt;
&lt;script src=&quot;https://gist.github.com/taly2808/0498e77df4156ebbabde.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;pages/about.html&lt;/em&gt;
&lt;script src=&quot;https://gist.github.com/taly2808/7b34b8adfac19f4ac538.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;pages/contact.html&lt;/em&gt;
&lt;script src=&quot;https://gist.github.com/taly2808/a6102a2f6f67654e769e.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chạy ứng dụng trên local&lt;/strong&gt;: Angular routing chỉ có thể làm việc trong môi trường có web server. Do đó, nếu bạn chạy ứng dụng trên local thì cần chắc chắn rằng bạn sử dụng &lt;code&gt;http://localhost&lt;/code&gt; hoặc thiết lập môi trường cho nó.&lt;/p&gt;

&lt;h2 id=&quot;cch-thc-truyn-tham-s-vo-trong-route-urls&quot;&gt;Cách thức truyền tham số vào trong Route Urls&lt;/h2&gt;

&lt;p&gt;Trong ví dụ trên, chúng ta đã tìm hiểu cách định nghĩa route. Bây giờ chúng ta sẽ tìm hiểu cách định nghĩa tham số trong route urls.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://docs.google.com/drawings/d/1Ie7HOi_fo-J2XycDIG3T2JAYmmXw2L7ivfRf_6Qx5ms/pub?w=923&amp;amp;h=194&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Chúng ta muốn hiển thị chi tiết thông tin của các contact khác nhau. Dựa trên tham số userId, chúng ta sẽ định nghĩa contact detail trên view. Trong Angular, khi định nghĩa route, chúng ta có thể định nghĩa tham số &lt;code&gt;userId&lt;/code&gt; trong url. Trong file &lt;code&gt;script.js&lt;/code&gt;, chúng ta bổ sung phần định tuyến cho contact detail như sau: &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/contact/:userId&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;templateUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;pages/contact-detail.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;ContactDetailController&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Và chúng ta đọc tham số này trong ContactDetailController bằng cách sử dụng &lt;code&gt;$routeParams.userId&lt;/code&gt;. Khi đó, phần định nghĩa ContactDetailController trong file &lt;code&gt;script.js&lt;/code&gt; như sau:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ContactDetailController&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;$scope&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;$routeParams&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$routeParams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$routeParams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}])&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Lưu ý: chúng ta cần truyền tham số &lt;code&gt;$routeParams&lt;/code&gt; vào trong controller, nếu không chúng ta sẽ không thể dùng được nó để lấy tham số truyền vào thông qua url.&lt;/p&gt;

&lt;p&gt;Trong file template &lt;code&gt;pages/contact.html&lt;/code&gt;, nội dung thay đổi như sau:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/taly2808/6cab4af46d134eed7120.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Nội dung của &lt;code&gt;pages/contact-detail.html&lt;/code&gt; như sau:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/taly2808/22211dc7315bf948a74c.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Trong bài viết này, tôi đã đưa ra một ví dụ đơn giản về routing để mọi người có thể định hình được chức năng cơ bản của module &lt;code&gt;ngRoute&lt;/code&gt; trong AngularJS. Trong bài &lt;a href=&quot;/angularjs/tim-hieu-module-ngRoute-trong-angularjs&quot;&gt;Tìm hiểu module ngRoute trong AngularJS&lt;/a&gt; chúng ta sẽ đi sâu vào tìm hiểu các thành phần trong module &lt;code&gt;ngRoute&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;ti-liu-tham-kho&quot;&gt;Tài liệu tham khảo&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.angularjs.org/api/ngRoute/provider/$routeProvider&quot;&gt;AngularJS’s document on $routeProvider&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.angularjs.org/tutorial/step_07&quot;&gt;AngularJS’s document on Routing &amp;amp; Multiple Views&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

  &lt;p&gt;&lt;a href=&quot;http://thapsang.net/angularjs/routing-single-page-application-voi-module-ngRoute-cua-angularjs&quot;&gt;Routing Single Page Application với module ngRoute của AngularJS&lt;/a&gt; was originally published by Ta Ly at &lt;a href=&quot;http://thapsang.net&quot;&gt;THAPSANG.NET&lt;/a&gt; on October 21, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Cấu trúc thư mục cho ứng dụng AngularJS]]></title>
  <link>http://thapsang.net/angularjs/cau-truc-thu-muc-voi-ung-dung-angularjs</link>
  <id>http://thapsang.net/angularjs/cau-truc-thu-muc-voi-ung-dung-angularjs</id>
  <published>2014-10-12T00:00:00+07:00</published>
  <updated>2014-10-12T00:00:00+07:00</updated>
  <author>
    <name>Ta Ly</name>
    <uri>http://thapsang.net</uri>
    <email>taly2808@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Khi bắt đầu xây dựng một ứng dụng AngularJS, có thể bạn không biết chính xác cách thức tổ chức các files, hoặc thậm chí là không biết mình cần những files nào. Trong bài viết này, tôi sẽ trình bày về cách tạo ra một ứng dụng bằng AngularJS và cách tổ chức cấu trúc thư mục với các ứng dụng ở các mức độ khác nhau.&lt;/p&gt;

&lt;section&gt;
  &lt;header&gt;
    &lt;h2&gt;Nội dung&lt;/h2&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#to-ng-dng-n-gin&quot;&gt;Tạo ứng dụng đơn giản&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#typical-struture&quot;&gt;Typical Struture&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#nguyn-tc-lift&quot;&gt;Nguyên tắc LIFT&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#la-chn-cu-trc-khi-ng-dng-ln-dn-ln&quot;&gt;Lựa chọn cấu trúc khi ứng dụng lớn dần lên&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#cu-trc-by-type&quot;&gt;Cấu trúc by type&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cu-trc-by-feature&quot;&gt;Cấu trúc by feature&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#kt-lun&quot;&gt;Kết luận&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;

&lt;h2 id=&quot;to-ng-dng-n-gin&quot;&gt;Tạo ứng dụng đơn giản&lt;/h2&gt;

&lt;p&gt;Bạn chỉ cần 1 thư mục gồm 1 file &lt;code&gt;index.html&lt;/code&gt; và 1 file &lt;code&gt;app.js&lt;/code&gt; như sau:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;app/
----index.html
----app.js&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Trong file &lt;code&gt;index.html&lt;/code&gt;, chúng ta cần gọi đến thư viện angularjs, file &lt;code&gt;app.js&lt;/code&gt; và sử dụng các chỉ thị lệnh (directive) &lt;code&gt;ng-&lt;/code&gt; đã được xây dựng sẵn cho ứng dụng angularjs. Bạn có thể tìm hiểu thêm trong &lt;a href=&quot;https://docs.angularjs.org/guide&quot;&gt;tài liệu về AngularJS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Hiện nay, việc sử dụng cấu trúc thư mục ứng dụng như thế nào là tốt nhất đang là vấn đề được quan tâm đối với một số nhà phát triển. Dĩ nhiên, không có mô hình nào được coi là hoàn hảo. Tôi sẽ trình bày các xu hướng cấu trúc thư mục đang được áp dụng hiện nay.&lt;/p&gt;

&lt;h2 id=&quot;typical-struture&quot;&gt;Typical Struture&lt;/h2&gt;

&lt;p&gt;Trong đa số các tutorial hướng dẫn về angularjs, cấu trúc thư mục được áp dụng như sau: &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;app/
----- controllers/
---------- mainController.js
---------- otherController.js
----- directives/
---------- mainDirective.js
---------- otherDirective.js
----- services/
---------- userService.js
---------- itemService.js
----- js/
---------- bootstrap.js
---------- jquery.js
----- app.js
assets/
----- img/      // Images and icons &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; your app
----- css/      // All styles and style related files &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;SCSS or LESS files&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
----- js/       // JavaScript files written &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; your app that are not &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; angular
----- libs/     // Third-party libraries such as jQuery, Moment, Underscore, etc.
views/
----- mainView.html
----- otherView.html
----- index.html&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Đây là cấu trúc đặc trưng thường thấy. Với cấu trúc này, chúng ta tách riêng từng loại file vào chung một thư mục, controllers có thư mục riêng cho controllers, directives có thư mục riêng cho directives, …. Nó khá giống với cách tổ chức của các MVC framework. Cấu trúc này phù hợp với các ví dụ và các &lt;strong&gt;ứng dụng nhỏ&lt;/strong&gt; và cho những người mới bắt đầu tìm hiểu AngularJS vì nó giúp cho người đọc dễ hình dung và có thể khái quát hóa các khái niệm đang được nghiên cứu.&lt;/p&gt;

&lt;h2 id=&quot;nguyn-tc-lift&quot;&gt;Nguyên tắc LIFT&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/John_Papa&quot;&gt;John Papa&lt;/a&gt; đưa ra nguyên tắc khi cấu trúc thư mục rất hữu ích trong bài viết &lt;a href=&quot;http://www.johnpapa.net/angular-app-structuring-guidelines/&quot;&gt;Angular App Structuring Guidelines&lt;/a&gt; đó là &lt;strong&gt;LIFT&lt;/strong&gt; (Locating - Indenty - Flat - T-DRY).&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Locating&lt;/strong&gt;: dễ dàng định vị được file cần tìm.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Indentify&lt;/strong&gt;: xác định được đoạn code chúng ta cần tìm một cách nhanh chóng.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Flat&lt;/strong&gt;: làm phẳng cấu trúc nhất có thể.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;T-DRY&lt;/strong&gt;: cố gắng để không lặp lại những gì đã làm (Try to Don’t Repeat Yourself).&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;la-chn-cu-trc-khi-ng-dng-ln-dn-ln&quot;&gt;Lựa chọn cấu trúc khi ứng dụng lớn dần lên&lt;/h2&gt;

&lt;p&gt;Có nhiều cách để tổ chức thư mục. Ở đây, chúng ta tập trung vào 2 cách cấu trúc: By Type (theo loại file) và By Feature (theo đặc tính).&lt;/p&gt;

&lt;figure&gt;
	&lt;a href=&quot;http://thapsang.net/assets/img/NgStructureCompare.jpg&quot;&gt;&lt;img src=&quot;http://thapsang.net/assets/img/NgStructureCompare.jpg&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;h3 id=&quot;cu-trc-by-type&quot;&gt;Cấu trúc by type&lt;/h3&gt;

&lt;p&gt;Với cấu trúc by type theo cột bên trái, sẽ phù hợp với các ứng dụng nhỏ. Khi các chức năng nhiều dần lên, giả sử chúng ta có nhiều hơn 10 controllers, directives, views, và chúng ta muốn thay đổi một nội dung naò đó. Khi đó, chúng ta vẫn có thể xác định được các files cần thiết trong từng thư mục riêng biệt nhưng sẽ khó khăn trong việc tìm thấy file đó ngay lập tức trong cả mớ file controller, directive, views, …. Khi đó, chúng ta chuyển sang cấu trúc theo tính năng (by feature).&lt;/p&gt;

&lt;h3 id=&quot;cu-trc-by-feature&quot;&gt;Cấu trúc by feature&lt;/h3&gt;

&lt;p&gt;Với cấu trúc &lt;code&gt;by feature&lt;/code&gt; (cột bên phải hình), chúng ta sẽ nhóm các files có liên quan đến một tính năng nào đó vào trong cùng một thư mục. Nó sẽ bao gồm các file view, directive , controller, service cho tính năng đó. Chúng ta có thể coi mỗi một folder theo feature là một mô hình MVC thu nhỏ. Với cách này, khi cần thay đổi một tính năng nào đó, chúng ta có thể dễ dàng và nhanh chóng xác định được vị trí và đoạn code chúng ta cần làm việc, nó giúp chúng rút ngắn được thời gian phát triển của dự án.&lt;/p&gt;

&lt;h2 id=&quot;kt-lun&quot;&gt;Kết luận&lt;/h2&gt;
&lt;p&gt;Có rất nhiều cách để tổ chức cấu trúc thư mục ứng dụng và không có cách nào là hoàn hảo. Chúng ta dựa trên quy mô ứng dụng để chọn một cấu trúc phù hợp với ứng dụng của mình. Các bạn cũng có thể tự tạo ra cấu trúc của riêng mình ;). Và điều quan trọng nhất vẫn là cấu trúc phải rõ ràng và chúng ta có thể dễ dàng và nhanh chóng xác định được cái mà chúng ta cần làm.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://thapsang.net/angularjs/cau-truc-thu-muc-voi-ung-dung-angularjs&quot;&gt;Cấu trúc thư mục cho ứng dụng AngularJS&lt;/a&gt; was originally published by Ta Ly at &lt;a href=&quot;http://thapsang.net&quot;&gt;THAPSANG.NET&lt;/a&gt; on October 12, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Quản lý tài nguyên public trong Laravel 4 với Asset Pipeline]]></title>
  <link>http://thapsang.net/laravel/quan-ly-tai-nguyen-public-trong-laravel-voi-asset-pipeline</link>
  <id>http://thapsang.net/laravel/quan-ly-tai-nguyen-public-trong-laravel-voi-asset-pipeline</id>
  <published>2014-10-04T00:00:00+07:00</published>
  <updated>2014-10-04T00:00:00+07:00</updated>
  <author>
    <name>Ta Ly</name>
    <uri>http://thapsang.net</uri>
    <email>taly2808@gmail.com</email>
  </author>
  <content type="html">&lt;figure&gt;
	&lt;a href=&quot;http://thapsang.net/assets/img/pipeline.jpg&quot;&gt;&lt;img src=&quot;http://thapsang.net/assets/img/pipeline.jpg&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Trong laravel 4, có nhiều cách để bạn quản lý các tài nguyên css, js, hình ảnh của mình. Trong bài này, tôi sẽ giới thiệu với bạn một cách để quản lý các tài nguyên (assets) để chúng có thể phục vụ trình duyệt một cách hiệu quả nhất có thể với Asset Pipeline.&lt;/p&gt;

&lt;p&gt;Laravel 4 không có sẵn tính năng này. Nhưng bạn hoàn toàn có thể cài đặt một package từ cộng đồng để có được chức năng tuyệt vời này trong project của bạn.&lt;/p&gt;

&lt;p&gt;Note: &lt;strong&gt;Asset Pipeline&lt;/strong&gt; có thể hiểu là đường ống dẫn tài nguyên. Trong khuôn khổ bài viết, tôi sẽ sử dụng từ &lt;strong&gt;Asset Pipeline&lt;/strong&gt; để bạn có thể quen với từ này và tìm kiếm tài liệu cũng như kiến thức liên quan bằng tiếng Anh được dễ hơn.&lt;/p&gt;

&lt;section&gt;
  &lt;header&gt;
    &lt;h2&gt;Nội dung&lt;/h2&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#what-is-an-asset-pipeline&quot;&gt;What is an asset pipeline?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#install-asset-pipeline&quot;&gt;Install Asset Pipeline&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#working-with-asset-pipeline&quot;&gt;Working with asset pipeline&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#configuration-options&quot;&gt;Configuration options&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;

&lt;h2 id=&quot;what-is-an-asset-pipeline&quot;&gt;What is an asset pipeline?&lt;/h2&gt;

&lt;p&gt;Trước tiên, có lẽ tôi nên giải thích chính xác thì nó là cái gì.&lt;/p&gt;

&lt;p&gt;Khi triển khai một website trên Internet, trình duyệt phải lấy tất cả các assets (bao gồm các file css, js, images) để tạo nên trang web. Do đó, để lấy được mỗi tập tin CSS hay Javascript, trình duyệt cần tạo ra các request riêng. Theo thời gian, các file CSS và Javascript có thể sẽ lớn dần lên, nếu bạn làm với các project lớn.&lt;/p&gt;

&lt;p&gt;Asset pipeline sẽ tự động kết hợp tất cả các files tài nguyên vào trong một file duy nhất và tối thiểu hóa (minify) code trong đó. Điều đó có nghĩa là trình duyệt chỉ phải thực hiện &lt;strong&gt;1&lt;/strong&gt; request duy nhất, kích cỡ file cũng giảm đi đáng kể và nó sẽ có ảnh hưởng lớn đến hiệu năng của trang web.&lt;/p&gt;

&lt;p&gt;Thời gian gần đây, các developers có xu hướng viết CSS sử dụng LESS hoặc SASS, hoặc họ dùng CoffeeScript thay vì Javascript thông thường. Asset pipeline cũng sẽ tự động biên dịch tất cả chúng thành một file CSS hoặc Javascript thông thường.&lt;/p&gt;

&lt;p&gt;Thêm nữa là, asset pipeline cũng sẽ tự động cache các files stylesheets và javascripts khi bạn triển khai trong môi trường production. Do đó, các files này sẽ không phải download lại mỗi lần tải lại trang nếu chúng không có gì thay đổi.&lt;/p&gt;

&lt;p&gt;Đó là các lý do tại sao bạn nên sử dụng asset pipeline. Asset pipeline có rất nhiều lợi ích tuyệt vời, ngay cả khi bạn không có ý định sử dụng một bộ tiền xử lý (preprocessor) (như LESS hay SASS) hay chỉ muốn viết javascript thuần :).&lt;/p&gt;

&lt;h2 id=&quot;install-asset-pipeline&quot;&gt;Install Asset Pipeline&lt;/h2&gt;

&lt;p&gt;Hiện tại, tôi đang sử dụng package &lt;a href=&quot;https://github.com/CodeSleeve/asset-pipeline&quot;&gt;Asset Pipeline&lt;/a&gt; này trong các project của mình.&lt;/p&gt;

&lt;p&gt;Để cài đặt package, đơn giản là bạn chỉ cần thêm dòng sau dưới đây vào file &lt;code&gt;composer.json&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;require&amp;quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;codesleeve/asset-pipeline&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;dev-master&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tiếp đó, bạn chạy lệnh sau để cập nhật các phụ thuộc và tải package &lt;strong&gt;asset pineline&lt;/strong&gt; về:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;composer update&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tiếp đến, chúng ta cần nói cho Laravel biết về service provider (người cung cấp dịch vụ). Bạn thêm dòng code dưới dây vào phần &lt;code&gt;providers&lt;/code&gt; trong file &lt;code&gt;app/config/app.php&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;Codesleeve\AssetPipeline\AssetPipelineServiceProvider&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sau đó, asset pipeline sẽ có các cách hành xử khác nhau phụ thuộc vào môi trường bạn đang thiết lập. Trong môi trường production, tất cả các file của bạn sẽ được nén lại (compress), ghép nối với nhau (concatenate) và sao lưu (cache). Nếu bạn không muốn điều đó xảy ra trong môi trường developing, bạn cần thiết lập chính xác môi trường triển khai của mình. Để chắc chắn rằng bạn đang thiết lập môi trường &lt;strong&gt;local&lt;/strong&gt; cho project của mình, bạn kiểm tra phần thiết lập môi trường trong file &lt;code&gt;bootstrap/start.php&lt;/code&gt; như sau:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$env = $app-&amp;gt;detectEnvironment(array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	&amp;#39;local&amp;#39; =&amp;gt; array(&amp;#39;localhost&amp;#39;),&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Cuối cùng, bạn cần tạo ra các files asset của riêng mình bằng cách nhập vào lệnh sau từ Terminal: &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;php artisan assets:setup&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;working-with-asset-pipeline&quot;&gt;Working with asset pipeline&lt;/h2&gt;

&lt;p&gt;Và giờ, project của bạn đã được cài đặt asset pipeline. Bạn sẽ thấy có thêm vài thư mục mới trong project. Đó là thư mục &lt;code&gt;assets&lt;/code&gt; ở dưới thư mục &lt;code&gt;app/&lt;/code&gt;, và thư mục &lt;code&gt;provider/&lt;/code&gt; ngang hàng với thư mục &lt;code&gt;app/&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/provider/assets/javascripts/jquery.min.js
/provider/assets/stylesheets/readme.txt
/app/assets/javascripts/application.js
/app/assets/images/readme.txt
/app/assets/stylesheets/application.css&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Hai files &lt;code&gt;/app/assets/javascripts/application.js&lt;/code&gt; và &lt;code&gt;/app/assets/stylesheets/application.css&lt;/code&gt; sẽ bao gồm tất cả các files tài nguyên khác trong cùng thư mục và chúng ta sử dụng chúng để cung cấp các tài nguyên cho trang web.&lt;/p&gt;

&lt;p&gt;Để thêm các asset files vào trong HTML template, bạn thêm hai thẻ sau:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stylesheet_link_tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;javascript_include_tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Hai thẻ trên sẽ generate ra chính xác thẻ &lt;code&gt;link&lt;/code&gt; và &lt;code&gt;script&lt;/code&gt; khi bạn chạy trên trình duyệt:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://localhost:8000/assets/application.css&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://localhost:8000/assets/application.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Bạn có thể thêm hình ảnh vào views một cách dễ dàng với thẻ &lt;code&gt;image_tag()&lt;/code&gt;. Giả sử, bạn có hình ảnh về chú chim Tweety đặt trong file &lt;code&gt;app/assets/images/tweety.png&lt;/code&gt;, bạn sẽ thay thế hình ảnh icon Laravel bằng hình ảnh Tweety Bird. Bạn thay thế nội dung trong phần body của file &lt;code&gt;app/views/hello.php&lt;/code&gt; thành: &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;&amp;lt;div class=&amp;quot;welcome&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;image_tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;tweety.png&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;alt&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Tweety&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;&amp;lt;h1&amp;gt;You have arrived.&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Bạn mở trình duyệt và gõ vào địa chỉ &lt;code&gt;http://localhost:8000&lt;/code&gt; (tùy thuộc vào cổng khi bạn chạy lệnh &lt;code&gt;php artisan serve&lt;/code&gt; nhé :D) và Enter, kết quả sẽ như thế này: &lt;/p&gt;

&lt;figure&gt;
	&lt;a href=&quot;http://thapsang.net/assets/img/welcome_laravel.jpg&quot;&gt;&lt;img src=&quot;http://thapsang.net/assets/img/image-tag-demo.png&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Hình ảnh chú Tweety Bird của bạn sẽ được tải lên với đường dẫn &lt;code&gt;http://localhost:8000/assets/tweety.png&lt;/code&gt;. Bạn có thể sử dụng Bug Tool để xác nhận lại ;).&lt;/p&gt;

&lt;h2 id=&quot;configuration-options&quot;&gt;Configuration options&lt;/h2&gt;

&lt;p&gt;Bạn cũng có thể thay đổi các cấu hình mặc định của package &lt;strong&gt;asset pipeline&lt;/strong&gt; này. Để làm được việc đó, bạn chạy dòng lệnh sau: &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;php artisan config:publish codesleeve/asset-pipeline&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Với việc thi hành lệnh trên, nó sẽ generate ra file cấu hình asset pipeline cho project cụ thể của bạn và nó sẽ tự động ghi đè lên các thiết lập mặc định. Bạn sẽ tìm thấy file cấu hình mà bạn có thể sửa trong thư mục &lt;code&gt;app/config/packages&lt;/code&gt;. Bạn hãy xem thêm &lt;a href=&quot;https://github.com/CodeSleeve/asset-pipeline#configuration&quot;&gt;tài liệu&lt;/a&gt; để có những giải thích chi tiết hơn về các tùy chọn cấu hình.&lt;/p&gt;

&lt;p&gt;Hy vọng bạn đã có thể quản lý các asset của mình một cách dễ dàng. Have fun! ;)&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://thapsang.net/laravel/quan-ly-tai-nguyen-public-trong-laravel-voi-asset-pipeline&quot;&gt;Quản lý tài nguyên public trong Laravel 4 với Asset Pipeline&lt;/a&gt; was originally published by Ta Ly at &lt;a href=&quot;http://thapsang.net&quot;&gt;THAPSANG.NET&lt;/a&gt; on October 04, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Xóa cache views trong laravel 4 với Artisan command]]></title>
  <link>http://thapsang.net/laravel/xoa-cache-view-trong-laravel-4-voi-artisan-command</link>
  <id>http://thapsang.net/laravel/xoa-cache-view-trong-laravel-4-voi-artisan-command</id>
  <published>2014-10-03T00:00:00+07:00</published>
  <updated>2014-10-03T00:00:00+07:00</updated>
  <author>
    <name>Ta Ly</name>
    <uri>http://thapsang.net</uri>
    <email>taly2808@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Khi phát triển ứng dụng với laravel 4, có sự thay đổi trên view nhưng khi reload ứng dụng thì bạn không hề thấy có sự thay đổi. Mặc dù đã xóa cache với lệnh &lt;code&gt;php artisan cache:clear&lt;/code&gt; nhưng vẫn không khả quan hơn. Lý do là ứng dụng của chúng ta còn lưu lại cache của views trong thư mục &lt;code&gt;app/storage/views&lt;/code&gt;. Bạn có thể truy cập vào thư mục &lt;code&gt;app/storage/views&lt;/code&gt; và xóa hết các files trong thư mục này đi. Với cách làm thủ công này chắc chắn sẽ khiến bạn phát rồ lên. Trong bài này, tôi sẽ chỉ cho bạn cách xóa views cache dễ như ăn kẹo vậy :).&lt;/p&gt;

&lt;p&gt;Chúng ta sẽ chỉ cần chạy lệnh &lt;code&gt;php artisan views:clear&lt;/code&gt; là giải quyết được vấn đề với views cache. Để làm được việc đó, chúng ta cần làm những việc sau:&lt;/p&gt;

&lt;section&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#building-a-command&quot;&gt;Building A Command&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#registering-command&quot;&gt;Registering Command&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#run-command&quot;&gt;Run Command&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;

&lt;h2 id=&quot;building-a-command&quot;&gt;Building A Command&lt;/h2&gt;

&lt;p&gt;Laravel cho phép chúng ta tự tạo ra các lệnh của riêng mình. Để tạo một lệnh mới, bạn mở trình Terminal lên, di chuyển đến thư mục chứa project và nhập vào dòng lệnh sau:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;php artisan command:make ViewsCommand&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Với lệnh trên, file &lt;code&gt;ViewsCommand.php&lt;/code&gt; sẽ được generate vào thư mục &lt;code&gt;app/commands&lt;/code&gt;. Tiếp đến, bạn copy đoạn code dưới đây vào file &lt;code&gt;ViewsCommand.php&lt;/code&gt;. Bạn có thể xem thêm chi tiết về cách viết Artisan Command tại &lt;a href=&quot;http://laravel.com/docs/4.2/commands&quot;&gt;Artisan Development&lt;/a&gt; :&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/taly2808/ae1317a7ef1fbde9b575.js&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;registering-command&quot;&gt;Registering Command&lt;/h2&gt;

&lt;p&gt;Sau khi &lt;code&gt;ViewsCommand&lt;/code&gt; được hoàn tất, bạn cần đăng ký nó với Artisan để có thể sử dụng nó. Bạn mở file &lt;code&gt;app/start/artisan.php&lt;/code&gt; và sử dụng method &lt;code&gt;Artisan::add&lt;/code&gt; để đăng ký như sau:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;Artisan::add(new ViewsCommand);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;run-command&quot;&gt;Run Command&lt;/h2&gt;

&lt;p&gt;Bây giờ, bạn đã có thể xóa cache views một cách dễ dàng bằng cách chạy lệnh &lt;code&gt;php artisan views:clear&lt;/code&gt;. Kết quả như sau:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;php artisan views:clear
Views deleted from cache&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Hy vọng có thể giúp các bạn giải quyết được vấn đề của mình. Have fun! ;)&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://thapsang.net/laravel/xoa-cache-view-trong-laravel-4-voi-artisan-command&quot;&gt;Xóa cache views trong laravel 4 với Artisan command&lt;/a&gt; was originally published by Ta Ly at &lt;a href=&quot;http://thapsang.net&quot;&gt;THAPSANG.NET&lt;/a&gt; on October 03, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Hướng dẫn cài đặt Laravel 4]]></title>
  <link>http://thapsang.net/laravel/huong-dan-cai-dat-laravel</link>
  <id>http://thapsang.net/laravel/huong-dan-cai-dat-laravel</id>
  <published>2014-09-27T00:00:00+07:00</published>
  <updated>2014-09-27T00:00:00+07:00</updated>
  <author>
    <name>Ta Ly</name>
    <uri>http://thapsang.net</uri>
    <email>taly2808@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Có nhiều cách để cài đặt Laravel. Trong bài viết này, tôi sẽ trình bày các cách cài đặt Laravel trên Linux và trên Windows từ mọi thứ mà Laravel yêu cầu. Bạn sẽ biết cài đặt PHP, MySQL, MCrypt, Composer và mọi thứ để ứng dụng của bạn có thể chạy :).&lt;/p&gt;

&lt;section&gt;
  &lt;header&gt;
    &lt;h2&gt;Nội dung&lt;/h2&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#system-requirements&quot;&gt;System Requirements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#install-php&quot;&gt;Install PHP&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#using-lampp-or-xampp&quot;&gt;Using LAMPP or XAMPP&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#from-scratch&quot;&gt;From Scratch&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#install-composer&quot;&gt;Install Composer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#install-laravel&quot;&gt;Install Laravel&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#via-composer&quot;&gt;Via Composer&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#via-laravel-installer&quot;&gt;Via Laravel Installer&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#run-your-fisrt-app&quot;&gt;Run your fisrt app&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;

&lt;h2 id=&quot;system-requirements&quot;&gt;System Requirements&lt;/h2&gt;

&lt;p&gt;Để chạy được Laravel, chúng ta cần:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;PHP &amp;gt;= 5.4 (phiên bản 5.4 hoặc mới hơn)&lt;/li&gt;
  &lt;li&gt;MCrypt PHP Extension&lt;/li&gt;
  &lt;li&gt;Composer&lt;/li&gt;
  &lt;li&gt;Laravel&lt;/li&gt;
  &lt;li&gt;Openssl phải được enabled trong file &lt;code&gt;php.ini&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;install-php&quot;&gt;Install PHP&lt;/h2&gt;

&lt;p&gt;Trước hết, bạn kiểm tra PHP đã được cài đặt trên máy hay chưa với lệnh:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;php -v&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nếu kết quả hiển thị như dưới đây, tức là bạn đã cài đặt thành công PHP trên máy tính và bạn có thể bỏ qua phần cài đặt PHP này.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;PHP 5.5.11 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;cli&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;built: Apr  &lt;span class=&quot;m&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2014&lt;/span&gt; 15:07:14&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Copyright &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;c&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 1997-2014 The PHP Group
Zend Engine v2.5.0, Copyright &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;c&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 1998-2014 Zend Technologies&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nếu phiên bản PHP của bạn nhỏ hơn 5.4 hoặc không có phiên bản nào, bạn cần phải cài đặt PHP. Bạn có thể lựa chọn cài đặt đủ bộ AMP (Apache + MySQL + PHP) bằng cách cài đặt LAMPP (cho Linux) hoặc XAMPP (cho Windows). Hoặc bạn có thể cài trực tiếp các thành phần riêng lẻ.&lt;/p&gt;

&lt;h3 id=&quot;using-lampp-or-xampp&quot;&gt;Using LAMPP or XAMPP&lt;/h3&gt;

&lt;p&gt;Nếu bạn ngại phải cài đặt từng thứ rời rạc, và lo ngại không biết mình có cài đặt và cấu hình đúng không, bạn có thể cài đặt XAMPP để có môi trường đã được tích hợp đầy đủ PHP, Apache2, MySQL, Perl với phiên bản mới nhất. Và một điều rất tuyệt nữa đó là &lt;strong&gt;MCrypt&lt;/strong&gt; đã có sẵn trong XAMPP, do đó bạn không còn phải lo lắng về nó nữa.&lt;strong&gt;Nếu bạn dùng Windows, tôi khuyến nghị bạn nên cài đặt PHP theo cách này&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Để cài đặt XAMPP, bạn cần download &lt;a href=&quot;https://www.apachefriends.org/download.html&quot;&gt;XAMPP&lt;/a&gt; phiên bản phù hợp với máy tính của bạn về. Sauu đó tiến hành cài đặt lên máy tính của bạn.&lt;/p&gt;

&lt;p&gt;Sau khi hoàn tất, XAMPP được cài đặt vào trong thư mục &lt;strong&gt;/opt/lampp&lt;/strong&gt; với Linux, và trong thư mục C:\xampp trên Windows (nếu bạn chọn ổ C khi cài đặt). Bạn chạy lại lệnh &lt;code&gt;php -v&lt;/code&gt; để kiểm tra kết quả.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Trên Windows, nếu bạn đã cài đặt XAMPP mà vẫn bị báo lỗi không có phiên bản, bạn cần thiết lập &lt;strong&gt;PATH&lt;/strong&gt; với lệnh &lt;code&gt;set PATH=%PATH%;C:\path\to\php&lt;/code&gt; trong đó &lt;code&gt;\path\to\php&lt;/code&gt; là đường dẫn đến thư mục chứa file &lt;code&gt;php.exe&lt;/code&gt;. Giả sử, bạn sử dụng xampp, khi đó bạn nhập vào dòng lệnh sau:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;C:&lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%PATH%&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;C:&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;ampp&lt;span class=&quot;se&quot;&gt;\p&lt;/span&gt;hp&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sau khi cài đặt XAMPP, bạn cần &lt;strong&gt;Enable OpenSSL&lt;/strong&gt; bằng cách mở file &lt;code&gt;php.ini&lt;/code&gt; (tại thư mục C:/xampp/php), tìm: &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;extension&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;php_openssl.dll&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;và bỏ dấu &lt;code&gt;;&lt;/code&gt; phía trước, khi đó, trông nó thế này:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;extension&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;php_openssl.dll&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Okay, bây giờ thì restart Apache.&lt;/p&gt;

&lt;h3 id=&quot;from-scratch&quot;&gt;From Scratch&lt;/h3&gt;
&lt;p&gt;(Sử dụng cho Linux).&lt;/p&gt;

&lt;p&gt;Nhập vào Terminal các lệnh sau:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo apt-get update
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo apt-get install php5-common libapache2-mod-php5 php5-cli&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sau đó, bạn chạy lại lệnh &lt;code&gt;php -v&lt;/code&gt; để kiểm tra phiên bản PHP.&lt;/p&gt;

&lt;h2 id=&quot;install-composer&quot;&gt;Install Composer&lt;/h2&gt;

&lt;p&gt;Laravel sử dụng &lt;a href=&quot;http://getcomposer.org/&quot;&gt;Composer&lt;/a&gt; để quản lý các thư viện phụ thuộc. Bạn tham khảo bài viết &lt;a href=&quot;/laravel/huong-dan-cai-dat-composer&quot;&gt;hướng dẫn cài đặt Composer&lt;/a&gt; để có thể cài đặt Composer. Tôi khuyến nghị bạn nên cài đặt Composer sử dụng cho toàn hệ thống (globally). &lt;/p&gt;

&lt;p&gt;Bạn có thể kiểm tra Composer đã được cài đặt hay chưa bằng cách mở Terminal và chạy lệnh sau:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;composer --version
Composer version b33da336ecb7f1c9b15a57285e5a9f09cf5f3dd2 2014-09-30 15:28:01&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nếu kết quả hiển thị như trên thì chắc chắn bạn đã cài composer thành công trên máy tính của mình.&lt;/p&gt;

&lt;h2 id=&quot;install-laravel&quot;&gt;Install Laravel&lt;/h2&gt;

&lt;p&gt;Bạn có thể cài đặt Laravel bằng 1 trong 2 cách dưới đây:&lt;/p&gt;

&lt;h3 id=&quot;via-composer&quot;&gt;Via Composer&lt;/h3&gt;

&lt;p&gt;(Khuyến nghị bạn nên sử dụng cách này).&lt;/p&gt;

&lt;p&gt;Nếu bạn dùng XAMPP, bạn cần di chuyển bằng command line đến thư mục webroot ( &lt;code&gt;/opt/lampp/htdocs&lt;/code&gt; trên Linux và &lt;code&gt;C:\xampp\htdocs&lt;/code&gt; trên Windows). Bạn muốn tạo mới một project có tên &lt;strong&gt;test_laravel&lt;/strong&gt;, bạn nhập vào Terminal (trình command line trên Windows) như sau:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /opt/lampp/htdocs
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;composer create-project laravel/laravel test_laravel --prefer-dist&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Trên Windows sẽ thế này:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;C:&lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;xampp&lt;span class=&quot;se&quot;&gt;\h&lt;/span&gt;tdocs
C:&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;ampp&lt;span class=&quot;se&quot;&gt;\h&lt;/span&gt;tdocs&amp;gt; composer create-project laravel/laravel test_laravel --prefer-dist&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Composer sẽ tự động tạo project cho bạn, và bạn chỉ cần ngồi đợi thông báo &lt;strong&gt;successfull&lt;/strong&gt; thôi.&lt;/p&gt;

&lt;h3 id=&quot;via-laravel-installer&quot;&gt;Via Laravel Installer&lt;/h3&gt;

&lt;p&gt;Trước tiên, bạn cần download Laravel Installer. Có 2 cách:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Cách 1: Sử dụng Composer. Nhập vào Terminal lệnh sau:&lt;/p&gt;

  &lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&amp;gt; composer global require &lt;span class=&quot;s2&quot;&gt;&amp;quot;laravel/installer=~1.1&amp;quot;&lt;/span&gt;
&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Cách 2: Download &lt;a href=&quot;http://laravel.com/laravel.phar&quot;&gt;Laravel Installer&lt;/a&gt; , đổi tên thành &lt;code&gt;laravel&lt;/code&gt;.
Tiếp đến, copy file &lt;code&gt;laravel&lt;/code&gt; sang thư mục &lt;code&gt;/urs/local/bin&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tạo project &lt;strong&gt;test_laravel&lt;/strong&gt; bằng câu lệnh:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;laravel new test_laravel&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sau khi tạo xong project, bạn cần cấp quyền ghi cho web server vào thư mục &lt;code&gt;app/storage&lt;/code&gt;. Nếu bạn dùng Linux, bạn di chuyển đến thư mục chứa project và sử dụng lệnh sau:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo chmod -R &lt;span class=&quot;m&quot;&gt;777&lt;/span&gt; app/storage&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;run-your-fisrt-app&quot;&gt;Run your fisrt app&lt;/h2&gt;

&lt;p&gt;Bạn đã có project, bạn cần khởi động nó bằng cách sử dụng Artisan - một command line interface của Laravel. Đơn giản là bạn chỉ cần di chuyển đến project:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;test_laravel&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;và thực thi lệnh: &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;php artisan server&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Bạn sẽ thấy kết quả: &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Laravel development server started on http://localhost:8000&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Mở trình duyệt web và gõ vào địa chỉ &lt;code&gt;http://localhost:8000&lt;/code&gt;, tận hưởng thành quả nào:&lt;/p&gt;
&lt;figure&gt;
	&lt;a href=&quot;http://thapsang.net/assets/img/welcome_laravel.jpg&quot;&gt;&lt;img src=&quot;http://thapsang.net/assets/img/welcome_laravel.jpg&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

  &lt;p&gt;&lt;a href=&quot;http://thapsang.net/laravel/huong-dan-cai-dat-laravel&quot;&gt;Hướng dẫn cài đặt Laravel 4&lt;/a&gt; was originally published by Ta Ly at &lt;a href=&quot;http://thapsang.net&quot;&gt;THAPSANG.NET&lt;/a&gt; on September 27, 2014.&lt;/p&gt;</content>
</entry>

</feed>
